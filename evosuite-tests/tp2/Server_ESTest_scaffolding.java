/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Jun 13 19:53:18 ART 2016
 */

package tp2;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;

@EvoSuiteClassExclude
public class Server_ESTest_scaffolding {

  @org.junit.Rule 
  public org.junit.rules.Timeout globalTimeout = new org.junit.rules.Timeout(4000); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);

  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "tp2.Server"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 


  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Server_ESTest_scaffolding.class.getClassLoader() ,
      "korat.finitization.impl.FieldDomain",
      "korat.finitization.impl.ClassDomain",
      "korat.testing.ITester",
      "korat.finitization.impl.PrimitiveTypeSet",
      "korat.finitization.IDoubleSet",
      "korat.instrumentation.IKoratTouchable",
      "tp2.ITime",
      "korat.finitization.IFinitization",
      "tp2.IPBan",
      "korat.finitization.impl.IntSet",
      "korat.finitization.IIntSet",
      "tp2.Node",
      "tp2.StrictlySortedSinglyLinkedList",
      "korat.finitization.impl.Finitization",
      "korat.finitization.IByteSet",
      "korat.finitization.impl.ArrayElementCVElem",
      "korat.instrumentation.IKoratArray",
      "korat.finitization.IArraySet",
      "korat.finitization.impl.ObjSet",
      "korat.finitization.IFloatSet",
      "tp2.Server",
      "korat.finitization.ILongSet",
      "korat.finitization.IFieldDomain",
      "tp2.RealTime",
      "tp2.Entry",
      "korat.finitization.impl.FinitizationFactory",
      "korat.finitization.IBooleanSet",
      "korat.finitization.impl.NullClassDomain",
      "tp2.IP",
      "korat.finitization.IFinitizationFactory",
      "korat.finitization.impl.StateSpace",
      "korat.finitization.IPrimitiveTypeSet",
      "korat.finitization.impl.CVElem",
      "korat.finitization.IObjSet",
      "korat.finitization.IClassDomain",
      "korat.finitization.IShortSet",
      "korat.utils.ReflectionUtils",
      "tp2.SinglyLinkedList"
    );
  } 
}
