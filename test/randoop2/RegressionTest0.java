package randoop2;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

  public static boolean debug = false;

  @Test
  public void test001() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test001"); }


    korat.finitization.IFinitization iFinitization1 = tp2.Server.finServer(1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iFinitization1);

  }

  @Test
  public void test002() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test002"); }


    korat.finitization.IFinitization iFinitization1 = tp2.Server.finServer(10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iFinitization1);

  }

  @Test
  public void test003() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test003"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.IP iP5 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b6 = server0.addException(iP5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);

  }

  @Test
  public void test004() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test004"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b3 = server0.addException(iP2);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);

  }

  @Test
  public void test005() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test005"); }


    tp2.Server server0 = new tp2.Server();
    tp2.IP iP1 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b2 = server0.addException(iP1);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test006() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test006"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    tp2.IP iP5 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b6 = server0.addException(iP5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);

  }

  @Test
  public void test007() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test007"); }


    korat.finitization.IFinitization iFinitization1 = tp2.Server.finServer(0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iFinitization1);

  }

  @Test
  public void test008() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test008"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b7 = server0.addException(iP6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test009() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test009"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b6 = server0.addException(iP5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);

  }

  @Test
  public void test010() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test010"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = server0.addException(iP7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508994742, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508994742, exceptions=(), bans={}]"));

  }

  @Test
  public void test011() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test011"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b4 = server0.addException(iP3);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);

  }

  @Test
  public void test012() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test012"); }


    korat.finitization.IFinitization iFinitization1 = tp2.Server.finServer((-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iFinitization1);

  }

  @Test
  public void test013() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test013"); }


    // The following exception was thrown during execution in test generation
    try {
      korat.finitization.IFinitization iFinitization1 = tp2.Server.finServer(100);
      org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException");
    } catch (java.lang.IndexOutOfBoundsException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IndexOutOfBoundsException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test014() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test014"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b7 = server0.addException(iP6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508994867L);

  }

  @Test
  public void test015() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test015"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    server0.update();
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508994913L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test016() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test016"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test017() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test017"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    server0.update();
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);

  }

  @Test
  public void test018() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test018"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.IP iP6 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b7 = server0.addException(iP6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);

  }

  @Test
  public void test019() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test019"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    long long9 = server5.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server5.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server12.setTime(iTime20);
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP24 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b25 = server0.addException(iP24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465508994992L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);

  }

  @Test
  public void test020() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test020"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    long long10 = server0.getLastUpdate();
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508994996L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508994996L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465508994996L);

  }

  @Test
  public void test021() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test021"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b7 = server0.addException(iP6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);

  }

  @Test
  public void test022() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test022"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);

  }

  @Test
  public void test023() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test023"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.IP iP5 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b6 = server0.addException(iP5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);

  }

  @Test
  public void test024() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test024"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test025() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test025"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.IP iP25 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b26 = server0.addException(iP25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465508995082, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465508995082, exceptions=(), bans={}]"));

  }

  @Test
  public void test026() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test026"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.ITime iTime5 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);

  }

  @Test
  public void test027() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test027"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    java.lang.String str7 = server0.toString();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508995174, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508995174, exceptions=(), bans={}]"));

  }

  @Test
  public void test028() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test028"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508995274L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508995274, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508995274, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508995274, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508995274, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test029() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test029"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test030() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test030"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);

  }

  @Test
  public void test031() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test031"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508995462, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508995462, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508995462, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508995462, exceptions=(), bans={}]"));

  }

  @Test
  public void test032() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test032"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    java.lang.String str3 = server0.toString();
    tp2.IP iP4 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b5 = server0.addException(iP4);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test033() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test033"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test034() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test034"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508995671, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508995671, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508995671, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508995671, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465508995671, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465508995671, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test035() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test035"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    tp2.ITime iTime11 = server5.getTime();
    server0.setTime(iTime11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    java.lang.String str15 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=1465508995681, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=1465508995681, exceptions=(), bans={}]"));

  }

  @Test
  public void test036() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test036"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465508995690, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465508995690, exceptions=(), bans={}]"));

  }

  @Test
  public void test037() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test037"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test038() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test038"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508995707, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508995707, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test039() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test039"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test040() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test040"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508995753L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test041() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test041"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b3 = server0.addException(iP2);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);

  }

  @Test
  public void test042() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test042"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b5 = server0.addException(iP4);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);

  }

  @Test
  public void test043() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test043"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);

  }

  @Test
  public void test044() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test044"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508995805L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508995805, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508995805, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508995805, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508995805, exceptions=(), bans={}]"));

  }

  @Test
  public void test045() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test045"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    tp2.IP iP17 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = server0.addException(iP17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test046() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test046"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = server0.addException(iP7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508995831L);

  }

  @Test
  public void test047() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test047"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    tp2.IP iP5 = null;
    boolean b6 = server0.connect(iP5);
    tp2.IP iP7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = server0.addException(iP7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);

  }

  @Test
  public void test048() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test048"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);

  }

  @Test
  public void test049() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test049"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);

  }

  @Test
  public void test050() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test050"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508996144L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test051() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test051"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test052() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test052"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    server0.setTime(iTime15);
    tp2.IP iP17 = null;
    boolean b18 = server0.removeException(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server0.removeBan(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server0.connect(iP21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);

  }

  @Test
  public void test053() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test053"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.ITime iTime21 = server13.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    tp2.IP iP24 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b25 = server0.addException(iP24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);

  }

  @Test
  public void test054() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test054"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508996313L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508996313L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465508996313L);

  }

  @Test
  public void test055() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test055"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.connect(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508996317L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508996317L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);

  }

  @Test
  public void test056() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test056"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b4 = server0.addException(iP3);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test057() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test057"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    server0.update();
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508996332L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508996332L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test058() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test058"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    server0.setTime(iTime8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465508996333L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465508996333, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465508996333, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test059() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test059"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    tp2.IP iP24 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b25 = server0.addException(iP24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);

  }

  @Test
  public void test060() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test060"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465508996391L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test061() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test061"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test062() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test062"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508996451L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test063() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test063"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508996456L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test064() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test064"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.ITime iTime5 = server0.getTime();
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);

  }

  @Test
  public void test065() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test065"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);

  }

  @Test
  public void test066() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test066"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);

  }

  @Test
  public void test067() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test067"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465508996567L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);

  }

  @Test
  public void test068() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test068"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeException(iP11);
    server8.update();
    tp2.ITime iTime14 = server8.getTime();
    server0.setTime(iTime14);
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    server16.update();
    tp2.IP iP19 = null;
    boolean b20 = server16.removeException(iP19);
    server16.update();
    long long22 = server16.getLastUpdate();
    tp2.IP iP23 = null;
    boolean b24 = server16.removeBan(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server16.removeBan(iP25);
    long long27 = server16.getLastUpdate();
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    tp2.IP iP30 = null;
    boolean b31 = server28.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server28.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server28.removeException(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server28.connect(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server28.connect(iP38);
    tp2.Server server40 = new tp2.Server();
    tp2.ITime iTime41 = server40.getTime();
    server40.update();
    tp2.ITime iTime43 = server40.getTime();
    server28.setTime(iTime43);
    server16.setTime(iTime43);
    server0.setTime(iTime43);
    long long47 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 1465508996641L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465508996641L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long47 == 0L);

  }

  @Test
  public void test069() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test069"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.ITime iTime6 = server0.getTime();
    tp2.ITime iTime7 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508996652L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);

  }

  @Test
  public void test070() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test070"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508996657L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test071() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test071"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508996660L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508996660, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508996660, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);

  }

  @Test
  public void test072() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test072"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = server0.addException(iP7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508996661L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508996661L);

  }

  @Test
  public void test073() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test073"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    long long11 = server0.getLastUpdate();
    long long12 = server0.getLastUpdate();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server13.removeException(iP16);
    tp2.ITime iTime18 = server13.getTime();
    server0.setTime(iTime18);
    tp2.IP iP20 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b21 = server0.addException(iP20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508996690L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465508996690L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465508996690L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);

  }

  @Test
  public void test074() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test074"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    java.lang.String str10 = server0.toString();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465508996729, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465508996729, exceptions=(), bans={}]"));

  }

  @Test
  public void test075() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test075"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test076() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test076"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);

  }

  @Test
  public void test077() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test077"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.Server server11 = new tp2.Server();
    tp2.ITime iTime12 = server11.getTime();
    server11.update();
    tp2.ITime iTime14 = server11.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server11.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    tp2.IP iP19 = null;
    boolean b20 = server17.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server17.connect(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server17.removeException(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server17.connect(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server17.connect(iP27);
    tp2.Server server29 = new tp2.Server();
    tp2.ITime iTime30 = server29.getTime();
    server29.update();
    tp2.ITime iTime32 = server29.getTime();
    server17.setTime(iTime32);
    server11.setTime(iTime32);
    server0.setTime(iTime32);
    server0.update();
    tp2.IP iP37 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b38 = server0.addException(iP37);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508996773L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508996773L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);

  }

  @Test
  public void test078() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test078"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = server0.addException(iP7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);

  }

  @Test
  public void test079() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test079"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508996851L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465508996851, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465508996851, exceptions=(), bans={}]"));

  }

  @Test
  public void test080() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test080"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465508996858L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465508996858, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465508996858, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);

  }

  @Test
  public void test081() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test081"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508996885L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test082() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test082"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test083() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test083"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    tp2.ITime iTime14 = server12.getTime();
    server8.setTime(iTime14);
    java.lang.String str16 = server8.toString();
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    tp2.Server server21 = new tp2.Server();
    long long22 = server21.getLastUpdate();
    tp2.ITime iTime23 = server21.getTime();
    server17.setTime(iTime23);
    server8.setTime(iTime23);
    server0.setTime(iTime23);
    tp2.IP iP27 = null;
    boolean b28 = server0.removeBan(iP27);
    tp2.Server server29 = new tp2.Server();
    tp2.ITime iTime30 = server29.getTime();
    server29.update();
    tp2.IP iP32 = null;
    boolean b33 = server29.connect(iP32);
    long long34 = server29.getLastUpdate();
    tp2.IP iP35 = null;
    boolean b36 = server29.removeBan(iP35);
    server29.update();
    tp2.Server server38 = new tp2.Server();
    long long39 = server38.getLastUpdate();
    server38.update();
    tp2.IP iP41 = null;
    boolean b42 = server38.removeException(iP41);
    server38.update();
    long long44 = server38.getLastUpdate();
    tp2.IP iP45 = null;
    boolean b46 = server38.removeBan(iP45);
    tp2.IP iP47 = null;
    boolean b48 = server38.removeBan(iP47);
    long long49 = server38.getLastUpdate();
    tp2.ITime iTime50 = server38.getTime();
    server29.setTime(iTime50);
    server0.setTime(iTime50);
    tp2.IP iP53 = null;
    boolean b54 = server0.connect(iP53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465508996960, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465508996960, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long34 == 1465508996961L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long39 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long44 == 1465508996962L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long49 == 1465508996962L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);

  }

  @Test
  public void test084() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test084"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b24 = server0.addException(iP23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);

  }

  @Test
  public void test085() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test085"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    long long6 = server0.getLastUpdate();
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508997059L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465508997059L);

  }

  @Test
  public void test086() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test086"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    long long9 = server0.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508997064, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508997064, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508997064, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508997064, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465508997064, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465508997064, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465508997064L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test087() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test087"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    tp2.IP iP17 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = server0.addException(iP17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465508997110L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test088() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test088"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    server0.update();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508997117L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508997117, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508997117, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508997117, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508997117, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465508997117, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465508997117, exceptions=(), bans={}]"));

  }

  @Test
  public void test089() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test089"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    long long11 = server0.getLastUpdate();
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508997126L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465508997126L);

  }

  @Test
  public void test090() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test090"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);

  }

  @Test
  public void test091() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test091"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.IP iP5 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b6 = server0.addException(iP5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test092() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test092"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    long long9 = server0.getLastUpdate();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508997201, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508997201, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508997201, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508997201, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465508997201, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465508997201, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465508997201L);

  }

  @Test
  public void test093() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test093"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.IP iP12 = null;
    boolean b13 = server9.connect(iP12);
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server14.removeException(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server14.connect(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server14.removeException(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server14.connect(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server14.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    tp2.ITime iTime27 = server26.getTime();
    server26.update();
    tp2.ITime iTime29 = server26.getTime();
    server14.setTime(iTime29);
    server9.setTime(iTime29);
    tp2.IP iP32 = null;
    boolean b33 = server9.removeException(iP32);
    tp2.ITime iTime34 = server9.getTime();
    server0.setTime(iTime34);
    tp2.IP iP36 = null;
    boolean b37 = server0.connect(iP36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508997207L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);

  }

  @Test
  public void test094() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test094"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    server0.update();
    long long5 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508997213L);

  }

  @Test
  public void test095() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test095"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    server0.update();
    java.lang.String str12 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465508997213, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465508997213, exceptions=(), bans={}]"));

  }

  @Test
  public void test096() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test096"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508997215L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test097() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test097"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508997222, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508997222, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test098() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test098"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508997226L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508997226L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test099() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test099"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test100() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test100"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    java.lang.String str12 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465508997365, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465508997365, exceptions=(), bans={}]"));

  }

  @Test
  public void test101() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test101"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.IP iP12 = null;
    boolean b13 = server9.connect(iP12);
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server14.removeException(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server14.connect(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server14.removeException(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server14.connect(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server14.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    tp2.ITime iTime27 = server26.getTime();
    server26.update();
    tp2.ITime iTime29 = server26.getTime();
    server14.setTime(iTime29);
    server9.setTime(iTime29);
    tp2.IP iP32 = null;
    boolean b33 = server9.removeException(iP32);
    tp2.ITime iTime34 = server9.getTime();
    server0.setTime(iTime34);
    tp2.IP iP36 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b37 = server0.addException(iP36);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508997430L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);

  }

  @Test
  public void test102() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test102"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server7.setTime(iTime15);
    server0.setTime(iTime15);
    tp2.IP iP18 = null;
    boolean b19 = server0.removeException(iP18);
    java.lang.String str20 = server0.toString();
    long long21 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508997433L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=1465508997433, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=1465508997433, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465508997433L);

  }

  @Test
  public void test103() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test103"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    server0.setTime(iTime8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    java.lang.String str12 = server0.toString();
    tp2.ITime iTime13 = server0.getTime();
    long long14 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465508997442L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465508997442, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465508997442, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465508997442, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465508997442, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465508997442L);

  }

  @Test
  public void test104() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test104"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test105() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test105"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = server0.addException(iP7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508997513, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508997513, exceptions=(), bans={}]"));

  }

  @Test
  public void test106() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test106"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    tp2.ITime iTime14 = server12.getTime();
    server8.setTime(iTime14);
    java.lang.String str16 = server8.toString();
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    tp2.Server server21 = new tp2.Server();
    long long22 = server21.getLastUpdate();
    tp2.ITime iTime23 = server21.getTime();
    server17.setTime(iTime23);
    server8.setTime(iTime23);
    server0.setTime(iTime23);
    tp2.IP iP27 = null;
    boolean b28 = server0.removeBan(iP27);
    tp2.IP iP29 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b30 = server0.addException(iP29);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465508997545, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465508997545, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test107() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test107"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    long long14 = server10.getLastUpdate();
    tp2.IP iP15 = null;
    boolean b16 = server10.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server10.removeException(iP17);
    java.lang.String str19 = server10.toString();
    tp2.IP iP20 = null;
    boolean b21 = server10.connect(iP20);
    tp2.Server server22 = new tp2.Server();
    long long23 = server22.getLastUpdate();
    server22.update();
    tp2.IP iP25 = null;
    boolean b26 = server22.removeException(iP25);
    server22.update();
    long long28 = server22.getLastUpdate();
    tp2.IP iP29 = null;
    boolean b30 = server22.removeBan(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server22.removeBan(iP31);
    long long33 = server22.getLastUpdate();
    tp2.Server server34 = new tp2.Server();
    tp2.ITime iTime35 = server34.getTime();
    tp2.IP iP36 = null;
    boolean b37 = server34.removeException(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server34.connect(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server34.removeException(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server34.connect(iP42);
    tp2.IP iP44 = null;
    boolean b45 = server34.connect(iP44);
    tp2.Server server46 = new tp2.Server();
    tp2.ITime iTime47 = server46.getTime();
    server46.update();
    tp2.ITime iTime49 = server46.getTime();
    server34.setTime(iTime49);
    server22.setTime(iTime49);
    server10.setTime(iTime49);
    server0.setTime(iTime49);
    tp2.IP iP54 = null;
    boolean b55 = server0.removeException(iP54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465508997547L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465508997547, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465508997547, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465508997547L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 1465508997547L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);

  }

  @Test
  public void test108() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test108"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server2.update();
    tp2.ITime iTime5 = server2.getTime();
    tp2.Server server6 = new tp2.Server();
    long long7 = server6.getLastUpdate();
    tp2.ITime iTime8 = server6.getTime();
    server2.setTime(iTime8);
    tp2.ITime iTime10 = server2.getTime();
    server0.setTime(iTime10);
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);

  }

  @Test
  public void test109() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test109"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test110() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test110"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = server0.addException(iP7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508997588L);

  }

  @Test
  public void test111() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test111"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);

  }

  @Test
  public void test112() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test112"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    java.lang.String str8 = server0.toString();
    long long9 = server0.getLastUpdate();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465508997627, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465508997627, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465508997627L);

  }

  @Test
  public void test113() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test113"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508997647L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508997647, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508997647, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test114() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test114"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test115() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test115"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.removeException(iP17);
    tp2.IP iP19 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b20 = server0.addException(iP19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test116() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test116"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    java.lang.String str10 = server8.toString();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeBan(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    long long17 = server13.getLastUpdate();
    tp2.IP iP18 = null;
    boolean b19 = server13.removeBan(iP18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    tp2.IP iP22 = null;
    boolean b23 = server20.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server20.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    long long27 = server26.getLastUpdate();
    tp2.ITime iTime28 = server26.getTime();
    server20.setTime(iTime28);
    server13.setTime(iTime28);
    server8.setTime(iTime28);
    server0.setTime(iTime28);
    java.lang.String str33 = server0.toString();
    tp2.IP iP34 = null;
    boolean b35 = server0.connect(iP34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 1465508997706L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "Server [lastUpdate=1465508997705, exceptions=(), bans={}]"+ "'", str33.equals("Server [lastUpdate=1465508997705, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);

  }

  @Test
  public void test117() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test117"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508997724L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508997724L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508997724L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);

  }

  @Test
  public void test118() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test118"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test119() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test119"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    tp2.ITime iTime9 = server0.getTime();
    java.lang.String str10 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508997736, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508997736, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508997736, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508997736, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465508997736, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465508997736, exceptions=(), bans={}]"));

  }

  @Test
  public void test120() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test120"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    tp2.ITime iTime7 = server0.getTime();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    long long12 = server8.getLastUpdate();
    tp2.IP iP13 = null;
    boolean b14 = server8.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server8.removeException(iP15);
    java.lang.String str17 = server8.toString();
    tp2.IP iP18 = null;
    boolean b19 = server8.connect(iP18);
    tp2.Server server20 = new tp2.Server();
    long long21 = server20.getLastUpdate();
    server20.update();
    tp2.IP iP23 = null;
    boolean b24 = server20.removeException(iP23);
    server20.update();
    long long26 = server20.getLastUpdate();
    tp2.IP iP27 = null;
    boolean b28 = server20.removeBan(iP27);
    tp2.IP iP29 = null;
    boolean b30 = server20.removeBan(iP29);
    long long31 = server20.getLastUpdate();
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    tp2.IP iP34 = null;
    boolean b35 = server32.removeException(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server32.connect(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server32.removeException(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server32.connect(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server32.connect(iP42);
    tp2.Server server44 = new tp2.Server();
    tp2.ITime iTime45 = server44.getTime();
    server44.update();
    tp2.ITime iTime47 = server44.getTime();
    server32.setTime(iTime47);
    server20.setTime(iTime47);
    server8.setTime(iTime47);
    server0.setTime(iTime47);
    tp2.ITime iTime52 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508997883, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508997883, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465508997885L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465508997885, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465508997885, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 1465508997885L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465508997885L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);

  }

  @Test
  public void test121() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test121"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server9.connect(iP13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    tp2.ITime iTime17 = server15.getTime();
    server9.setTime(iTime17);
    server0.setTime(iTime17);
    long long20 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508997920L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465508997920L);

  }

  @Test
  public void test122() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test122"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    long long10 = server0.getLastUpdate();
    server0.update();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    tp2.ITime iTime18 = server16.getTime();
    server12.setTime(iTime18);
    tp2.ITime iTime20 = server12.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server12.removeException(iP21);
    tp2.Server server23 = new tp2.Server();
    long long24 = server23.getLastUpdate();
    java.lang.String str25 = server23.toString();
    tp2.IP iP26 = null;
    boolean b27 = server23.removeBan(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server23.removeBan(iP28);
    long long30 = server23.getLastUpdate();
    tp2.ITime iTime31 = server23.getTime();
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    tp2.IP iP34 = null;
    boolean b35 = server32.connect(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server32.removeException(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server32.removeException(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server32.connect(iP40);
    tp2.Server server42 = new tp2.Server();
    long long43 = server42.getLastUpdate();
    server42.update();
    tp2.ITime iTime45 = server42.getTime();
    server32.setTime(iTime45);
    server23.setTime(iTime45);
    server12.setTime(iTime45);
    server0.setTime(iTime45);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508997937L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508997937L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465508997937L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str25.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long43 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);

  }

  @Test
  public void test123() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test123"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test124() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test124"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    server6.update();
    tp2.IP iP9 = null;
    boolean b10 = server6.connect(iP9);
    long long11 = server6.getLastUpdate();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.ITime iTime18 = server12.getTime();
    server6.setTime(iTime18);
    server0.setTime(iTime18);
    tp2.ITime iTime21 = null;
    server0.setTime(iTime21);
    tp2.IP iP23 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b24 = server0.addException(iP23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465508997952L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);

  }

  @Test
  public void test125() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test125"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.ITime iTime5 = server0.getTime();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test126() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test126"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test127() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test127"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    long long11 = server0.getLastUpdate();
    long long12 = server0.getLastUpdate();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server13.removeException(iP16);
    tp2.ITime iTime18 = server13.getTime();
    server0.setTime(iTime18);
    server0.update();
    tp2.IP iP21 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b22 = server0.addException(iP21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508998017L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465508998017L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465508998017L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);

  }

  @Test
  public void test128() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test128"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    server0.update();
    java.lang.String str14 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465508998024L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465508998025, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465508998025, exceptions=(), bans={}]"));

  }

  @Test
  public void test129() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test129"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    java.lang.String str12 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465508998076, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465508998076, exceptions=(), bans={}]"));

  }

  @Test
  public void test130() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test130"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    server0.update();
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server5.removeBan(iP9);
    server5.update();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server12.setTime(iTime15);
    server12.update();
    java.lang.String str18 = server12.toString();
    tp2.ITime iTime19 = server12.getTime();
    server5.setTime(iTime19);
    server0.setTime(iTime19);
    tp2.ITime iTime22 = server0.getTime();
    tp2.IP iP23 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b24 = server0.addException(iP23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465508998109, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465508998109, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);

  }

  @Test
  public void test131() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test131"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    server0.update();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    long long9 = server0.getLastUpdate();
    long long10 = server0.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465508998122L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465508998122L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test132() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test132"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = server0.addException(iP7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508998124L);

  }

  @Test
  public void test133() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test133"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    java.lang.String str13 = server0.toString();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeBan(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465508998124L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465508998124, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465508998124, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465508998124, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465508998124, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test134() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test134"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    java.lang.String str6 = server0.toString();
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508998185, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508998185, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465508998185, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465508998185, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test135() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test135"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeException(iP11);
    server8.update();
    tp2.ITime iTime14 = server8.getTime();
    server0.setTime(iTime14);
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    server16.update();
    tp2.IP iP19 = null;
    boolean b20 = server16.removeException(iP19);
    server16.update();
    long long22 = server16.getLastUpdate();
    tp2.IP iP23 = null;
    boolean b24 = server16.removeBan(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server16.removeBan(iP25);
    long long27 = server16.getLastUpdate();
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    tp2.IP iP30 = null;
    boolean b31 = server28.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server28.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server28.removeException(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server28.connect(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server28.connect(iP38);
    tp2.Server server40 = new tp2.Server();
    tp2.ITime iTime41 = server40.getTime();
    server40.update();
    tp2.ITime iTime43 = server40.getTime();
    server28.setTime(iTime43);
    server16.setTime(iTime43);
    server0.setTime(iTime43);
    tp2.IP iP47 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b48 = server0.addException(iP47);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 1465508998199L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465508998199L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);

  }

  @Test
  public void test136() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test136"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    java.lang.String str17 = server0.toString();
    tp2.IP iP18 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b19 = server0.addException(iP18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508998207L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465508998207, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465508998207, exceptions=(), bans={}]"));

  }

  @Test
  public void test137() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test137"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server7.setTime(iTime15);
    server0.setTime(iTime15);
    tp2.ITime iTime18 = server0.getTime();
    tp2.IP iP19 = null;
    boolean b20 = server0.removeException(iP19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508998210L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test138() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test138"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);

  }

  @Test
  public void test139() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test139"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    long long9 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);

  }

  @Test
  public void test140() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test140"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    server0.update();
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test141() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test141"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    long long8 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465508998271L);

  }

  @Test
  public void test142() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test142"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    java.lang.String str9 = server0.toString();
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465508998291, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465508998291, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465508998291L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465508998291, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465508998291, exceptions=(), bans={}]"));

  }

  @Test
  public void test143() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test143"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    long long2 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b7 = server0.addException(iP6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long2 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test144() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test144"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test145() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test145"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.ITime iTime7 = null;
    server0.setTime(iTime7);
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test146() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test146"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    java.lang.String str6 = server0.toString();
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508998362, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508998362, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465508998362, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465508998362, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);

  }

  @Test
  public void test147() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test147"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.ITime iTime5 = server0.getTime();
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);

  }

  @Test
  public void test148() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test148"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    java.lang.String str6 = server0.toString();
    tp2.ITime iTime7 = server0.getTime();
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508998428, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508998428, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465508998428, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465508998428, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test149() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test149"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508998467L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test150() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test150"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    tp2.IP iP14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = server0.addException(iP14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test151() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test151"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    server0.update();
    server0.update();
    tp2.IP iP13 = null;
    boolean b14 = server0.connect(iP13);
    tp2.ITime iTime15 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508998505L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);

  }

  @Test
  public void test152() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test152"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.ITime iTime2 = server0.getTime();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = server0.addException(iP7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508998508L);

  }

  @Test
  public void test153() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test153"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b4 = server0.addException(iP3);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);

  }

  @Test
  public void test154() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test154"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508998530L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test155() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test155"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    long long12 = server8.getLastUpdate();
    tp2.IP iP13 = null;
    boolean b14 = server8.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server8.removeException(iP15);
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    server17.update();
    tp2.IP iP20 = null;
    boolean b21 = server17.removeException(iP20);
    server17.update();
    long long23 = server17.getLastUpdate();
    tp2.IP iP24 = null;
    boolean b25 = server17.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    tp2.ITime iTime27 = server26.getTime();
    server26.update();
    tp2.ITime iTime29 = server26.getTime();
    server17.setTime(iTime29);
    server8.setTime(iTime29);
    server0.setTime(iTime29);
    tp2.IP iP33 = null;
    boolean b34 = server0.connect(iP33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465508998531L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 1465508998531L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);

  }

  @Test
  public void test156() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test156"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    server0.update();
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508998542L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465508998542, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465508998542, exceptions=(), bans={}]"));

  }

  @Test
  public void test157() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test157"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508998557L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465508998557, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465508998557, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);

  }

  @Test
  public void test158() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test158"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.IP iP20 = null;
    boolean b21 = server0.removeException(iP20);
    tp2.Server server22 = new tp2.Server();
    tp2.ITime iTime23 = server22.getTime();
    server22.update();
    tp2.IP iP25 = null;
    boolean b26 = server22.connect(iP25);
    long long27 = server22.getLastUpdate();
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    server28.update();
    tp2.ITime iTime31 = server28.getTime();
    tp2.IP iP32 = null;
    boolean b33 = server28.connect(iP32);
    tp2.ITime iTime34 = server28.getTime();
    server22.setTime(iTime34);
    server0.setTime(iTime34);
    tp2.IP iP37 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b38 = server0.addException(iP37);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465508998562L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);

  }

  @Test
  public void test159() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test159"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    java.lang.String str7 = server0.toString();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508998564, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508998564, exceptions=(), bans={}]"));

  }

  @Test
  public void test160() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test160"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.Server server4 = new tp2.Server();
    tp2.ITime iTime5 = server4.getTime();
    server4.update();
    tp2.ITime iTime7 = server4.getTime();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    tp2.ITime iTime10 = server8.getTime();
    server4.setTime(iTime10);
    tp2.ITime iTime12 = server4.getTime();
    server0.setTime(iTime12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    tp2.IP iP16 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b17 = server0.addException(iP16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test161() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test161"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    java.lang.String str11 = server0.toString();
    server0.update();
    tp2.ITime iTime13 = server0.getTime();
    tp2.IP iP14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = server0.addException(iP14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

  @Test
  public void test162() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test162"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    long long3 = server0.getLastUpdate();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long3 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);

  }

  @Test
  public void test163() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test163"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    long long8 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508998574L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508998574L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508998574L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465508998574L);

  }

  @Test
  public void test164() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test164"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.ITime iTime7 = null;
    server0.setTime(iTime7);
    // The following exception was thrown during execution in test generation
    try {
      server0.update();
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test165() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test165"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    java.lang.String str6 = server0.toString();
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508998639, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508998639, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test166() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test166"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    server6.update();
    tp2.ITime iTime9 = server6.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server6.removeBan(iP10);
    server6.update();
    tp2.ITime iTime13 = server6.getTime();
    server0.setTime(iTime13);
    long long15 = server0.getLastUpdate();
    tp2.IP iP16 = null;
    boolean b17 = server0.removeBan(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508998647L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465508998647L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test167() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test167"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.removeException(iP11);
    long long13 = server7.getLastUpdate();
    java.lang.String str14 = server7.toString();
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.ITime iTime18 = server15.getTime();
    tp2.Server server19 = new tp2.Server();
    long long20 = server19.getLastUpdate();
    tp2.ITime iTime21 = server19.getTime();
    server15.setTime(iTime21);
    java.lang.String str23 = server15.toString();
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    server24.update();
    tp2.ITime iTime27 = server24.getTime();
    tp2.Server server28 = new tp2.Server();
    long long29 = server28.getLastUpdate();
    tp2.ITime iTime30 = server28.getTime();
    server24.setTime(iTime30);
    server15.setTime(iTime30);
    server7.setTime(iTime30);
    tp2.IP iP34 = null;
    boolean b35 = server7.removeBan(iP34);
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.IP iP39 = null;
    boolean b40 = server36.connect(iP39);
    long long41 = server36.getLastUpdate();
    tp2.IP iP42 = null;
    boolean b43 = server36.removeBan(iP42);
    server36.update();
    tp2.Server server45 = new tp2.Server();
    long long46 = server45.getLastUpdate();
    server45.update();
    tp2.IP iP48 = null;
    boolean b49 = server45.removeException(iP48);
    server45.update();
    long long51 = server45.getLastUpdate();
    tp2.IP iP52 = null;
    boolean b53 = server45.removeBan(iP52);
    tp2.IP iP54 = null;
    boolean b55 = server45.removeBan(iP54);
    long long56 = server45.getLastUpdate();
    tp2.ITime iTime57 = server45.getTime();
    server36.setTime(iTime57);
    server7.setTime(iTime57);
    server0.setTime(iTime57);
    tp2.IP iP61 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b62 = server0.addException(iP61);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465508998652, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465508998652, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 1465508998652L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long46 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long51 == 1465508998653L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long56 == 1465508998653L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);

  }

  @Test
  public void test168() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test168"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    java.lang.String str13 = server0.toString();
    tp2.ITime iTime14 = server0.getTime();
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465508998679L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465508998679, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465508998679, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465508998679, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465508998679, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);

  }

  @Test
  public void test169() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test169"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    server0.update();
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508998681, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508998681, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508998681, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508998681, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);

  }

  @Test
  public void test170() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test170"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = null;
    server0.setTime(iTime12);
    java.lang.String str14 = server0.toString();
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    // The following exception was thrown during execution in test generation
    try {
      server0.update();
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test171() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test171"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server7.setTime(iTime15);
    server0.setTime(iTime15);
    tp2.IP iP18 = null;
    boolean b19 = server0.removeException(iP18);
    java.lang.String str20 = server0.toString();
    tp2.IP iP21 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b22 = server0.addException(iP21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508998685L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=1465508998685, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=1465508998685, exceptions=(), bans={}]"));

  }

  @Test
  public void test172() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test172"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeException(iP11);
    server8.update();
    tp2.ITime iTime14 = server8.getTime();
    server0.setTime(iTime14);
    server0.update();
    tp2.IP iP17 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = server0.addException(iP17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);

  }

  @Test
  public void test173() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test173"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = server0.addException(iP7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508998782L);

  }

  @Test
  public void test174() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test174"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    tp2.Server server14 = new tp2.Server();
    long long15 = server14.getLastUpdate();
    long long16 = server14.getLastUpdate();
    tp2.ITime iTime17 = server14.getTime();
    server0.setTime(iTime17);
    tp2.IP iP19 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b20 = server0.addException(iP19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);

  }

  @Test
  public void test175() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test175"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.ITime iTime11 = server9.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server9.removeBan(iP12);
    tp2.Server server14 = new tp2.Server();
    long long15 = server14.getLastUpdate();
    server14.update();
    tp2.IP iP17 = null;
    boolean b18 = server14.removeBan(iP17);
    tp2.Server server19 = new tp2.Server();
    tp2.ITime iTime20 = server19.getTime();
    server19.update();
    tp2.ITime iTime22 = server19.getTime();
    server14.setTime(iTime22);
    server9.setTime(iTime22);
    server0.setTime(iTime22);
    tp2.IP iP26 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b27 = server0.addException(iP26);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);

  }

  @Test
  public void test176() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test176"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server10.connect(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server10.removeException(iP14);
    long long16 = server10.getLastUpdate();
    tp2.IP iP17 = null;
    boolean b18 = server10.removeBan(iP17);
    tp2.Server server19 = new tp2.Server();
    long long20 = server19.getLastUpdate();
    tp2.IP iP21 = null;
    boolean b22 = server19.removeException(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    server23.update();
    tp2.ITime iTime26 = server23.getTime();
    tp2.Server server27 = new tp2.Server();
    long long28 = server27.getLastUpdate();
    tp2.ITime iTime29 = server27.getTime();
    server23.setTime(iTime29);
    tp2.ITime iTime31 = server23.getTime();
    server19.setTime(iTime31);
    server10.setTime(iTime31);
    server0.setTime(iTime31);
    tp2.IP iP35 = null;
    boolean b36 = server0.connect(iP35);
    server0.update();
    long long38 = server0.getLastUpdate();
    tp2.IP iP39 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b40 = server0.addException(iP39);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465508998825L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long38 == 1465508998827L);

  }

  @Test
  public void test177() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test177"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    java.lang.String str10 = server8.toString();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeBan(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    long long17 = server13.getLastUpdate();
    tp2.IP iP18 = null;
    boolean b19 = server13.removeBan(iP18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    tp2.IP iP22 = null;
    boolean b23 = server20.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server20.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    long long27 = server26.getLastUpdate();
    tp2.ITime iTime28 = server26.getTime();
    server20.setTime(iTime28);
    server13.setTime(iTime28);
    server8.setTime(iTime28);
    server0.setTime(iTime28);
    java.lang.String str33 = server0.toString();
    tp2.Server server34 = new tp2.Server();
    tp2.ITime iTime35 = server34.getTime();
    server34.update();
    tp2.ITime iTime37 = server34.getTime();
    tp2.IP iP38 = null;
    boolean b39 = server34.removeBan(iP38);
    server34.update();
    tp2.ITime iTime41 = server34.getTime();
    server0.setTime(iTime41);
    tp2.ITime iTime43 = server0.getTime();
    tp2.IP iP44 = null;
    boolean b45 = server0.connect(iP44);
    tp2.IP iP46 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b47 = server0.addException(iP46);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 1465508998869L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "Server [lastUpdate=1465508998868, exceptions=(), bans={}]"+ "'", str33.equals("Server [lastUpdate=1465508998868, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);

  }

  @Test
  public void test178() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test178"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server2.update();
    tp2.ITime iTime5 = server2.getTime();
    tp2.Server server6 = new tp2.Server();
    long long7 = server6.getLastUpdate();
    tp2.ITime iTime8 = server6.getTime();
    server2.setTime(iTime8);
    java.lang.String str10 = server2.toString();
    tp2.ITime iTime11 = server2.getTime();
    server0.setTime(iTime11);
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465508998904, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465508998904, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);

  }

  @Test
  public void test179() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test179"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    long long12 = server0.getLastUpdate();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465508998906L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test180() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test180"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test181() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test181"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508998949, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508998949, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508998949, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508998949, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test182() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test182"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    tp2.ITime iTime8 = server0.getTime();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server9.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server9.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server9.removeException(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server9.connect(iP17);
    tp2.Server server19 = new tp2.Server();
    long long20 = server19.getLastUpdate();
    server19.update();
    tp2.ITime iTime22 = server19.getTime();
    server9.setTime(iTime22);
    server0.setTime(iTime22);
    tp2.IP iP25 = null;
    boolean b26 = server0.removeBan(iP25);
    tp2.IP iP27 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b28 = server0.addException(iP27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test183() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test183"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    server0.update();
    tp2.IP iP16 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b17 = server0.addException(iP16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

  @Test
  public void test184() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test184"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeBan(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server5.setTime(iTime13);
    server0.setTime(iTime13);
    tp2.ITime iTime16 = server0.getTime();
    server0.update();
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    tp2.Server server22 = new tp2.Server();
    long long23 = server22.getLastUpdate();
    tp2.ITime iTime24 = server22.getTime();
    server18.setTime(iTime24);
    tp2.IP iP26 = null;
    boolean b27 = server18.connect(iP26);
    long long28 = server18.getLastUpdate();
    java.lang.String str29 = server18.toString();
    tp2.ITime iTime30 = server18.getTime();
    long long31 = server18.getLastUpdate();
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    server32.update();
    tp2.ITime iTime35 = server32.getTime();
    tp2.IP iP36 = null;
    boolean b37 = server32.connect(iP36);
    tp2.ITime iTime38 = server32.getTime();
    tp2.ITime iTime39 = server32.getTime();
    server18.setTime(iTime39);
    server0.setTime(iTime39);
    java.lang.String str42 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465508998994L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "Server [lastUpdate=1465508998994, exceptions=(), bans={}]"+ "'", str29.equals("Server [lastUpdate=1465508998994, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465508998994L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "Server [lastUpdate=1465508998994, exceptions=(), bans={}]"+ "'", str42.equals("Server [lastUpdate=1465508998994, exceptions=(), bans={}]"));

  }

  @Test
  public void test185() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test185"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    server0.update();
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test186() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test186"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.ITime iTime2 = server0.getTime();
    java.lang.String str3 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test187() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test187"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);

  }

  @Test
  public void test188() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test188"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    server0.setTime(iTime8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);

  }

  @Test
  public void test189() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test189"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    server0.update();
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server5.removeBan(iP9);
    server5.update();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server12.setTime(iTime15);
    server12.update();
    java.lang.String str18 = server12.toString();
    tp2.ITime iTime19 = server12.getTime();
    server5.setTime(iTime19);
    server0.setTime(iTime19);
    tp2.IP iP22 = null;
    boolean b23 = server0.removeBan(iP22);
    tp2.IP iP24 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b25 = server0.addException(iP24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465508999099, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465508999099, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test190() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test190"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server13.removeException(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server13.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server13.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server13.connect(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server13.connect(iP23);
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    server25.update();
    tp2.ITime iTime28 = server25.getTime();
    server13.setTime(iTime28);
    server8.setTime(iTime28);
    tp2.IP iP31 = null;
    boolean b32 = server8.removeException(iP31);
    tp2.ITime iTime33 = server8.getTime();
    server0.setTime(iTime33);
    server0.update();
    tp2.IP iP36 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b37 = server0.addException(iP36);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508999247, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508999247, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);

  }

  @Test
  public void test191() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test191"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    java.lang.String str7 = server0.toString();
    server0.update();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508999267, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508999267, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test192() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test192"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.ITime iTime11 = server0.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    java.lang.String str14 = server0.toString();
    server0.update();
    tp2.IP iP16 = null;
    boolean b17 = server0.removeBan(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test193() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test193"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.ITime iTime13 = server0.getTime();
    tp2.IP iP14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = server0.addException(iP14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465508999303L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

  @Test
  public void test194() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test194"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    server0.update();
    long long10 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465508999309L);

  }

  @Test
  public void test195() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test195"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    server0.update();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508999310L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465508999310, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465508999310, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test196() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test196"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    long long6 = server0.getLastUpdate();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server7.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server7.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server7.connect(iP17);
    tp2.Server server19 = new tp2.Server();
    tp2.ITime iTime20 = server19.getTime();
    server19.update();
    tp2.ITime iTime22 = server19.getTime();
    server7.setTime(iTime22);
    server0.setTime(iTime22);
    tp2.IP iP25 = null;
    boolean b26 = server0.removeBan(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server0.removeException(iP27);
    java.lang.String str29 = server0.toString();
    tp2.IP iP30 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b31 = server0.addException(iP30);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508999310L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508999310L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "Server [lastUpdate=1465508999310, exceptions=(), bans={}]"+ "'", str29.equals("Server [lastUpdate=1465508999310, exceptions=(), bans={}]"));

  }

  @Test
  public void test197() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test197"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    long long9 = server5.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server5.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server12.setTime(iTime20);
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server0.removeBan(iP26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465508999311L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test198() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test198"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test199() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test199"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    server0.update();
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server5.removeBan(iP9);
    server5.update();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server12.setTime(iTime15);
    server12.update();
    java.lang.String str18 = server12.toString();
    tp2.ITime iTime19 = server12.getTime();
    server5.setTime(iTime19);
    server0.setTime(iTime19);
    tp2.ITime iTime22 = server0.getTime();
    tp2.IP iP23 = null;
    boolean b24 = server0.connect(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server0.connect(iP25);
    tp2.ITime iTime27 = null;
    server0.setTime(iTime27);
    // The following exception was thrown during execution in test generation
    try {
      server0.update();
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465508999356, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465508999356, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);

  }

  @Test
  public void test200() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test200"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test201() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test201"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server9.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server9.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server9.connect(iP17);
    tp2.ITime iTime19 = server9.getTime();
    server0.setTime(iTime19);
    tp2.IP iP21 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b22 = server0.addException(iP21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);

  }

  @Test
  public void test202() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test202"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    server0.update();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    long long9 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465508999365L);

  }

  @Test
  public void test203() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test203"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.ITime iTime21 = server13.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    tp2.ITime iTime27 = server25.getTime();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeBan(iP28);
    tp2.ITime iTime30 = server25.getTime();
    server0.setTime(iTime30);
    server0.update();
    tp2.IP iP33 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b34 = server0.addException(iP33);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);

  }

  @Test
  public void test204() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test204"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test205() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test205"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test206() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test206"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    tp2.ITime iTime10 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508999409, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508999409, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508999409, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508999409, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465508999409, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465508999409, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465508999409, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465508999409, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);

  }

  @Test
  public void test207() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test207"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeException(iP11);
    server8.update();
    tp2.ITime iTime14 = server8.getTime();
    server0.setTime(iTime14);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeException(iP16);
    tp2.IP iP18 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b19 = server0.addException(iP18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test208() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test208"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test209() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test209"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    server25.update();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeException(iP28);
    server25.update();
    long long31 = server25.getLastUpdate();
    tp2.IP iP32 = null;
    boolean b33 = server25.removeBan(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server25.removeBan(iP34);
    long long36 = server25.getLastUpdate();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    tp2.IP iP39 = null;
    boolean b40 = server37.removeException(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server37.connect(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server37.removeException(iP43);
    tp2.IP iP45 = null;
    boolean b46 = server37.connect(iP45);
    tp2.IP iP47 = null;
    boolean b48 = server37.connect(iP47);
    tp2.Server server49 = new tp2.Server();
    tp2.ITime iTime50 = server49.getTime();
    server49.update();
    tp2.ITime iTime52 = server49.getTime();
    server37.setTime(iTime52);
    server25.setTime(iTime52);
    server0.setTime(iTime52);
    tp2.ITime iTime56 = server0.getTime();
    tp2.IP iP57 = null;
    boolean b58 = server0.removeException(iP57);
    tp2.IP iP59 = null;
    boolean b60 = server0.removeBan(iP59);
    java.lang.String str61 = server0.toString();
    tp2.IP iP62 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b63 = server0.addException(iP62);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465508999465, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465508999465, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465508999465L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 1465508999465L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "Server [lastUpdate=1465508999465, exceptions=(), bans={}]"+ "'", str61.equals("Server [lastUpdate=1465508999465, exceptions=(), bans={}]"));

  }

  @Test
  public void test210() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test210"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508999514L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test211() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test211"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465508999526, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465508999526, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test212() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test212"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test213() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test213"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    server0.setTime(iTime15);
    tp2.IP iP17 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = server0.addException(iP17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);

  }

  @Test
  public void test214() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test214"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    server0.update();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test215() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test215"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    java.lang.String str8 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test216() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test216"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test217() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test217"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    tp2.IP iP5 = null;
    boolean b6 = server0.connect(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.IP iP10 = null;
    boolean b11 = server9.connect(iP10);
    java.lang.String str12 = server9.toString();
    tp2.ITime iTime13 = server9.getTime();
    server0.setTime(iTime13);
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

  @Test
  public void test218() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test218"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    server0.update();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508999664L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508999664, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508999664, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465508999664, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465508999664, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test219() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test219"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.Server server11 = new tp2.Server();
    tp2.ITime iTime12 = server11.getTime();
    server11.update();
    tp2.ITime iTime14 = server11.getTime();
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    tp2.ITime iTime17 = server15.getTime();
    server11.setTime(iTime17);
    tp2.ITime iTime19 = server11.getTime();
    server9.setTime(iTime19);
    server0.setTime(iTime19);
    tp2.IP iP22 = null;
    boolean b23 = server0.removeBan(iP22);
    server0.update();
    long long25 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465508999666L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508999666, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508999666, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long25 == 1465508999669L);

  }

  @Test
  public void test220() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test220"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    server0.update();
    java.lang.String str10 = server0.toString();
    long long11 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508999684L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465508999684, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465508999684, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465508999684, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465508999684, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465508999685, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465508999685, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465508999685L);

  }

  @Test
  public void test221() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test221"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.ITime iTime13 = server0.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465508999694L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test222() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test222"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    server0.update();
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508999770L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465508999770L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);

  }

  @Test
  public void test223() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test223"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    long long4 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508999796L);

  }

  @Test
  public void test224() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test224"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = server0.addException(iP7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test225() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test225"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    server0.update();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    tp2.IP iP16 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b17 = server0.addException(iP16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465508999838L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test226() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test226"); }


    tp2.Server server0 = new tp2.Server();
    tp2.IP iP1 = null;
    boolean b2 = server0.connect(iP1);
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    server6.update();
    tp2.IP iP9 = null;
    boolean b10 = server6.connect(iP9);
    long long11 = server6.getLastUpdate();
    long long12 = server6.getLastUpdate();
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server13.removeException(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server13.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server13.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server13.connect(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server13.connect(iP23);
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    server25.update();
    tp2.ITime iTime28 = server25.getTime();
    server13.setTime(iTime28);
    server6.setTime(iTime28);
    server0.setTime(iTime28);
    tp2.IP iP32 = null;
    boolean b33 = server0.removeException(iP32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465508999863L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465508999863L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);

  }

  @Test
  public void test227() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test227"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.ITime iTime12 = server9.getTime();
    server0.setTime(iTime12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeException(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server0.removeBan(iP18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465508999875L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test228() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test228"); }


    tp2.Server server0 = new tp2.Server();
    java.lang.String str1 = server0.toString();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str1.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test229() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test229"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    server0.update();
    server0.update();
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test230() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test230"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    long long12 = server0.getLastUpdate();
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.IP iP16 = null;
    boolean b17 = server13.connect(iP16);
    long long18 = server13.getLastUpdate();
    java.lang.String str19 = server13.toString();
    java.lang.String str20 = server13.toString();
    tp2.Server server21 = new tp2.Server();
    tp2.ITime iTime22 = server21.getTime();
    server21.update();
    tp2.ITime iTime24 = server21.getTime();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    tp2.ITime iTime27 = server25.getTime();
    server21.setTime(iTime27);
    tp2.ITime iTime29 = server21.getTime();
    server13.setTime(iTime29);
    server0.setTime(iTime29);
    tp2.IP iP32 = null;
    boolean b33 = server0.connect(iP32);
    tp2.IP iP34 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b35 = server0.addException(iP34);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508999901, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508999901, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465508999901, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465508999901, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465508999901L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465508999902L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465508999902, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465508999902, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=1465508999902, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=1465508999902, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);

  }

  @Test
  public void test231() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test231"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    long long12 = server0.getLastUpdate();
    tp2.ITime iTime13 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465508999963, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465508999963, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465508999963, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465508999963, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465508999963L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

  @Test
  public void test232() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test232"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465508999986L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test233() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test233"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    java.lang.String str28 = server0.toString();
    tp2.Server server29 = new tp2.Server();
    tp2.ITime iTime30 = server29.getTime();
    server29.update();
    tp2.ITime iTime32 = server29.getTime();
    tp2.IP iP33 = null;
    boolean b34 = server29.removeBan(iP33);
    server29.update();
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    tp2.Server server38 = new tp2.Server();
    tp2.ITime iTime39 = server38.getTime();
    server36.setTime(iTime39);
    server36.update();
    java.lang.String str42 = server36.toString();
    tp2.ITime iTime43 = server36.getTime();
    server29.setTime(iTime43);
    server0.setTime(iTime43);
    tp2.ITime iTime46 = server0.getTime();
    long long47 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "Server [lastUpdate=1465508999989, exceptions=(), bans={}]"+ "'", str28.equals("Server [lastUpdate=1465508999989, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "Server [lastUpdate=1465508999991, exceptions=(), bans={}]"+ "'", str42.equals("Server [lastUpdate=1465508999991, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long47 == 1465508999989L);

  }

  @Test
  public void test234() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test234"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    long long2 = server0.getLastUpdate();
    tp2.ITime iTime3 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long2 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);

  }

  @Test
  public void test235() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test235"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    java.lang.String str4 = server0.toString();
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    long long11 = server5.getLastUpdate();
    java.lang.String str12 = server5.toString();
    tp2.ITime iTime13 = server5.getTime();
    server0.setTime(iTime13);
    tp2.ITime iTime15 = server0.getTime();
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    java.lang.String str18 = server16.toString();
    tp2.IP iP19 = null;
    boolean b20 = server16.removeBan(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server16.removeBan(iP21);
    long long23 = server16.getLastUpdate();
    tp2.ITime iTime24 = server16.getTime();
    tp2.IP iP25 = null;
    boolean b26 = server16.removeException(iP25);
    tp2.ITime iTime27 = server16.getTime();
    server0.setTime(iTime27);
    tp2.IP iP29 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b30 = server0.addException(iP29);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=1465509000026, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=1465509000026, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509000026L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509000026, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509000026, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);

  }

  @Test
  public void test236() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test236"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.ITime iTime12 = server0.getTime();
    server0.update();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test237() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test237"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509000051L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test238() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test238"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509000068L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509000068, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509000068, exceptions=(), bans={}]"));

  }

  @Test
  public void test239() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test239"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    java.lang.String str11 = server0.toString();
    server0.update();
    tp2.ITime iTime13 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

  @Test
  public void test240() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test240"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    java.lang.String str10 = server8.toString();
    server8.update();
    java.lang.String str12 = server8.toString();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    server13.update();
    tp2.IP iP16 = null;
    boolean b17 = server13.removeException(iP16);
    server13.update();
    long long19 = server13.getLastUpdate();
    java.lang.String str20 = server13.toString();
    tp2.ITime iTime21 = server13.getTime();
    server8.setTime(iTime21);
    server0.setTime(iTime21);
    long long24 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509000096, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509000096, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509000097L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=1465509000097, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=1465509000097, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509000096L);

  }

  @Test
  public void test241() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test241"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server2.update();
    tp2.ITime iTime5 = server2.getTime();
    tp2.Server server6 = new tp2.Server();
    long long7 = server6.getLastUpdate();
    tp2.ITime iTime8 = server6.getTime();
    server2.setTime(iTime8);
    java.lang.String str10 = server2.toString();
    tp2.ITime iTime11 = server2.getTime();
    server0.setTime(iTime11);
    java.lang.String str13 = server0.toString();
    server0.update();
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509000103, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509000103, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test242() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test242"); }


    tp2.Server server0 = new tp2.Server();
    tp2.IP iP1 = null;
    boolean b2 = server0.connect(iP1);
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test243() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test243"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    long long12 = server10.getLastUpdate();
    java.lang.String str13 = server10.toString();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server14.update();
    tp2.ITime iTime17 = server14.getTime();
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server14.setTime(iTime20);
    tp2.IP iP22 = null;
    boolean b23 = server14.connect(iP22);
    long long24 = server14.getLastUpdate();
    tp2.ITime iTime25 = server14.getTime();
    server10.setTime(iTime25);
    server0.setTime(iTime25);
    tp2.IP iP28 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b29 = server0.addException(iP28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509000132L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509000133, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509000133, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509000133L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);

  }

  @Test
  public void test244() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test244"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509000140, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509000140, exceptions=(), bans={}]"));

  }

  @Test
  public void test245() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test245"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    server0.update();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b7 = server0.addException(iP6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509000140L);

  }

  @Test
  public void test246() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test246"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    long long13 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509000143L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509000143L);

  }

  @Test
  public void test247() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test247"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    long long9 = server0.getLastUpdate();
    tp2.ITime iTime10 = server0.getTime();
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test248() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test248"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    java.lang.String str3 = server0.toString();
    long long4 = server0.getLastUpdate();
    java.lang.String str5 = server0.toString();
    tp2.IP iP6 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b7 = server0.addException(iP6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=1465509000194, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=1465509000194, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509000194L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Server [lastUpdate=1465509000194, exceptions=(), bans={}]"+ "'", str5.equals("Server [lastUpdate=1465509000194, exceptions=(), bans={}]"));

  }

  @Test
  public void test249() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test249"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509000195, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509000195, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509000195, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509000195, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509000195L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509000195, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509000195, exceptions=(), bans={}]"));

  }

  @Test
  public void test250() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test250"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b6 = server0.addException(iP5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);

  }

  @Test
  public void test251() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test251"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509000221L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509000221, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509000221, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test252() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test252"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    server0.update();
    tp2.IP iP6 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b7 = server0.addException(iP6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);

  }

  @Test
  public void test253() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test253"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server0.removeException(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server0.connect(iP23);
    long long25 = server0.getLastUpdate();
    tp2.Server server26 = new tp2.Server();
    long long27 = server26.getLastUpdate();
    server26.update();
    tp2.IP iP29 = null;
    boolean b30 = server26.removeException(iP29);
    server26.update();
    long long32 = server26.getLastUpdate();
    tp2.IP iP33 = null;
    boolean b34 = server26.removeBan(iP33);
    tp2.IP iP35 = null;
    boolean b36 = server26.removeBan(iP35);
    server26.update();
    tp2.ITime iTime38 = server26.getTime();
    server0.setTime(iTime38);
    tp2.IP iP40 = null;
    boolean b41 = server0.removeException(iP40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long25 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long32 == 1465509000331L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);

  }

  @Test
  public void test254() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test254"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    java.lang.String str8 = server0.toString();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.ITime iTime12 = server9.getTime();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server9.setTime(iTime15);
    server0.setTime(iTime15);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509000342, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509000342, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);

  }

  @Test
  public void test255() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test255"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    long long12 = server0.getLastUpdate();
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509000350, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509000350, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509000350L);

  }

  @Test
  public void test256() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test256"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server7.setTime(iTime10);
    server7.update();
    java.lang.String str13 = server7.toString();
    tp2.ITime iTime14 = server7.getTime();
    server0.setTime(iTime14);
    tp2.ITime iTime16 = server0.getTime();
    tp2.IP iP17 = null;
    boolean b18 = server0.removeException(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509000433, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509000433, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test257() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test257"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = null;
    server0.setTime(iTime12);
    java.lang.String str14 = server0.toString();
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.IP iP18 = null;
    boolean b19 = server15.connect(iP18);
    long long20 = server15.getLastUpdate();
    java.lang.String str21 = server15.toString();
    server15.update();
    server15.update();
    tp2.ITime iTime24 = server15.getTime();
    server0.setTime(iTime24);
    tp2.IP iP26 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b27 = server0.addException(iP26);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465509000439L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Server [lastUpdate=1465509000439, exceptions=(), bans={}]"+ "'", str21.equals("Server [lastUpdate=1465509000439, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);

  }

  @Test
  public void test258() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test258"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509000440L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test259() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test259"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    tp2.ITime iTime10 = server0.getTime();
    tp2.ITime iTime11 = server0.getTime();
    tp2.ITime iTime12 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);

  }

  @Test
  public void test260() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test260"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    server25.update();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeException(iP28);
    server25.update();
    long long31 = server25.getLastUpdate();
    tp2.IP iP32 = null;
    boolean b33 = server25.removeBan(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server25.removeBan(iP34);
    long long36 = server25.getLastUpdate();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    tp2.IP iP39 = null;
    boolean b40 = server37.removeException(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server37.connect(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server37.removeException(iP43);
    tp2.IP iP45 = null;
    boolean b46 = server37.connect(iP45);
    tp2.IP iP47 = null;
    boolean b48 = server37.connect(iP47);
    tp2.Server server49 = new tp2.Server();
    tp2.ITime iTime50 = server49.getTime();
    server49.update();
    tp2.ITime iTime52 = server49.getTime();
    server37.setTime(iTime52);
    server25.setTime(iTime52);
    server0.setTime(iTime52);
    tp2.IP iP56 = null;
    boolean b57 = server0.connect(iP56);
    server0.update();
    tp2.IP iP59 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b60 = server0.addException(iP59);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465509000454, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465509000454, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509000455L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 1465509000455L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);

  }

  @Test
  public void test261() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test261"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    server0.update();
    java.lang.String str10 = server0.toString();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    java.lang.String str13 = server0.toString();
    long long14 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509000469L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509000469, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509000469, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509000470, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509000470, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509000470, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509000470, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509000470L);

  }

  @Test
  public void test262() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test262"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509000619L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509000619, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509000619, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test263() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test263"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    server0.update();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test264() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test264"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    tp2.ITime iTime14 = server12.getTime();
    server8.setTime(iTime14);
    java.lang.String str16 = server8.toString();
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    tp2.Server server21 = new tp2.Server();
    long long22 = server21.getLastUpdate();
    tp2.ITime iTime23 = server21.getTime();
    server17.setTime(iTime23);
    server8.setTime(iTime23);
    server0.setTime(iTime23);
    java.lang.String str27 = server0.toString();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509000647, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509000647, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str27.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test265() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test265"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.connect(iP12);
    tp2.IP iP14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = server0.addException(iP14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);

  }

  @Test
  public void test266() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test266"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509000706L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509000706, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509000706, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test267() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test267"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    server0.update();
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server5.removeBan(iP9);
    server5.update();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server12.setTime(iTime15);
    server12.update();
    java.lang.String str18 = server12.toString();
    tp2.ITime iTime19 = server12.getTime();
    server5.setTime(iTime19);
    server0.setTime(iTime19);
    java.lang.String str22 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509000736, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509000736, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Server [lastUpdate=1465509000735, exceptions=(), bans={}]"+ "'", str22.equals("Server [lastUpdate=1465509000735, exceptions=(), bans={}]"));

  }

  @Test
  public void test268() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test268"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.removeException(iP17);
    tp2.IP iP19 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b20 = server0.addException(iP19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509000751L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test269() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test269"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    java.lang.String str3 = server0.toString();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.connect(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=1465509000755, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=1465509000755, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509000755L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test270() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test270"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509000756L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test271() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test271"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509000800L);

  }

  @Test
  public void test272() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test272"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test273() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test273"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    server25.update();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeException(iP28);
    server25.update();
    long long31 = server25.getLastUpdate();
    tp2.IP iP32 = null;
    boolean b33 = server25.removeBan(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server25.removeBan(iP34);
    long long36 = server25.getLastUpdate();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    tp2.IP iP39 = null;
    boolean b40 = server37.removeException(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server37.connect(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server37.removeException(iP43);
    tp2.IP iP45 = null;
    boolean b46 = server37.connect(iP45);
    tp2.IP iP47 = null;
    boolean b48 = server37.connect(iP47);
    tp2.Server server49 = new tp2.Server();
    tp2.ITime iTime50 = server49.getTime();
    server49.update();
    tp2.ITime iTime52 = server49.getTime();
    server37.setTime(iTime52);
    server25.setTime(iTime52);
    server0.setTime(iTime52);
    tp2.ITime iTime56 = server0.getTime();
    tp2.IP iP57 = null;
    boolean b58 = server0.removeException(iP57);
    tp2.IP iP59 = null;
    boolean b60 = server0.removeBan(iP59);
    tp2.IP iP61 = null;
    boolean b62 = server0.removeException(iP61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465509000804, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465509000804, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509000805L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 1465509000805L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);

  }

  @Test
  public void test274() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test274"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.ITime iTime9 = server0.getTime();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    tp2.ITime iTime12 = server10.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server10.removeBan(iP13);
    tp2.ITime iTime15 = server10.getTime();
    server0.setTime(iTime15);
    tp2.IP iP17 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = server0.addException(iP17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509000895, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509000895, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);

  }

  @Test
  public void test275() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test275"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    long long11 = server0.getLastUpdate();
    long long12 = server0.getLastUpdate();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server13.removeException(iP16);
    tp2.ITime iTime18 = server13.getTime();
    server0.setTime(iTime18);
    server0.update();
    long long21 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509000898L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509000898L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509000898L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509000899L);

  }

  @Test
  public void test276() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test276"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    tp2.ITime iTime11 = server5.getTime();
    server0.setTime(iTime11);
    long long13 = server0.getLastUpdate();
    tp2.IP iP14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = server0.addException(iP14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509000916L);

  }

  @Test
  public void test277() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test277"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    java.lang.String str7 = server0.toString();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509000918, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509000918, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test278() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test278"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    tp2.ITime iTime11 = server5.getTime();
    server0.setTime(iTime11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server15.setTime(iTime18);
    server15.update();
    server15.update();
    tp2.Server server22 = new tp2.Server();
    tp2.ITime iTime23 = server22.getTime();
    tp2.IP iP24 = null;
    boolean b25 = server22.removeException(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server22.connect(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server22.removeException(iP28);
    tp2.Server server30 = new tp2.Server();
    long long31 = server30.getLastUpdate();
    server30.update();
    tp2.IP iP33 = null;
    boolean b34 = server30.removeException(iP33);
    server30.update();
    tp2.ITime iTime36 = server30.getTime();
    server22.setTime(iTime36);
    server15.setTime(iTime36);
    server0.setTime(iTime36);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);

  }

  @Test
  public void test279() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test279"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    java.lang.String str5 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Server [lastUpdate=1465509000972, exceptions=(), bans={}]"+ "'", str5.equals("Server [lastUpdate=1465509000972, exceptions=(), bans={}]"));

  }

  @Test
  public void test280() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test280"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    long long9 = server0.getLastUpdate();
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509000973L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test281() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test281"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    long long8 = server0.getLastUpdate();
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    server0.update();
    long long13 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509001004L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509001004, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509001004, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509001004L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509001005L);

  }

  @Test
  public void test282() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test282"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509001010L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test283() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test283"); }


    tp2.Server server0 = new tp2.Server();
    tp2.IP iP1 = null;
    boolean b2 = server0.connect(iP1);
    java.lang.String str3 = server0.toString();
    tp2.ITime iTime4 = server0.getTime();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test284() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test284"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.ITime iTime12 = server0.getTime();
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509001123L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509001123L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);

  }

  @Test
  public void test285() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test285"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    java.lang.String str12 = server0.toString();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server0.setTime(iTime15);
    long long17 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509001149L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509001149, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509001149, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509001149, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509001149, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 1465509001149L);

  }

  @Test
  public void test286() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test286"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    java.lang.String str15 = server13.toString();
    tp2.ITime iTime16 = server13.getTime();
    server0.setTime(iTime16);
    tp2.IP iP18 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b19 = server0.addException(iP18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509001190L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);

  }

  @Test
  public void test287() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test287"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test288() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test288"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    server0.update();
    tp2.ITime iTime9 = server0.getTime();
    server0.update();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509001241, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509001241, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509001241, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509001241, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);

  }

  @Test
  public void test289() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test289"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    server0.update();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server7.removeException(iP13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    server15.update();
    tp2.IP iP18 = null;
    boolean b19 = server15.removeException(iP18);
    server15.update();
    tp2.ITime iTime21 = server15.getTime();
    server7.setTime(iTime21);
    server0.setTime(iTime21);
    tp2.IP iP24 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b25 = server0.addException(iP24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);

  }

  @Test
  public void test290() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test290"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    java.lang.String str15 = server0.toString();
    long long16 = server0.getLastUpdate();
    tp2.IP iP17 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = server0.addException(iP17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509001256L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=1465509001256, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=1465509001256, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 1465509001256L);

  }

  @Test
  public void test291() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test291"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509001282, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509001282, exceptions=(), bans={}]"));

  }

  @Test
  public void test292() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test292"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeException(iP11);
    server8.update();
    tp2.ITime iTime14 = server8.getTime();
    server0.setTime(iTime14);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);

  }

  @Test
  public void test293() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test293"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    java.lang.String str8 = server0.toString();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.ITime iTime12 = server9.getTime();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server9.setTime(iTime15);
    server0.setTime(iTime15);
    tp2.IP iP18 = null;
    boolean b19 = server0.connect(iP18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509001303, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509001303, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test294() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test294"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    server6.update();
    tp2.IP iP9 = null;
    boolean b10 = server6.connect(iP9);
    long long11 = server6.getLastUpdate();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.ITime iTime18 = server12.getTime();
    server6.setTime(iTime18);
    server0.setTime(iTime18);
    tp2.ITime iTime21 = null;
    server0.setTime(iTime21);
    tp2.IP iP23 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b24 = server0.addBan(iP23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509001320L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);

  }

  @Test
  public void test295() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test295"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    tp2.ITime iTime10 = server0.getTime();
    tp2.Server server11 = new tp2.Server();
    tp2.ITime iTime12 = server11.getTime();
    server11.update();
    tp2.ITime iTime14 = server11.getTime();
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    tp2.ITime iTime17 = server15.getTime();
    server11.setTime(iTime17);
    tp2.IP iP19 = null;
    boolean b20 = server11.connect(iP19);
    long long21 = server11.getLastUpdate();
    java.lang.String str22 = server11.toString();
    tp2.ITime iTime23 = server11.getTime();
    java.lang.String str24 = server11.toString();
    tp2.ITime iTime25 = server11.getTime();
    server0.setTime(iTime25);
    tp2.IP iP27 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b28 = server0.addException(iP27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509001341L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Server [lastUpdate=1465509001341, exceptions=(), bans={}]"+ "'", str22.equals("Server [lastUpdate=1465509001341, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465509001341, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465509001341, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);

  }

  @Test
  public void test296() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test296"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.removeException(iP11);
    long long13 = server7.getLastUpdate();
    java.lang.String str14 = server7.toString();
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.ITime iTime18 = server15.getTime();
    tp2.Server server19 = new tp2.Server();
    long long20 = server19.getLastUpdate();
    tp2.ITime iTime21 = server19.getTime();
    server15.setTime(iTime21);
    java.lang.String str23 = server15.toString();
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    server24.update();
    tp2.ITime iTime27 = server24.getTime();
    tp2.Server server28 = new tp2.Server();
    long long29 = server28.getLastUpdate();
    tp2.ITime iTime30 = server28.getTime();
    server24.setTime(iTime30);
    server15.setTime(iTime30);
    server7.setTime(iTime30);
    tp2.IP iP34 = null;
    boolean b35 = server7.removeBan(iP34);
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.IP iP39 = null;
    boolean b40 = server36.connect(iP39);
    long long41 = server36.getLastUpdate();
    tp2.IP iP42 = null;
    boolean b43 = server36.removeBan(iP42);
    server36.update();
    tp2.Server server45 = new tp2.Server();
    long long46 = server45.getLastUpdate();
    server45.update();
    tp2.IP iP48 = null;
    boolean b49 = server45.removeException(iP48);
    server45.update();
    long long51 = server45.getLastUpdate();
    tp2.IP iP52 = null;
    boolean b53 = server45.removeBan(iP52);
    tp2.IP iP54 = null;
    boolean b55 = server45.removeBan(iP54);
    long long56 = server45.getLastUpdate();
    tp2.ITime iTime57 = server45.getTime();
    server36.setTime(iTime57);
    server7.setTime(iTime57);
    server0.setTime(iTime57);
    java.lang.String str61 = server0.toString();
    tp2.ITime iTime62 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465509001346, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465509001346, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 1465509001347L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long46 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long51 == 1465509001348L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long56 == 1465509001348L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "Server [lastUpdate=1465509001343, exceptions=(), bans={}]"+ "'", str61.equals("Server [lastUpdate=1465509001343, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime62);

  }

  @Test
  public void test297() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test297"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509001396L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);

  }

  @Test
  public void test298() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test298"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.connect(iP12);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509001432, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509001432, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);

  }

  @Test
  public void test299() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test299"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.ITime iTime11 = server0.getTime();
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);

  }

  @Test
  public void test300() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test300"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    tp2.ITime iTime11 = server5.getTime();
    server0.setTime(iTime11);
    long long13 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509001438L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test301() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test301"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.IP iP13 = null;
    boolean b14 = server12.connect(iP13);
    java.lang.String str15 = server12.toString();
    tp2.ITime iTime16 = server12.getTime();
    server0.setTime(iTime16);
    tp2.IP iP18 = null;
    boolean b19 = server0.connect(iP18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509001454, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509001454, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test302() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test302"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    server0.update();
    server0.update();
    java.lang.String str15 = server0.toString();
    tp2.IP iP16 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b17 = server0.addException(iP16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509001462L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=1465509001464, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=1465509001464, exceptions=(), bans={}]"));

  }

  @Test
  public void test303() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test303"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    long long10 = server0.getLastUpdate();
    server0.update();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    tp2.ITime iTime18 = server16.getTime();
    server12.setTime(iTime18);
    tp2.ITime iTime20 = server12.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server12.removeException(iP21);
    tp2.Server server23 = new tp2.Server();
    long long24 = server23.getLastUpdate();
    java.lang.String str25 = server23.toString();
    tp2.IP iP26 = null;
    boolean b27 = server23.removeBan(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server23.removeBan(iP28);
    long long30 = server23.getLastUpdate();
    tp2.ITime iTime31 = server23.getTime();
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    tp2.IP iP34 = null;
    boolean b35 = server32.connect(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server32.removeException(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server32.removeException(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server32.connect(iP40);
    tp2.Server server42 = new tp2.Server();
    long long43 = server42.getLastUpdate();
    server42.update();
    tp2.ITime iTime45 = server42.getTime();
    server32.setTime(iTime45);
    server23.setTime(iTime45);
    server12.setTime(iTime45);
    server0.setTime(iTime45);
    tp2.IP iP50 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b51 = server0.addException(iP50);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509001467L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509001467L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509001467L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str25.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long43 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);

  }

  @Test
  public void test304() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test304"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server13.removeException(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server13.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server13.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server13.connect(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server13.connect(iP23);
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    server25.update();
    tp2.ITime iTime28 = server25.getTime();
    server13.setTime(iTime28);
    server8.setTime(iTime28);
    tp2.IP iP31 = null;
    boolean b32 = server8.removeException(iP31);
    tp2.ITime iTime33 = server8.getTime();
    server0.setTime(iTime33);
    tp2.ITime iTime35 = server0.getTime();
    java.lang.String str36 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509001480, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509001480, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "Server [lastUpdate=1465509001480, exceptions=(), bans={}]"+ "'", str36.equals("Server [lastUpdate=1465509001480, exceptions=(), bans={}]"));

  }

  @Test
  public void test305() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test305"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    long long12 = server0.getLastUpdate();
    long long13 = server0.getLastUpdate();
    tp2.IP iP14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = server0.addException(iP14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509001504, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509001504, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509001504, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509001504, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509001504L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509001504L);

  }

  @Test
  public void test306() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test306"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    server0.update();
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test307() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test307"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test308() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test308"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server12.removeException(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server12.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server12.removeException(iP22);
    java.lang.String str24 = server12.toString();
    tp2.IP iP25 = null;
    boolean b26 = server12.removeBan(iP25);
    tp2.ITime iTime27 = server12.getTime();
    server0.setTime(iTime27);
    tp2.Server server29 = new tp2.Server();
    tp2.ITime iTime30 = server29.getTime();
    server29.update();
    tp2.ITime iTime32 = server29.getTime();
    tp2.IP iP33 = null;
    boolean b34 = server29.connect(iP33);
    java.lang.String str35 = server29.toString();
    tp2.IP iP36 = null;
    boolean b37 = server29.removeBan(iP36);
    tp2.ITime iTime38 = server29.getTime();
    tp2.Server server39 = new tp2.Server();
    long long40 = server39.getLastUpdate();
    tp2.ITime iTime41 = server39.getTime();
    tp2.IP iP42 = null;
    boolean b43 = server39.removeBan(iP42);
    tp2.ITime iTime44 = server39.getTime();
    server29.setTime(iTime44);
    java.lang.String str46 = server29.toString();
    tp2.Server server47 = new tp2.Server();
    long long48 = server47.getLastUpdate();
    server47.update();
    tp2.IP iP50 = null;
    boolean b51 = server47.removeException(iP50);
    server47.update();
    tp2.ITime iTime53 = server47.getTime();
    tp2.IP iP54 = null;
    boolean b55 = server47.removeBan(iP54);
    long long56 = server47.getLastUpdate();
    tp2.ITime iTime57 = server47.getTime();
    server29.setTime(iTime57);
    server0.setTime(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "Server [lastUpdate=1465509001700, exceptions=(), bans={}]"+ "'", str35.equals("Server [lastUpdate=1465509001700, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long40 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "Server [lastUpdate=1465509001700, exceptions=(), bans={}]"+ "'", str46.equals("Server [lastUpdate=1465509001700, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long48 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long56 == 1465509001700L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);

  }

  @Test
  public void test309() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test309"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server0.removeException(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server0.connect(iP23);
    long long25 = server0.getLastUpdate();
    java.lang.String str26 = server0.toString();
    tp2.IP iP27 = null;
    boolean b28 = server0.removeException(iP27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long25 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str26.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test310() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test310"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.ITime iTime12 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);

  }

  @Test
  public void test311() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test311"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    server0.update();
    java.lang.String str6 = server0.toString();
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509001732, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509001732, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test312() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test312"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.connect(iP12);
    tp2.IP iP14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = server0.addException(iP14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);

  }

  @Test
  public void test313() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test313"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    long long4 = server0.getLastUpdate();
    java.lang.String str5 = server0.toString();
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    server6.update();
    tp2.ITime iTime9 = server6.getTime();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    tp2.ITime iTime12 = server10.getTime();
    server6.setTime(iTime12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    long long16 = server6.getLastUpdate();
    java.lang.String str17 = server6.toString();
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    java.lang.String str20 = server18.toString();
    tp2.IP iP21 = null;
    boolean b22 = server18.removeBan(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    server23.update();
    tp2.ITime iTime26 = server23.getTime();
    long long27 = server23.getLastUpdate();
    tp2.IP iP28 = null;
    boolean b29 = server23.removeBan(iP28);
    tp2.Server server30 = new tp2.Server();
    tp2.ITime iTime31 = server30.getTime();
    tp2.IP iP32 = null;
    boolean b33 = server30.removeException(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server30.connect(iP34);
    tp2.Server server36 = new tp2.Server();
    long long37 = server36.getLastUpdate();
    tp2.ITime iTime38 = server36.getTime();
    server30.setTime(iTime38);
    server23.setTime(iTime38);
    server18.setTime(iTime38);
    server6.setTime(iTime38);
    server6.update();
    long long44 = server6.getLastUpdate();
    tp2.Server server45 = new tp2.Server();
    long long46 = server45.getLastUpdate();
    server45.update();
    tp2.IP iP48 = null;
    boolean b49 = server45.removeException(iP48);
    server45.update();
    long long51 = server45.getLastUpdate();
    tp2.IP iP52 = null;
    boolean b53 = server45.removeBan(iP52);
    tp2.IP iP54 = null;
    boolean b55 = server45.removeBan(iP54);
    long long56 = server45.getLastUpdate();
    tp2.ITime iTime57 = server45.getTime();
    server6.setTime(iTime57);
    server0.setTime(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str5.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 1465509001737L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509001737, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509001737, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465509001738L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long37 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long44 == 1465509001739L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long46 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long51 == 1465509001739L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long56 == 1465509001739L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);

  }

  @Test
  public void test314() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test314"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server7.setTime(iTime15);
    server0.setTime(iTime15);
    tp2.IP iP18 = null;
    boolean b19 = server0.removeException(iP18);
    java.lang.String str20 = server0.toString();
    server0.update();
    tp2.IP iP22 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b23 = server0.addException(iP22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509001789L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=1465509001789, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=1465509001789, exceptions=(), bans={}]"));

  }

  @Test
  public void test315() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test315"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    java.lang.String str4 = server0.toString();
    tp2.ITime iTime5 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=1465509001852, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=1465509001852, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);

  }

  @Test
  public void test316() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test316"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    server0.update();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509001854L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509001854, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509001854, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509001854, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509001854, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509001854, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509001854, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test317() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test317"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509001863L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509001863L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test318() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test318"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    long long6 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server10.removeBan(iP14);
    java.lang.String str16 = server10.toString();
    java.lang.String str17 = server10.toString();
    tp2.ITime iTime18 = server10.getTime();
    server0.setTime(iTime18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    tp2.IP iP22 = null;
    boolean b23 = server20.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server20.connect(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server20.removeException(iP26);
    tp2.Server server28 = new tp2.Server();
    long long29 = server28.getLastUpdate();
    server28.update();
    tp2.IP iP31 = null;
    boolean b32 = server28.removeException(iP31);
    server28.update();
    tp2.ITime iTime34 = server28.getTime();
    server20.setTime(iTime34);
    server0.setTime(iTime34);
    tp2.IP iP37 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b38 = server0.addException(iP37);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509001906, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509001906, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509001906, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509001906, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);

  }

  @Test
  public void test319() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test319"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    server0.update();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.connect(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509001981L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509001982, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509001982, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);

  }

  @Test
  public void test320() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test320"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    server0.update();
    server0.update();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.ITime iTime15 = server0.getTime();
    tp2.IP iP16 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b17 = server0.addException(iP16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509001988L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);

  }

  @Test
  public void test321() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test321"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.Server server6 = new tp2.Server();
    long long7 = server6.getLastUpdate();
    long long8 = server6.getLastUpdate();
    java.lang.String str9 = server6.toString();
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    tp2.Server server14 = new tp2.Server();
    long long15 = server14.getLastUpdate();
    tp2.ITime iTime16 = server14.getTime();
    server10.setTime(iTime16);
    tp2.IP iP18 = null;
    boolean b19 = server10.connect(iP18);
    long long20 = server10.getLastUpdate();
    tp2.ITime iTime21 = server10.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    server0.update();
    long long25 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509001988L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465509001989L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long25 == 1465509001989L);

  }

  @Test
  public void test322() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test322"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);

  }

  @Test
  public void test323() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test323"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    server0.update();
    server0.update();
    java.lang.String str15 = server0.toString();
    long long16 = server0.getLastUpdate();
    tp2.IP iP17 = null;
    boolean b18 = server0.removeException(iP17);
    tp2.Server server19 = new tp2.Server();
    tp2.ITime iTime20 = server19.getTime();
    server19.update();
    tp2.IP iP22 = null;
    boolean b23 = server19.connect(iP22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server24.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server24.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server24.connect(iP34);
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.ITime iTime39 = server36.getTime();
    server24.setTime(iTime39);
    server19.setTime(iTime39);
    tp2.Server server42 = new tp2.Server();
    tp2.ITime iTime43 = server42.getTime();
    tp2.IP iP44 = null;
    boolean b45 = server42.removeException(iP44);
    tp2.IP iP46 = null;
    boolean b47 = server42.connect(iP46);
    tp2.IP iP48 = null;
    boolean b49 = server42.removeException(iP48);
    tp2.IP iP50 = null;
    boolean b51 = server42.connect(iP50);
    tp2.IP iP52 = null;
    boolean b53 = server42.removeException(iP52);
    java.lang.String str54 = server42.toString();
    tp2.IP iP55 = null;
    boolean b56 = server42.removeBan(iP55);
    tp2.Server server57 = new tp2.Server();
    tp2.ITime iTime58 = server57.getTime();
    server57.update();
    tp2.IP iP60 = null;
    boolean b61 = server57.connect(iP60);
    tp2.Server server62 = new tp2.Server();
    tp2.ITime iTime63 = server62.getTime();
    tp2.IP iP64 = null;
    boolean b65 = server62.removeException(iP64);
    tp2.IP iP66 = null;
    boolean b67 = server62.connect(iP66);
    tp2.IP iP68 = null;
    boolean b69 = server62.removeException(iP68);
    tp2.IP iP70 = null;
    boolean b71 = server62.connect(iP70);
    tp2.IP iP72 = null;
    boolean b73 = server62.connect(iP72);
    tp2.Server server74 = new tp2.Server();
    tp2.ITime iTime75 = server74.getTime();
    server74.update();
    tp2.ITime iTime77 = server74.getTime();
    server62.setTime(iTime77);
    server57.setTime(iTime77);
    server42.setTime(iTime77);
    server19.setTime(iTime77);
    server0.setTime(iTime77);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509002040L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=1465509002040, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=1465509002040, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 1465509002040L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str54.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime77);

  }

  @Test
  public void test324() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test324"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.ITime iTime12 = server9.getTime();
    server0.setTime(iTime12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeException(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509002106L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test325() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test325"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.ITime iTime9 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509002116L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);

  }

  @Test
  public void test326() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test326"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    tp2.ITime iTime14 = server12.getTime();
    server8.setTime(iTime14);
    java.lang.String str16 = server8.toString();
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    tp2.Server server21 = new tp2.Server();
    long long22 = server21.getLastUpdate();
    tp2.ITime iTime23 = server21.getTime();
    server17.setTime(iTime23);
    server8.setTime(iTime23);
    server0.setTime(iTime23);
    tp2.IP iP27 = null;
    boolean b28 = server0.removeBan(iP27);
    tp2.IP iP29 = null;
    boolean b30 = server0.removeBan(iP29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509002122, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509002122, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test327() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test327"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509002135L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509002135, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509002135, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);

  }

  @Test
  public void test328() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test328"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.ITime iTime21 = server13.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    tp2.ITime iTime27 = server25.getTime();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeBan(iP28);
    tp2.ITime iTime30 = server25.getTime();
    server0.setTime(iTime30);
    server0.update();
    long long33 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 1465509002171L);

  }

  @Test
  public void test329() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test329"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.ITime iTime9 = server0.getTime();
    java.lang.String str10 = server0.toString();
    java.lang.String str11 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509002195, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509002195, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509002195, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509002195, exceptions=(), bans={}]"));

  }

  @Test
  public void test330() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test330"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test331() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test331"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509002199L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test332() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test332"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509002200L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509002200L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);

  }

  @Test
  public void test333() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test333"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.ITime iTime12 = server0.getTime();
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server13.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server13.removeException(iP17);
    long long19 = server13.getLastUpdate();
    tp2.IP iP20 = null;
    boolean b21 = server13.removeBan(iP20);
    tp2.Server server22 = new tp2.Server();
    long long23 = server22.getLastUpdate();
    tp2.IP iP24 = null;
    boolean b25 = server22.removeException(iP24);
    tp2.Server server26 = new tp2.Server();
    tp2.ITime iTime27 = server26.getTime();
    server26.update();
    tp2.ITime iTime29 = server26.getTime();
    tp2.Server server30 = new tp2.Server();
    long long31 = server30.getLastUpdate();
    tp2.ITime iTime32 = server30.getTime();
    server26.setTime(iTime32);
    tp2.ITime iTime34 = server26.getTime();
    server22.setTime(iTime34);
    server13.setTime(iTime34);
    server0.setTime(iTime34);
    tp2.IP iP38 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b39 = server0.addException(iP38);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);

  }

  @Test
  public void test334() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test334"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    java.lang.String str7 = server5.toString();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeBan(iP8);
    server5.update();
    long long11 = server5.getLastUpdate();
    java.lang.String str12 = server5.toString();
    tp2.ITime iTime13 = server5.getTime();
    server0.setTime(iTime13);
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509002215L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509002215, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509002215, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

  @Test
  public void test335() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test335"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server7.setTime(iTime10);
    server7.update();
    java.lang.String str13 = server7.toString();
    tp2.ITime iTime14 = server7.getTime();
    server0.setTime(iTime14);
    tp2.ITime iTime16 = server0.getTime();
    server0.update();
    tp2.IP iP18 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b19 = server0.addException(iP18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509002216, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509002216, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);

  }

  @Test
  public void test336() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test336"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = null;
    server0.setTime(iTime12);
    java.lang.String str14 = server0.toString();
    java.lang.String str15 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test337() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test337"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    server25.update();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeException(iP28);
    server25.update();
    long long31 = server25.getLastUpdate();
    tp2.IP iP32 = null;
    boolean b33 = server25.removeBan(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server25.removeBan(iP34);
    long long36 = server25.getLastUpdate();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    tp2.IP iP39 = null;
    boolean b40 = server37.removeException(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server37.connect(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server37.removeException(iP43);
    tp2.IP iP45 = null;
    boolean b46 = server37.connect(iP45);
    tp2.IP iP47 = null;
    boolean b48 = server37.connect(iP47);
    tp2.Server server49 = new tp2.Server();
    tp2.ITime iTime50 = server49.getTime();
    server49.update();
    tp2.ITime iTime52 = server49.getTime();
    server37.setTime(iTime52);
    server25.setTime(iTime52);
    server0.setTime(iTime52);
    tp2.ITime iTime56 = server0.getTime();
    tp2.IP iP57 = null;
    boolean b58 = server0.removeException(iP57);
    long long59 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465509002228, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465509002228, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509002230L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 1465509002230L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long59 == 1465509002228L);

  }

  @Test
  public void test338() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test338"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    java.lang.String str12 = server0.toString();
    tp2.ITime iTime13 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509002250L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509002250L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509002250, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509002250, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

  @Test
  public void test339() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test339"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509002263L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test340() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test340"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    java.lang.String str4 = server0.toString();
    server0.update();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=1465509002321, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=1465509002321, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test341() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test341"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    server0.setTime(iTime15);
    tp2.IP iP17 = null;
    boolean b18 = server0.removeException(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server0.removeBan(iP19);
    tp2.Server server21 = new tp2.Server();
    long long22 = server21.getLastUpdate();
    server21.update();
    tp2.IP iP24 = null;
    boolean b25 = server21.removeException(iP24);
    server21.update();
    long long27 = server21.getLastUpdate();
    tp2.IP iP28 = null;
    boolean b29 = server21.removeBan(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server21.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server21.removeBan(iP32);
    tp2.Server server34 = new tp2.Server();
    tp2.ITime iTime35 = server34.getTime();
    server34.update();
    tp2.IP iP37 = null;
    boolean b38 = server34.connect(iP37);
    long long39 = server34.getLastUpdate();
    tp2.ITime iTime40 = server34.getTime();
    server21.setTime(iTime40);
    server0.setTime(iTime40);
    tp2.ITime iTime43 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465509002322L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long39 == 1465509002322L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);

  }

  @Test
  public void test342() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test342"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test343() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test343"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    server0.update();
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509002362L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509002362, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509002362, exceptions=(), bans={}]"));

  }

  @Test
  public void test344() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test344"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    server0.update();
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    tp2.ITime iTime18 = server16.getTime();
    tp2.IP iP19 = null;
    boolean b20 = server16.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server16.removeBan(iP21);
    tp2.ITime iTime23 = server16.getTime();
    server0.setTime(iTime23);
    tp2.IP iP25 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b26 = server0.addException(iP25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);

  }

  @Test
  public void test345() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test345"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test346() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test346"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509002387L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509002387, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509002387, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test347() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test347"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    long long14 = server10.getLastUpdate();
    tp2.IP iP15 = null;
    boolean b16 = server10.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server10.removeException(iP17);
    java.lang.String str19 = server10.toString();
    tp2.IP iP20 = null;
    boolean b21 = server10.connect(iP20);
    tp2.Server server22 = new tp2.Server();
    long long23 = server22.getLastUpdate();
    server22.update();
    tp2.IP iP25 = null;
    boolean b26 = server22.removeException(iP25);
    server22.update();
    long long28 = server22.getLastUpdate();
    tp2.IP iP29 = null;
    boolean b30 = server22.removeBan(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server22.removeBan(iP31);
    long long33 = server22.getLastUpdate();
    tp2.Server server34 = new tp2.Server();
    tp2.ITime iTime35 = server34.getTime();
    tp2.IP iP36 = null;
    boolean b37 = server34.removeException(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server34.connect(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server34.removeException(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server34.connect(iP42);
    tp2.IP iP44 = null;
    boolean b45 = server34.connect(iP44);
    tp2.Server server46 = new tp2.Server();
    tp2.ITime iTime47 = server46.getTime();
    server46.update();
    tp2.ITime iTime49 = server46.getTime();
    server34.setTime(iTime49);
    server22.setTime(iTime49);
    server10.setTime(iTime49);
    server0.setTime(iTime49);
    tp2.IP iP54 = null;
    boolean b55 = server0.removeBan(iP54);
    tp2.IP iP56 = null;
    boolean b57 = server0.connect(iP56);
    tp2.ITime iTime58 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509002388L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509002388, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509002388, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465509002388L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 1465509002388L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime58);

  }

  @Test
  public void test348() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test348"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.ITime iTime2 = server0.getTime();
    tp2.Server server3 = new tp2.Server();
    long long4 = server3.getLastUpdate();
    server3.update();
    tp2.IP iP6 = null;
    boolean b7 = server3.removeException(iP6);
    server3.update();
    server3.update();
    server3.update();
    tp2.Server server11 = new tp2.Server();
    long long12 = server11.getLastUpdate();
    java.lang.String str13 = server11.toString();
    tp2.IP iP14 = null;
    boolean b15 = server11.removeBan(iP14);
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    long long20 = server16.getLastUpdate();
    tp2.IP iP21 = null;
    boolean b22 = server16.removeBan(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    tp2.IP iP25 = null;
    boolean b26 = server23.removeException(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server23.connect(iP27);
    tp2.Server server29 = new tp2.Server();
    long long30 = server29.getLastUpdate();
    tp2.ITime iTime31 = server29.getTime();
    server23.setTime(iTime31);
    server16.setTime(iTime31);
    server11.setTime(iTime31);
    server3.setTime(iTime31);
    java.lang.String str36 = server3.toString();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    server37.update();
    tp2.ITime iTime40 = server37.getTime();
    tp2.IP iP41 = null;
    boolean b42 = server37.removeBan(iP41);
    server37.update();
    tp2.ITime iTime44 = server37.getTime();
    server3.setTime(iTime44);
    tp2.Server server46 = new tp2.Server();
    tp2.ITime iTime47 = server46.getTime();
    server46.update();
    tp2.ITime iTime49 = server46.getTime();
    tp2.IP iP50 = null;
    boolean b51 = server46.removeBan(iP50);
    java.lang.String str52 = server46.toString();
    java.lang.String str53 = server46.toString();
    java.lang.String str54 = server46.toString();
    java.lang.String str55 = server46.toString();
    tp2.ITime iTime56 = server46.getTime();
    server3.setTime(iTime56);
    server0.setTime(iTime56);
    tp2.IP iP59 = null;
    boolean b60 = server0.removeException(iP59);
    long long61 = server0.getLastUpdate();
    long long62 = server0.getLastUpdate();
    tp2.IP iP63 = null;
    boolean b64 = server0.removeException(iP63);
    tp2.IP iP65 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b66 = server0.addException(iP65);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465509002405L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "Server [lastUpdate=1465509002405, exceptions=(), bans={}]"+ "'", str36.equals("Server [lastUpdate=1465509002405, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "Server [lastUpdate=1465509002407, exceptions=(), bans={}]"+ "'", str52.equals("Server [lastUpdate=1465509002407, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "Server [lastUpdate=1465509002407, exceptions=(), bans={}]"+ "'", str53.equals("Server [lastUpdate=1465509002407, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "Server [lastUpdate=1465509002407, exceptions=(), bans={}]"+ "'", str54.equals("Server [lastUpdate=1465509002407, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "Server [lastUpdate=1465509002407, exceptions=(), bans={}]"+ "'", str55.equals("Server [lastUpdate=1465509002407, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long61 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long62 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);

  }

  @Test
  public void test349() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test349"); }


    tp2.Server server0 = new tp2.Server();
    java.lang.String str1 = server0.toString();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str1.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test350() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test350"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeBan(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server5.setTime(iTime13);
    server0.setTime(iTime13);
    java.lang.String str16 = server0.toString();
    server0.update();
    tp2.IP iP18 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b19 = server0.addException(iP18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test351() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test351"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    server0.update();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509002452, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509002452, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509002452, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509002452, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test352() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test352"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509002461L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509002461L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test353() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test353"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server0.removeException(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeBan(iP23);
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    server25.update();
    tp2.IP iP28 = null;
    boolean b29 = server25.connect(iP28);
    server25.update();
    tp2.ITime iTime31 = server25.getTime();
    server0.setTime(iTime31);
    tp2.ITime iTime33 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);

  }

  @Test
  public void test354() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test354"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    java.lang.String str12 = server0.toString();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server0.setTime(iTime15);
    long long17 = server0.getLastUpdate();
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server0.setTime(iTime21);
    long long23 = server0.getLastUpdate();
    tp2.IP iP24 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b25 = server0.addException(iP24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509002479L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509002479, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509002479, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509002479, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509002479, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 1465509002479L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 1465509002479L);

  }

  @Test
  public void test355() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test355"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.ITime iTime6 = null;
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addBan(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test356() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test356"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    java.lang.String str11 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test357() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test357"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    tp2.ITime iTime7 = server0.getTime();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    long long12 = server8.getLastUpdate();
    tp2.IP iP13 = null;
    boolean b14 = server8.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server8.removeException(iP15);
    java.lang.String str17 = server8.toString();
    tp2.IP iP18 = null;
    boolean b19 = server8.connect(iP18);
    tp2.Server server20 = new tp2.Server();
    long long21 = server20.getLastUpdate();
    server20.update();
    tp2.IP iP23 = null;
    boolean b24 = server20.removeException(iP23);
    server20.update();
    long long26 = server20.getLastUpdate();
    tp2.IP iP27 = null;
    boolean b28 = server20.removeBan(iP27);
    tp2.IP iP29 = null;
    boolean b30 = server20.removeBan(iP29);
    long long31 = server20.getLastUpdate();
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    tp2.IP iP34 = null;
    boolean b35 = server32.removeException(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server32.connect(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server32.removeException(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server32.connect(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server32.connect(iP42);
    tp2.Server server44 = new tp2.Server();
    tp2.ITime iTime45 = server44.getTime();
    server44.update();
    tp2.ITime iTime47 = server44.getTime();
    server32.setTime(iTime47);
    server20.setTime(iTime47);
    server8.setTime(iTime47);
    server0.setTime(iTime47);
    tp2.IP iP52 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b53 = server0.addException(iP52);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509002495, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509002495, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509002496L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509002496, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509002496, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 1465509002497L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509002497L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);

  }

  @Test
  public void test358() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test358"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    server0.update();
    server0.update();
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509002503L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509002503, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509002503, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);

  }

  @Test
  public void test359() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test359"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test360() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test360"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    server9.update();
    tp2.IP iP12 = null;
    boolean b13 = server9.removeException(iP12);
    server9.update();
    long long15 = server9.getLastUpdate();
    tp2.IP iP16 = null;
    boolean b17 = server9.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    tp2.IP iP24 = null;
    boolean b25 = server0.connect(iP24);
    tp2.IP iP26 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b27 = server0.addException(iP26);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509002520L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509002522L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);

  }

  @Test
  public void test361() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test361"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509002522L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509002522, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509002522, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509002522, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509002522, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509002522, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509002522, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test362() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test362"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    long long9 = server5.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server5.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server12.setTime(iTime20);
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    java.lang.String str26 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509002735L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str26.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test363() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test363"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    tp2.ITime iTime11 = server5.getTime();
    server0.setTime(iTime11);
    server0.update();
    long long14 = server0.getLastUpdate();
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509002741L);

  }

  @Test
  public void test364() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test364"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    long long7 = server0.getLastUpdate();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509002770L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test365() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test365"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    long long6 = server0.getLastUpdate();
    server0.update();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server8.removeException(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server8.connect(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server8.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server8.connect(iP16);
    java.lang.String str18 = server8.toString();
    java.lang.String str19 = server8.toString();
    server8.update();
    tp2.ITime iTime21 = server8.getTime();
    server0.setTime(iTime21);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeException(iP23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test366() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test366"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    long long4 = server0.getLastUpdate();
    java.lang.String str5 = server0.toString();
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str5.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);

  }

  @Test
  public void test367() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test367"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);

  }

  @Test
  public void test368() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test368"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    tp2.ITime iTime10 = server0.getTime();
    java.lang.String str11 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509002811L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509002811, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509002811, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509002811, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509002811, exceptions=(), bans={}]"));

  }

  @Test
  public void test369() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test369"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    java.lang.String str6 = server0.toString();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    server7.update();
    tp2.ITime iTime10 = server7.getTime();
    tp2.Server server11 = new tp2.Server();
    long long12 = server11.getLastUpdate();
    tp2.ITime iTime13 = server11.getTime();
    server7.setTime(iTime13);
    server0.setTime(iTime13);
    tp2.IP iP16 = null;
    boolean b17 = server0.connect(iP16);
    java.lang.String str18 = server0.toString();
    tp2.IP iP19 = null;
    boolean b20 = server0.removeException(iP19);
    long long21 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509002831, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509002831, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509002831, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509002831, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509002831L);

  }

  @Test
  public void test370() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test370"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.ITime iTime12 = server0.getTime();
    long long13 = server0.getLastUpdate();
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    tp2.IP iP16 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b17 = server0.addException(iP16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509002839L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);

  }

  @Test
  public void test371() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test371"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    java.lang.String str12 = server10.toString();
    server10.update();
    tp2.IP iP14 = null;
    boolean b15 = server10.removeBan(iP14);
    tp2.ITime iTime16 = server10.getTime();
    server0.setTime(iTime16);
    server0.update();
    tp2.ITime iTime19 = server0.getTime();
    long long20 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509002845, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509002845, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465509002847L);

  }

  @Test
  public void test372() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test372"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    tp2.ITime iTime11 = server5.getTime();
    server0.setTime(iTime11);
    long long13 = server0.getLastUpdate();
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509002852L);

  }

  @Test
  public void test373() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test373"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    server0.update();
    java.lang.String str14 = server0.toString();
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.removeException(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509002856L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509002856, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509002856, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465509002857, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465509002857, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test374() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test374"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    java.lang.String str6 = server0.toString();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    server7.update();
    tp2.ITime iTime10 = server7.getTime();
    tp2.Server server11 = new tp2.Server();
    long long12 = server11.getLastUpdate();
    tp2.ITime iTime13 = server11.getTime();
    server7.setTime(iTime13);
    server0.setTime(iTime13);
    tp2.IP iP16 = null;
    boolean b17 = server0.connect(iP16);
    java.lang.String str18 = server0.toString();
    tp2.ITime iTime19 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509002862, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509002862, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509002862, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509002862, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);

  }

  @Test
  public void test375() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test375"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test376() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test376"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    long long11 = server0.getLastUpdate();
    long long12 = server0.getLastUpdate();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server13.removeException(iP16);
    tp2.ITime iTime18 = server13.getTime();
    server0.setTime(iTime18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    server20.update();
    tp2.ITime iTime23 = server20.getTime();
    tp2.IP iP24 = null;
    boolean b25 = server20.removeBan(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server20.connect(iP26);
    tp2.Server server28 = new tp2.Server();
    long long29 = server28.getLastUpdate();
    server28.update();
    tp2.IP iP31 = null;
    boolean b32 = server28.removeException(iP31);
    server28.update();
    tp2.ITime iTime34 = server28.getTime();
    server20.setTime(iTime34);
    server0.setTime(iTime34);
    tp2.IP iP37 = null;
    boolean b38 = server0.removeException(iP37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509002928L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509002928L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509002928L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);

  }

  @Test
  public void test377() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test377"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    long long7 = server0.getLastUpdate();
    tp2.ITime iTime8 = server0.getTime();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.IP iP12 = null;
    boolean b13 = server9.connect(iP12);
    long long14 = server9.getLastUpdate();
    tp2.IP iP15 = null;
    boolean b16 = server9.connect(iP15);
    tp2.ITime iTime17 = server9.getTime();
    server0.setTime(iTime17);
    tp2.IP iP19 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b20 = server0.addException(iP19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509002944L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509002944L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);

  }

  @Test
  public void test378() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test378"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test379() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test379"); }


    tp2.Server server0 = new tp2.Server();
    tp2.Server server1 = new tp2.Server();
    long long2 = server1.getLastUpdate();
    server1.update();
    tp2.IP iP4 = null;
    boolean b5 = server1.removeException(iP4);
    server1.update();
    long long7 = server1.getLastUpdate();
    tp2.IP iP8 = null;
    boolean b9 = server1.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server1.removeBan(iP10);
    server1.update();
    server1.update();
    tp2.IP iP14 = null;
    boolean b15 = server1.removeBan(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server1.removeException(iP16);
    tp2.ITime iTime18 = server1.getTime();
    server0.setTime(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long2 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509002963L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);

  }

  @Test
  public void test380() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test380"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test381() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test381"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    server0.update();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test382() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test382"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.ITime iTime4 = server0.getTime();
    tp2.IP iP5 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b6 = server0.addException(iP5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime4);

  }

  @Test
  public void test383() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test383"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeBan(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server0.removeException(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server0.connect(iP27);
    tp2.IP iP29 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b30 = server0.addException(iP29);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);

  }

  @Test
  public void test384() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test384"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.ITime iTime5 = server0.getTime();
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test385() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test385"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.ITime iTime21 = server13.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    tp2.ITime iTime27 = server25.getTime();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeBan(iP28);
    tp2.ITime iTime30 = server25.getTime();
    server0.setTime(iTime30);
    tp2.Server server32 = new tp2.Server();
    long long33 = server32.getLastUpdate();
    java.lang.String str34 = server32.toString();
    tp2.IP iP35 = null;
    boolean b36 = server32.removeBan(iP35);
    tp2.IP iP37 = null;
    boolean b38 = server32.removeBan(iP37);
    long long39 = server32.getLastUpdate();
    tp2.ITime iTime40 = server32.getTime();
    tp2.IP iP41 = null;
    boolean b42 = server32.removeBan(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server32.removeException(iP43);
    tp2.ITime iTime45 = server32.getTime();
    server0.setTime(iTime45);
    long long47 = server0.getLastUpdate();
    tp2.IP iP48 = null;
    boolean b49 = server0.removeException(iP48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str34.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long39 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long47 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);

  }

  @Test
  public void test386() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test386"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    java.lang.String str13 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test387() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test387"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509003109L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509003109, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509003109, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509003109, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509003109, exceptions=(), bans={}]"));

  }

  @Test
  public void test388() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test388"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test389() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test389"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.connect(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    tp2.ITime iTime16 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);

  }

  @Test
  public void test390() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test390"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.ITime iTime7 = server0.getTime();
    tp2.ITime iTime8 = server0.getTime();
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test391() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test391"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    long long13 = server0.getLastUpdate();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server14.update();
    tp2.ITime iTime17 = server14.getTime();
    tp2.IP iP18 = null;
    boolean b19 = server14.connect(iP18);
    tp2.ITime iTime20 = server14.getTime();
    tp2.ITime iTime21 = server14.getTime();
    server0.setTime(iTime21);
    tp2.IP iP23 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b24 = server0.addException(iP23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509003350L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509003350, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509003350, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509003350L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);

  }

  @Test
  public void test392() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test392"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    server0.update();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509003366L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509003366, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509003366, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test393() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test393"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    server0.update();
    long long8 = server0.getLastUpdate();
    tp2.ITime iTime9 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509003370L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);

  }

  @Test
  public void test394() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test394"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    server25.update();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeException(iP28);
    server25.update();
    long long31 = server25.getLastUpdate();
    tp2.IP iP32 = null;
    boolean b33 = server25.removeBan(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server25.removeBan(iP34);
    long long36 = server25.getLastUpdate();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    tp2.IP iP39 = null;
    boolean b40 = server37.removeException(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server37.connect(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server37.removeException(iP43);
    tp2.IP iP45 = null;
    boolean b46 = server37.connect(iP45);
    tp2.IP iP47 = null;
    boolean b48 = server37.connect(iP47);
    tp2.Server server49 = new tp2.Server();
    tp2.ITime iTime50 = server49.getTime();
    server49.update();
    tp2.ITime iTime52 = server49.getTime();
    server37.setTime(iTime52);
    server25.setTime(iTime52);
    server0.setTime(iTime52);
    tp2.ITime iTime56 = server0.getTime();
    tp2.IP iP57 = null;
    boolean b58 = server0.removeException(iP57);
    tp2.IP iP59 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b60 = server0.addException(iP59);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465509003382, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465509003382, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509003383L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 1465509003383L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);

  }

  @Test
  public void test395() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test395"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509003386, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509003386, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test396() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test396"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.ITime iTime12 = null;
    server0.setTime(iTime12);
    tp2.ITime iTime14 = null;
    server0.setTime(iTime14);
    // The following exception was thrown during execution in test generation
    try {
      server0.update();
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test397() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test397"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.ITime iTime13 = server0.getTime();
    tp2.IP iP14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = server0.addException(iP14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

  @Test
  public void test398() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test398"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.ITime iTime21 = server13.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    server25.update();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeException(iP28);
    server25.update();
    long long31 = server25.getLastUpdate();
    java.lang.String str32 = server25.toString();
    tp2.ITime iTime33 = server25.getTime();
    server0.setTime(iTime33);
    long long35 = server0.getLastUpdate();
    tp2.IP iP36 = null;
    boolean b37 = server0.removeException(iP36);
    tp2.ITime iTime38 = server0.getTime();
    tp2.ITime iTime39 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509003529L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "Server [lastUpdate=1465509003529, exceptions=(), bans={}]"+ "'", str32.equals("Server [lastUpdate=1465509003529, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long35 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);

  }

  @Test
  public void test399() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test399"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    java.lang.String str13 = server0.toString();
    tp2.ITime iTime14 = server0.getTime();
    long long15 = server0.getLastUpdate();
    tp2.IP iP16 = null;
    boolean b17 = server0.removeException(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509003543L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509003543, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509003543, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509003543, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509003543, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509003543L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test400() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test400"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    server0.update();
    tp2.ITime iTime11 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);

  }

  @Test
  public void test401() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test401"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    java.lang.String str17 = server0.toString();
    long long18 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509003573L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509003573, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509003573, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509003573L);

  }

  @Test
  public void test402() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test402"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    long long9 = server5.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server5.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server12.setTime(iTime20);
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    server0.update();
    long long27 = server0.getLastUpdate();
    tp2.IP iP28 = null;
    boolean b29 = server0.removeBan(iP28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509003579L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465509003580L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);

  }

  @Test
  public void test403() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test403"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    java.lang.String str3 = server0.toString();
    java.lang.String str4 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test404() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test404"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    server12.update();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeException(iP15);
    server12.update();
    long long18 = server12.getLastUpdate();
    tp2.IP iP19 = null;
    boolean b20 = server12.removeBan(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server12.removeBan(iP21);
    long long23 = server12.getLastUpdate();
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server24.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server24.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server24.connect(iP34);
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.ITime iTime39 = server36.getTime();
    server24.setTime(iTime39);
    server12.setTime(iTime39);
    server0.setTime(iTime39);
    tp2.IP iP43 = null;
    boolean b44 = server0.connect(iP43);
    server0.update();
    tp2.IP iP46 = null;
    boolean b47 = server0.removeException(iP46);
    tp2.Server server48 = new tp2.Server();
    tp2.ITime iTime49 = server48.getTime();
    server48.update();
    tp2.ITime iTime51 = server48.getTime();
    tp2.IP iP52 = null;
    boolean b53 = server48.connect(iP52);
    tp2.Server server54 = new tp2.Server();
    tp2.ITime iTime55 = server54.getTime();
    tp2.IP iP56 = null;
    boolean b57 = server54.removeException(iP56);
    tp2.IP iP58 = null;
    boolean b59 = server54.connect(iP58);
    tp2.IP iP60 = null;
    boolean b61 = server54.removeException(iP60);
    tp2.IP iP62 = null;
    boolean b63 = server54.connect(iP62);
    tp2.IP iP64 = null;
    boolean b65 = server54.connect(iP64);
    tp2.Server server66 = new tp2.Server();
    tp2.ITime iTime67 = server66.getTime();
    server66.update();
    tp2.ITime iTime69 = server66.getTime();
    server54.setTime(iTime69);
    server48.setTime(iTime69);
    tp2.IP iP72 = null;
    boolean b73 = server48.removeBan(iP72);
    tp2.IP iP74 = null;
    boolean b75 = server48.removeException(iP74);
    java.lang.String str76 = server48.toString();
    tp2.Server server77 = new tp2.Server();
    long long78 = server77.getLastUpdate();
    tp2.Server server79 = new tp2.Server();
    tp2.ITime iTime80 = server79.getTime();
    server79.update();
    tp2.ITime iTime82 = server79.getTime();
    tp2.Server server83 = new tp2.Server();
    long long84 = server83.getLastUpdate();
    tp2.ITime iTime85 = server83.getTime();
    server79.setTime(iTime85);
    tp2.ITime iTime87 = server79.getTime();
    server77.setTime(iTime87);
    server48.setTime(iTime87);
    server0.setTime(iTime87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509003633L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509003633, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509003633, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509003634L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 1465509003634L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str76 + "' != '" + "Server [lastUpdate=1465509003635, exceptions=(), bans={}]"+ "'", str76.equals("Server [lastUpdate=1465509003635, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long78 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long84 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime87);

  }

  @Test
  public void test405() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test405"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509003689L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509003689L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test406() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test406"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    long long9 = server5.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server5.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server12.setTime(iTime20);
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    server0.update();
    tp2.Server server27 = new tp2.Server();
    tp2.ITime iTime28 = server27.getTime();
    server27.update();
    tp2.IP iP30 = null;
    boolean b31 = server27.connect(iP30);
    long long32 = server27.getLastUpdate();
    tp2.IP iP33 = null;
    boolean b34 = server27.removeBan(iP33);
    server27.update();
    java.lang.String str36 = server27.toString();
    tp2.Server server37 = new tp2.Server();
    long long38 = server37.getLastUpdate();
    long long39 = server37.getLastUpdate();
    java.lang.String str40 = server37.toString();
    tp2.Server server41 = new tp2.Server();
    tp2.ITime iTime42 = server41.getTime();
    server41.update();
    tp2.ITime iTime44 = server41.getTime();
    tp2.Server server45 = new tp2.Server();
    long long46 = server45.getLastUpdate();
    tp2.ITime iTime47 = server45.getTime();
    server41.setTime(iTime47);
    tp2.IP iP49 = null;
    boolean b50 = server41.connect(iP49);
    long long51 = server41.getLastUpdate();
    tp2.ITime iTime52 = server41.getTime();
    server37.setTime(iTime52);
    server27.setTime(iTime52);
    server0.setTime(iTime52);
    tp2.IP iP56 = null;
    boolean b57 = server0.removeBan(iP56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509003693L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long32 == 1465509003694L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "Server [lastUpdate=1465509003694, exceptions=(), bans={}]"+ "'", str36.equals("Server [lastUpdate=1465509003694, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long38 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long39 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str40.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long46 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long51 == 1465509003694L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);

  }

  @Test
  public void test407() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test407"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    java.lang.String str3 = server0.toString();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.ITime iTime8 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=1465509003713, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=1465509003713, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);

  }

  @Test
  public void test408() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test408"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.IP iP18 = null;
    boolean b19 = server15.connect(iP18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    tp2.IP iP22 = null;
    boolean b23 = server20.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server20.connect(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server20.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server20.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server20.connect(iP30);
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    server32.update();
    tp2.ITime iTime35 = server32.getTime();
    server20.setTime(iTime35);
    server15.setTime(iTime35);
    server0.setTime(iTime35);
    long long39 = server0.getLastUpdate();
    tp2.IP iP40 = null;
    boolean b41 = server0.removeException(iP40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long39 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);

  }

  @Test
  public void test409() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test409"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    java.lang.String str3 = server0.toString();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.Server server6 = new tp2.Server();
    long long7 = server6.getLastUpdate();
    server6.update();
    tp2.IP iP9 = null;
    boolean b10 = server6.removeException(iP9);
    server6.update();
    tp2.ITime iTime12 = server6.getTime();
    server0.setTime(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);

  }

  @Test
  public void test410() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test410"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    java.lang.String str3 = server0.toString();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=1465509003770, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=1465509003770, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test411() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test411"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    tp2.ITime iTime7 = server0.getTime();
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509003771, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509003771, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509003771L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test412() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test412"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);

  }

  @Test
  public void test413() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test413"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test414() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test414"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    server0.update();
    java.lang.String str10 = server0.toString();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    long long13 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509003827L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509003827, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509003827, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509003828, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509003828, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509003828L);

  }

  @Test
  public void test415() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test415"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    long long7 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509003869L);

  }

  @Test
  public void test416() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test416"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    long long15 = server0.getLastUpdate();
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    tp2.IP iP20 = null;
    boolean b21 = server16.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server16.connect(iP22);
    tp2.ITime iTime24 = server16.getTime();
    server0.setTime(iTime24);
    tp2.ITime iTime26 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509003886L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509003886L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);

  }

  @Test
  public void test417() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test417"); }


    tp2.Server server0 = new tp2.Server();
    tp2.IP iP1 = null;
    boolean b2 = server0.connect(iP1);
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);

  }

  @Test
  public void test418() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test418"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    server0.update();
    tp2.ITime iTime12 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509003895, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509003895, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509003895, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509003895, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509003895, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509003895, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);

  }

  @Test
  public void test419() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test419"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    java.lang.String str8 = server0.toString();
    long long9 = server0.getLastUpdate();
    java.lang.String str10 = server0.toString();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509003897, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509003897, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509003897L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509003897, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509003897, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test420() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test420"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    java.lang.String str3 = server0.toString();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test421() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test421"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    java.lang.String str14 = server12.toString();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeBan(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    long long21 = server17.getLastUpdate();
    tp2.IP iP22 = null;
    boolean b23 = server17.removeBan(iP22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.Server server30 = new tp2.Server();
    long long31 = server30.getLastUpdate();
    tp2.ITime iTime32 = server30.getTime();
    server24.setTime(iTime32);
    server17.setTime(iTime32);
    server12.setTime(iTime32);
    server0.setTime(iTime32);
    tp2.ITime iTime37 = server0.getTime();
    tp2.IP iP38 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b39 = server0.addException(iP38);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509003920L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509003920, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509003920, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509003920L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);

  }

  @Test
  public void test422() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test422"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    server0.setTime(iTime8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    server12.update();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeException(iP15);
    server12.update();
    server12.update();
    tp2.IP iP19 = null;
    boolean b20 = server12.removeBan(iP19);
    server12.update();
    server12.update();
    tp2.ITime iTime23 = server12.getTime();
    server0.setTime(iTime23);
    java.lang.String str25 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Server [lastUpdate=1465509003930, exceptions=(), bans={}]"+ "'", str25.equals("Server [lastUpdate=1465509003930, exceptions=(), bans={}]"));

  }

  @Test
  public void test423() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test423"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    tp2.IP iP25 = null;
    boolean b26 = server23.removeException(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server23.connect(iP27);
    tp2.IP iP29 = null;
    boolean b30 = server23.removeException(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server23.connect(iP31);
    tp2.IP iP33 = null;
    boolean b34 = server23.removeException(iP33);
    java.lang.String str35 = server23.toString();
    tp2.IP iP36 = null;
    boolean b37 = server23.removeBan(iP36);
    tp2.Server server38 = new tp2.Server();
    tp2.ITime iTime39 = server38.getTime();
    server38.update();
    tp2.IP iP41 = null;
    boolean b42 = server38.connect(iP41);
    tp2.Server server43 = new tp2.Server();
    tp2.ITime iTime44 = server43.getTime();
    tp2.IP iP45 = null;
    boolean b46 = server43.removeException(iP45);
    tp2.IP iP47 = null;
    boolean b48 = server43.connect(iP47);
    tp2.IP iP49 = null;
    boolean b50 = server43.removeException(iP49);
    tp2.IP iP51 = null;
    boolean b52 = server43.connect(iP51);
    tp2.IP iP53 = null;
    boolean b54 = server43.connect(iP53);
    tp2.Server server55 = new tp2.Server();
    tp2.ITime iTime56 = server55.getTime();
    server55.update();
    tp2.ITime iTime58 = server55.getTime();
    server43.setTime(iTime58);
    server38.setTime(iTime58);
    server23.setTime(iTime58);
    server0.setTime(iTime58);
    tp2.IP iP63 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b64 = server0.addException(iP63);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str35.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime58);

  }

  @Test
  public void test424() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test424"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    long long14 = server0.getLastUpdate();
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509003957L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509003957, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509003957, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509003957L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test425() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test425"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    long long10 = server0.getLastUpdate();
    server0.update();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    tp2.ITime iTime18 = server16.getTime();
    server12.setTime(iTime18);
    tp2.ITime iTime20 = server12.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server12.removeException(iP21);
    tp2.Server server23 = new tp2.Server();
    long long24 = server23.getLastUpdate();
    java.lang.String str25 = server23.toString();
    tp2.IP iP26 = null;
    boolean b27 = server23.removeBan(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server23.removeBan(iP28);
    long long30 = server23.getLastUpdate();
    tp2.ITime iTime31 = server23.getTime();
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    tp2.IP iP34 = null;
    boolean b35 = server32.connect(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server32.removeException(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server32.removeException(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server32.connect(iP40);
    tp2.Server server42 = new tp2.Server();
    long long43 = server42.getLastUpdate();
    server42.update();
    tp2.ITime iTime45 = server42.getTime();
    server32.setTime(iTime45);
    server23.setTime(iTime45);
    server12.setTime(iTime45);
    server0.setTime(iTime45);
    tp2.Server server50 = new tp2.Server();
    long long51 = server50.getLastUpdate();
    tp2.ITime iTime52 = server50.getTime();
    tp2.IP iP53 = null;
    boolean b54 = server50.removeBan(iP53);
    tp2.Server server55 = new tp2.Server();
    long long56 = server55.getLastUpdate();
    server55.update();
    tp2.IP iP58 = null;
    boolean b59 = server55.removeBan(iP58);
    tp2.Server server60 = new tp2.Server();
    tp2.ITime iTime61 = server60.getTime();
    server60.update();
    tp2.ITime iTime63 = server60.getTime();
    server55.setTime(iTime63);
    server50.setTime(iTime63);
    tp2.ITime iTime66 = server50.getTime();
    server50.update();
    tp2.Server server68 = new tp2.Server();
    tp2.ITime iTime69 = server68.getTime();
    server68.update();
    tp2.ITime iTime71 = server68.getTime();
    tp2.Server server72 = new tp2.Server();
    long long73 = server72.getLastUpdate();
    tp2.ITime iTime74 = server72.getTime();
    server68.setTime(iTime74);
    tp2.IP iP76 = null;
    boolean b77 = server68.connect(iP76);
    long long78 = server68.getLastUpdate();
    java.lang.String str79 = server68.toString();
    tp2.ITime iTime80 = server68.getTime();
    long long81 = server68.getLastUpdate();
    tp2.Server server82 = new tp2.Server();
    tp2.ITime iTime83 = server82.getTime();
    server82.update();
    tp2.ITime iTime85 = server82.getTime();
    tp2.IP iP86 = null;
    boolean b87 = server82.connect(iP86);
    tp2.ITime iTime88 = server82.getTime();
    tp2.ITime iTime89 = server82.getTime();
    server68.setTime(iTime89);
    server50.setTime(iTime89);
    server0.setTime(iTime89);
    long long93 = server0.getLastUpdate();
    tp2.IP iP94 = null;
    boolean b95 = server0.removeBan(iP94);
    tp2.IP iP96 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b97 = server0.addException(iP96);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509003983L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509003983L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509003983L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str25.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long43 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long51 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long56 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long73 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long78 == 1465509003986L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "Server [lastUpdate=1465509003986, exceptions=(), bans={}]"+ "'", str79.equals("Server [lastUpdate=1465509003986, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long81 == 1465509003986L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b87 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long93 == 1465509003983L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b95 == false);

  }

  @Test
  public void test426() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test426"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    server25.update();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeException(iP28);
    server25.update();
    long long31 = server25.getLastUpdate();
    tp2.IP iP32 = null;
    boolean b33 = server25.removeBan(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server25.removeBan(iP34);
    long long36 = server25.getLastUpdate();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    tp2.IP iP39 = null;
    boolean b40 = server37.removeException(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server37.connect(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server37.removeException(iP43);
    tp2.IP iP45 = null;
    boolean b46 = server37.connect(iP45);
    tp2.IP iP47 = null;
    boolean b48 = server37.connect(iP47);
    tp2.Server server49 = new tp2.Server();
    tp2.ITime iTime50 = server49.getTime();
    server49.update();
    tp2.ITime iTime52 = server49.getTime();
    server37.setTime(iTime52);
    server25.setTime(iTime52);
    server0.setTime(iTime52);
    tp2.IP iP56 = null;
    boolean b57 = server0.connect(iP56);
    java.lang.String str58 = server0.toString();
    java.lang.String str59 = server0.toString();
    tp2.IP iP60 = null;
    boolean b61 = server0.connect(iP60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465509003988, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465509003988, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509003990L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 1465509003990L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "Server [lastUpdate=1465509003988, exceptions=(), bans={}]"+ "'", str58.equals("Server [lastUpdate=1465509003988, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "Server [lastUpdate=1465509003988, exceptions=(), bans={}]"+ "'", str59.equals("Server [lastUpdate=1465509003988, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);

  }

  @Test
  public void test427() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test427"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    long long11 = server0.getLastUpdate();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server12.removeException(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server12.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server12.connect(iP22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    server24.update();
    tp2.ITime iTime27 = server24.getTime();
    server12.setTime(iTime27);
    server0.setTime(iTime27);
    tp2.IP iP30 = null;
    boolean b31 = server0.removeException(iP30);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509004038L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509004038L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);

  }

  @Test
  public void test428() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test428"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    server0.update();
    long long11 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509004048L);

  }

  @Test
  public void test429() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test429"); }


    tp2.Server server0 = new tp2.Server();
    tp2.IP iP1 = null;
    boolean b2 = server0.connect(iP1);
    java.lang.String str3 = server0.toString();
    tp2.ITime iTime4 = server0.getTime();
    server0.update();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test430() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test430"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.IP iP18 = null;
    boolean b19 = server15.connect(iP18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    tp2.IP iP22 = null;
    boolean b23 = server20.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server20.connect(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server20.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server20.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server20.connect(iP30);
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    server32.update();
    tp2.ITime iTime35 = server32.getTime();
    server20.setTime(iTime35);
    server15.setTime(iTime35);
    server0.setTime(iTime35);
    java.lang.String str39 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str39.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test431() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test431"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    tp2.ITime iTime14 = server0.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server0.removeException(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.IP iP20 = null;
    boolean b21 = server17.connect(iP20);
    long long22 = server17.getLastUpdate();
    java.lang.String str23 = server17.toString();
    tp2.IP iP24 = null;
    boolean b25 = server17.connect(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server17.removeBan(iP26);
    tp2.ITime iTime28 = server17.getTime();
    server0.setTime(iTime28);
    java.lang.String str30 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509004086L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509004086, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509004086, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 1465509004087L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465509004087, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465509004087, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Server [lastUpdate=1465509004086, exceptions=(), bans={}]"+ "'", str30.equals("Server [lastUpdate=1465509004086, exceptions=(), bans={}]"));

  }

  @Test
  public void test432() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test432"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.ITime iTime11 = server0.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    tp2.ITime iTime14 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);

  }

  @Test
  public void test433() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test433"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server7.setTime(iTime10);
    server7.update();
    java.lang.String str13 = server7.toString();
    tp2.ITime iTime14 = server7.getTime();
    server0.setTime(iTime14);
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    long long20 = server16.getLastUpdate();
    long long21 = server16.getLastUpdate();
    tp2.IP iP22 = null;
    boolean b23 = server16.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server16.removeBan(iP24);
    tp2.ITime iTime26 = server16.getTime();
    tp2.Server server27 = new tp2.Server();
    tp2.ITime iTime28 = server27.getTime();
    server27.update();
    tp2.ITime iTime30 = server27.getTime();
    tp2.IP iP31 = null;
    boolean b32 = server27.connect(iP31);
    tp2.Server server33 = new tp2.Server();
    tp2.ITime iTime34 = server33.getTime();
    tp2.IP iP35 = null;
    boolean b36 = server33.removeException(iP35);
    tp2.IP iP37 = null;
    boolean b38 = server33.connect(iP37);
    tp2.IP iP39 = null;
    boolean b40 = server33.removeException(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server33.connect(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server33.connect(iP43);
    tp2.Server server45 = new tp2.Server();
    tp2.ITime iTime46 = server45.getTime();
    server45.update();
    tp2.ITime iTime48 = server45.getTime();
    server33.setTime(iTime48);
    server27.setTime(iTime48);
    server16.setTime(iTime48);
    tp2.Server server52 = new tp2.Server();
    tp2.ITime iTime53 = server52.getTime();
    tp2.IP iP54 = null;
    boolean b55 = server52.removeException(iP54);
    tp2.IP iP56 = null;
    boolean b57 = server52.connect(iP56);
    tp2.IP iP58 = null;
    boolean b59 = server52.removeException(iP58);
    java.lang.String str60 = server52.toString();
    java.lang.String str61 = server52.toString();
    tp2.ITime iTime62 = server52.getTime();
    tp2.Server server63 = new tp2.Server();
    tp2.ITime iTime64 = server63.getTime();
    server63.update();
    tp2.ITime iTime66 = server63.getTime();
    tp2.Server server67 = new tp2.Server();
    long long68 = server67.getLastUpdate();
    tp2.ITime iTime69 = server67.getTime();
    server63.setTime(iTime69);
    tp2.IP iP71 = null;
    boolean b72 = server63.connect(iP71);
    long long73 = server63.getLastUpdate();
    java.lang.String str74 = server63.toString();
    tp2.ITime iTime75 = server63.getTime();
    java.lang.String str76 = server63.toString();
    tp2.ITime iTime77 = server63.getTime();
    server52.setTime(iTime77);
    server16.setTime(iTime77);
    server0.setTime(iTime77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509004098, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509004098, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465509004099L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509004099L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str60.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str61.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long68 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long73 == 1465509004101L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "Server [lastUpdate=1465509004101, exceptions=(), bans={}]"+ "'", str74.equals("Server [lastUpdate=1465509004101, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str76 + "' != '" + "Server [lastUpdate=1465509004101, exceptions=(), bans={}]"+ "'", str76.equals("Server [lastUpdate=1465509004101, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime77);

  }

  @Test
  public void test434() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test434"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server0.removeException(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server0.connect(iP23);
    long long25 = server0.getLastUpdate();
    long long26 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long25 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);

  }

  @Test
  public void test435() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test435"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.ITime iTime12 = server9.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server9.removeBan(iP13);
    server9.update();
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server16.setTime(iTime19);
    server16.update();
    java.lang.String str22 = server16.toString();
    tp2.ITime iTime23 = server16.getTime();
    server9.setTime(iTime23);
    tp2.ITime iTime25 = server9.getTime();
    tp2.ITime iTime26 = server9.getTime();
    server0.setTime(iTime26);
    tp2.IP iP28 = null;
    boolean b29 = server0.removeBan(iP28);
    java.lang.String str30 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509004182L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509004182, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509004182, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Server [lastUpdate=1465509004184, exceptions=(), bans={}]"+ "'", str22.equals("Server [lastUpdate=1465509004184, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Server [lastUpdate=1465509004182, exceptions=(), bans={}]"+ "'", str30.equals("Server [lastUpdate=1465509004182, exceptions=(), bans={}]"));

  }

  @Test
  public void test436() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test436"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server13.removeException(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server13.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server13.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server13.connect(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server13.connect(iP23);
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    server25.update();
    tp2.ITime iTime28 = server25.getTime();
    server13.setTime(iTime28);
    server8.setTime(iTime28);
    tp2.IP iP31 = null;
    boolean b32 = server8.removeException(iP31);
    tp2.ITime iTime33 = server8.getTime();
    server0.setTime(iTime33);
    tp2.ITime iTime35 = server0.getTime();
    long long36 = server0.getLastUpdate();
    java.lang.String str37 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509004194, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509004194, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 1465509004194L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "Server [lastUpdate=1465509004194, exceptions=(), bans={}]"+ "'", str37.equals("Server [lastUpdate=1465509004194, exceptions=(), bans={}]"));

  }

  @Test
  public void test437() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test437"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.ITime iTime11 = server0.getTime();
    tp2.ITime iTime12 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509004237L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);

  }

  @Test
  public void test438() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test438"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test439() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test439"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.Server server11 = new tp2.Server();
    tp2.ITime iTime12 = server11.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server11.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server11.removeException(iP15);
    long long17 = server11.getLastUpdate();
    tp2.ITime iTime18 = server11.getTime();
    tp2.ITime iTime19 = server11.getTime();
    server0.setTime(iTime19);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509004263L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509004263, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509004263, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);

  }

  @Test
  public void test440() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test440"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server7.setTime(iTime15);
    server0.setTime(iTime15);
    tp2.IP iP18 = null;
    boolean b19 = server0.removeException(iP18);
    java.lang.String str20 = server0.toString();
    server0.update();
    tp2.IP iP22 = null;
    boolean b23 = server0.removeBan(iP22);
    tp2.ITime iTime24 = server0.getTime();
    tp2.IP iP25 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b26 = server0.addException(iP25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509004268L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=1465509004268, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=1465509004268, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);

  }

  @Test
  public void test441() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test441"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server2.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server2.removeException(iP6);
    long long8 = server2.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server2.removeBan(iP9);
    tp2.Server server11 = new tp2.Server();
    long long12 = server11.getLastUpdate();
    tp2.ITime iTime13 = server11.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server11.removeBan(iP14);
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    server16.update();
    tp2.IP iP19 = null;
    boolean b20 = server16.removeBan(iP19);
    tp2.Server server21 = new tp2.Server();
    tp2.ITime iTime22 = server21.getTime();
    server21.update();
    tp2.ITime iTime24 = server21.getTime();
    server16.setTime(iTime24);
    server11.setTime(iTime24);
    server2.setTime(iTime24);
    server0.setTime(iTime24);
    tp2.ITime iTime29 = server0.getTime();
    tp2.IP iP30 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b31 = server0.addException(iP30);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);

  }

  @Test
  public void test442() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test442"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeException(iP11);
    server8.update();
    tp2.ITime iTime14 = server8.getTime();
    server0.setTime(iTime14);
    server0.update();
    tp2.IP iP17 = null;
    boolean b18 = server0.removeBan(iP17);
    tp2.IP iP19 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b20 = server0.addException(iP19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test443() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test443"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.ITime iTime6 = server0.getTime();
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509004331L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509004331L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test444() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test444"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeBan(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server0.removeException(iP25);
    long long27 = server0.getLastUpdate();
    tp2.IP iP28 = null;
    boolean b29 = server0.removeException(iP28);
    tp2.Server server30 = new tp2.Server();
    tp2.ITime iTime31 = server30.getTime();
    tp2.IP iP32 = null;
    boolean b33 = server30.removeException(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server30.connect(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server30.connect(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server30.connect(iP38);
    tp2.ITime iTime40 = server30.getTime();
    server0.setTime(iTime40);
    tp2.ITime iTime42 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465509004335L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);

  }

  @Test
  public void test445() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test445"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.IP iP5 = null;
    boolean b6 = server0.connect(iP5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);

  }

  @Test
  public void test446() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test446"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test447() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test447"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    long long9 = server0.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeBan(iP16);
    tp2.IP iP18 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b19 = server0.addException(iP18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509004445L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test448() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test448"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.removeException(iP11);
    long long13 = server7.getLastUpdate();
    java.lang.String str14 = server7.toString();
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.ITime iTime18 = server15.getTime();
    tp2.Server server19 = new tp2.Server();
    long long20 = server19.getLastUpdate();
    tp2.ITime iTime21 = server19.getTime();
    server15.setTime(iTime21);
    java.lang.String str23 = server15.toString();
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    server24.update();
    tp2.ITime iTime27 = server24.getTime();
    tp2.Server server28 = new tp2.Server();
    long long29 = server28.getLastUpdate();
    tp2.ITime iTime30 = server28.getTime();
    server24.setTime(iTime30);
    server15.setTime(iTime30);
    server7.setTime(iTime30);
    tp2.IP iP34 = null;
    boolean b35 = server7.removeBan(iP34);
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.IP iP39 = null;
    boolean b40 = server36.connect(iP39);
    long long41 = server36.getLastUpdate();
    tp2.IP iP42 = null;
    boolean b43 = server36.removeBan(iP42);
    server36.update();
    tp2.Server server45 = new tp2.Server();
    long long46 = server45.getLastUpdate();
    server45.update();
    tp2.IP iP48 = null;
    boolean b49 = server45.removeException(iP48);
    server45.update();
    long long51 = server45.getLastUpdate();
    tp2.IP iP52 = null;
    boolean b53 = server45.removeBan(iP52);
    tp2.IP iP54 = null;
    boolean b55 = server45.removeBan(iP54);
    long long56 = server45.getLastUpdate();
    tp2.ITime iTime57 = server45.getTime();
    server36.setTime(iTime57);
    server7.setTime(iTime57);
    server0.setTime(iTime57);
    tp2.Server server61 = new tp2.Server();
    tp2.ITime iTime62 = server61.getTime();
    server61.update();
    tp2.ITime iTime64 = server61.getTime();
    tp2.Server server65 = new tp2.Server();
    long long66 = server65.getLastUpdate();
    tp2.ITime iTime67 = server65.getTime();
    server61.setTime(iTime67);
    long long69 = server61.getLastUpdate();
    tp2.IP iP70 = null;
    boolean b71 = server61.removeException(iP70);
    tp2.IP iP72 = null;
    boolean b73 = server61.connect(iP72);
    server61.update();
    tp2.ITime iTime75 = server61.getTime();
    server0.setTime(iTime75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465509004447, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465509004447, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 1465509004450L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long46 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long51 == 1465509004451L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long56 == 1465509004451L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long66 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long69 == 1465509004452L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime75);

  }

  @Test
  public void test449() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test449"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    java.lang.String str10 = server8.toString();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeBan(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    long long17 = server13.getLastUpdate();
    tp2.IP iP18 = null;
    boolean b19 = server13.removeBan(iP18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    tp2.IP iP22 = null;
    boolean b23 = server20.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server20.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    long long27 = server26.getLastUpdate();
    tp2.ITime iTime28 = server26.getTime();
    server20.setTime(iTime28);
    server13.setTime(iTime28);
    server8.setTime(iTime28);
    server0.setTime(iTime28);
    tp2.IP iP33 = null;
    boolean b34 = server0.connect(iP33);
    java.lang.String str35 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 1465509004533L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "Server [lastUpdate=1465509004533, exceptions=(), bans={}]"+ "'", str35.equals("Server [lastUpdate=1465509004533, exceptions=(), bans={}]"));

  }

  @Test
  public void test450() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test450"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeException(iP23);
    tp2.ITime iTime25 = server0.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server0.removeBan(iP26);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test451() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test451"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    java.lang.String str3 = server0.toString();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b6 = server0.addException(iP5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=1465509004605, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=1465509004605, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509004605L);

  }

  @Test
  public void test452() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test452"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    server0.update();
    java.lang.String str6 = server0.toString();
    tp2.ITime iTime7 = server0.getTime();
    java.lang.String str8 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509004615, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509004615, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509004615, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509004615, exceptions=(), bans={}]"));

  }

  @Test
  public void test453() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test453"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509004618L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test454() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test454"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test455() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test455"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    server0.update();
    long long11 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509004631L);

  }

  @Test
  public void test456() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test456"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeException(iP23);
    tp2.ITime iTime25 = server0.getTime();
    long long26 = server0.getLastUpdate();
    tp2.IP iP27 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b28 = server0.addException(iP27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 1465509004631L);

  }

  @Test
  public void test457() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test457"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.IP iP20 = null;
    boolean b21 = server0.removeException(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server0.connect(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test458() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test458"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    java.lang.String str11 = server0.toString();
    server0.update();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test459() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test459"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    server0.update();
    java.lang.String str10 = server0.toString();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509004660L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509004660, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509004660, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509004660, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509004660, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509004661, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509004661, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);

  }

  @Test
  public void test460() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test460"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.ITime iTime12 = server9.getTime();
    server0.setTime(iTime12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    server16.update();
    tp2.IP iP19 = null;
    boolean b20 = server16.removeException(iP19);
    server16.update();
    long long22 = server16.getLastUpdate();
    server16.update();
    tp2.ITime iTime24 = server16.getTime();
    server0.setTime(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509004662L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 1465509004662L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);

  }

  @Test
  public void test461() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test461"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    long long2 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long2 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test462() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test462"); }


    tp2.Server server0 = new tp2.Server();
    tp2.IP iP1 = null;
    boolean b2 = server0.connect(iP1);
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509004698L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509004698, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509004698, exceptions=(), bans={}]"));

  }

  @Test
  public void test463() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test463"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509004747L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);

  }

  @Test
  public void test464() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test464"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    long long11 = server0.getLastUpdate();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server12.removeException(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server12.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server12.connect(iP22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    server24.update();
    tp2.ITime iTime27 = server24.getTime();
    server12.setTime(iTime27);
    server0.setTime(iTime27);
    tp2.IP iP30 = null;
    boolean b31 = server0.removeException(iP30);
    long long32 = server0.getLastUpdate();
    tp2.ITime iTime33 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509004785L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509004785L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long32 == 1465509004785L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);

  }

  @Test
  public void test465() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test465"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    server0.update();
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test466() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test466"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    tp2.ITime iTime7 = server0.getTime();
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test467() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test467"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeBan(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server5.setTime(iTime13);
    server0.setTime(iTime13);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeException(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test468() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test468"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    tp2.IP iP5 = null;
    boolean b6 = server0.connect(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test469() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test469"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test470() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test470"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    long long12 = server0.getLastUpdate();
    java.lang.String str13 = server0.toString();
    java.lang.String str14 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509004820L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509004820, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509004820, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465509004820, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465509004820, exceptions=(), bans={}]"));

  }

  @Test
  public void test471() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test471"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server0.removeException(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server0.connect(iP23);
    long long25 = server0.getLastUpdate();
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long25 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test472() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test472"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test473() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test473"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    java.lang.String str14 = server12.toString();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeBan(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    long long21 = server17.getLastUpdate();
    tp2.IP iP22 = null;
    boolean b23 = server17.removeBan(iP22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.Server server30 = new tp2.Server();
    long long31 = server30.getLastUpdate();
    tp2.ITime iTime32 = server30.getTime();
    server24.setTime(iTime32);
    server17.setTime(iTime32);
    server12.setTime(iTime32);
    server0.setTime(iTime32);
    server0.update();
    long long38 = server0.getLastUpdate();
    tp2.IP iP39 = null;
    boolean b40 = server0.removeBan(iP39);
    long long41 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509004839L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509004839, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509004839, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509004840L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long38 == 1465509004843L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 1465509004843L);

  }

  @Test
  public void test474() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test474"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeBan(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server0.connect(iP25);
    tp2.IP iP27 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b28 = server0.addException(iP27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);

  }

  @Test
  public void test475() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test475"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    server0.update();
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server5.removeBan(iP9);
    server5.update();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server12.setTime(iTime15);
    server12.update();
    java.lang.String str18 = server12.toString();
    tp2.ITime iTime19 = server12.getTime();
    server5.setTime(iTime19);
    server0.setTime(iTime19);
    tp2.Server server22 = new tp2.Server();
    tp2.ITime iTime23 = server22.getTime();
    tp2.IP iP24 = null;
    boolean b25 = server22.removeException(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server22.connect(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server22.removeException(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server22.connect(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server22.connect(iP32);
    java.lang.String str34 = server22.toString();
    tp2.ITime iTime35 = server22.getTime();
    server0.setTime(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509004855, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509004855, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str34.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);

  }

  @Test
  public void test476() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test476"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    java.lang.String str10 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test477() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test477"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server13.removeException(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server13.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server13.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server13.connect(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server13.connect(iP23);
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    server25.update();
    tp2.ITime iTime28 = server25.getTime();
    server13.setTime(iTime28);
    server8.setTime(iTime28);
    tp2.IP iP31 = null;
    boolean b32 = server8.removeException(iP31);
    tp2.ITime iTime33 = server8.getTime();
    server0.setTime(iTime33);
    tp2.ITime iTime35 = server0.getTime();
    server0.update();
    java.lang.String str37 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509004924, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509004924, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "Server [lastUpdate=1465509004925, exceptions=(), bans={}]"+ "'", str37.equals("Server [lastUpdate=1465509004925, exceptions=(), bans={}]"));

  }

  @Test
  public void test478() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test478"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test479() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test479"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    tp2.ITime iTime14 = server12.getTime();
    server8.setTime(iTime14);
    java.lang.String str16 = server8.toString();
    tp2.ITime iTime17 = server8.getTime();
    server0.setTime(iTime17);
    tp2.IP iP19 = null;
    boolean b20 = server0.removeException(iP19);
    long long21 = server0.getLastUpdate();
    long long22 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509004933L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509004933L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509004933L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509004934, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509004934, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509004933L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 1465509004933L);

  }

  @Test
  public void test480() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test480"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server9.connect(iP13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    tp2.ITime iTime17 = server15.getTime();
    server9.setTime(iTime17);
    server0.setTime(iTime17);
    tp2.IP iP20 = null;
    boolean b21 = server0.connect(iP20);
    server0.update();
    java.lang.String str23 = server0.toString();
    java.lang.String str24 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509004963L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465509004964, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465509004964, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465509004964, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465509004964, exceptions=(), bans={}]"));

  }

  @Test
  public void test481() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test481"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test482() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test482"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.ITime iTime12 = server9.getTime();
    server0.setTime(iTime12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeBan(iP16);
    long long18 = server0.getLastUpdate();
    long long19 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509004971L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509004971L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509004971L);

  }

  @Test
  public void test483() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test483"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeException(iP23);
    tp2.IP iP25 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b26 = server0.addException(iP25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test484() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test484"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    long long9 = server0.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.connect(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509004989L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);

  }

  @Test
  public void test485() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test485"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    tp2.Server server14 = new tp2.Server();
    long long15 = server14.getLastUpdate();
    tp2.ITime iTime16 = server14.getTime();
    server10.setTime(iTime16);
    java.lang.String str18 = server10.toString();
    tp2.IP iP19 = null;
    boolean b20 = server10.connect(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server10.removeBan(iP21);
    tp2.ITime iTime23 = server10.getTime();
    server0.setTime(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509005074, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509005074, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509005074, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509005074, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509005074, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509005074, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509005074, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509005074, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509005075, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509005075, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);

  }

  @Test
  public void test486() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test486"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    long long9 = server0.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509005083L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509005083L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509005083L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test487() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test487"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    java.lang.String str13 = server0.toString();
    java.lang.String str14 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509005084, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509005084, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509005084, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509005084, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509005084, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509005084, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465509005084, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465509005084, exceptions=(), bans={}]"));

  }

  @Test
  public void test488() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test488"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    tp2.ITime iTime8 = server0.getTime();
    tp2.ITime iTime9 = null;
    server0.setTime(iTime9);
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addBan(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);

  }

  @Test
  public void test489() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test489"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    server0.update();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test490() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test490"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.ITime iTime7 = server0.getTime();
    long long8 = server0.getLastUpdate();
    tp2.ITime iTime9 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509005196, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509005196, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509005196L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);

  }

  @Test
  public void test491() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test491"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = server0.addException(iP7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509005199L);

  }

  @Test
  public void test492() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test492"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    server0.setTime(iTime15);
    java.lang.String str17 = server0.toString();
    tp2.IP iP18 = null;
    boolean b19 = server0.removeException(iP18);
    long long20 = server0.getLastUpdate();
    tp2.IP iP21 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b22 = server0.addException(iP21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);

  }

  @Test
  public void test493() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test493"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    java.lang.String str9 = server0.toString();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    tp2.ITime iTime12 = server10.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server10.removeBan(iP13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    server15.update();
    tp2.IP iP18 = null;
    boolean b19 = server15.removeBan(iP18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    server20.update();
    tp2.ITime iTime23 = server20.getTime();
    server15.setTime(iTime23);
    server10.setTime(iTime23);
    tp2.ITime iTime26 = server10.getTime();
    server0.setTime(iTime26);
    long long28 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509005249L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509005249, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509005249, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465509005249L);

  }

  @Test
  public void test494() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test494"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server10.connect(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server10.removeException(iP14);
    long long16 = server10.getLastUpdate();
    tp2.IP iP17 = null;
    boolean b18 = server10.removeBan(iP17);
    tp2.Server server19 = new tp2.Server();
    long long20 = server19.getLastUpdate();
    tp2.IP iP21 = null;
    boolean b22 = server19.removeException(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    server23.update();
    tp2.ITime iTime26 = server23.getTime();
    tp2.Server server27 = new tp2.Server();
    long long28 = server27.getLastUpdate();
    tp2.ITime iTime29 = server27.getTime();
    server23.setTime(iTime29);
    tp2.ITime iTime31 = server23.getTime();
    server19.setTime(iTime31);
    server10.setTime(iTime31);
    server0.setTime(iTime31);
    tp2.IP iP35 = null;
    boolean b36 = server0.connect(iP35);
    tp2.IP iP37 = null;
    boolean b38 = server0.removeBan(iP37);
    tp2.Server server39 = new tp2.Server();
    tp2.ITime iTime40 = server39.getTime();
    server39.update();
    tp2.ITime iTime42 = server39.getTime();
    tp2.IP iP43 = null;
    boolean b44 = server39.removeBan(iP43);
    server39.update();
    long long46 = server39.getLastUpdate();
    tp2.ITime iTime47 = server39.getTime();
    server0.setTime(iTime47);
    tp2.IP iP49 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b50 = server0.addException(iP49);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509005263L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long46 == 1465509005266L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);

  }

  @Test
  public void test495() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test495"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    long long6 = server0.getLastUpdate();
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509005268L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509005268L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509005268, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509005268, exceptions=(), bans={}]"));

  }

  @Test
  public void test496() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test496"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test497() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test497"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.ITime iTime9 = server0.getTime();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    tp2.ITime iTime12 = server10.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server10.removeBan(iP13);
    tp2.ITime iTime15 = server10.getTime();
    server0.setTime(iTime15);
    java.lang.String str17 = server0.toString();
    java.lang.String str18 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509005299, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509005299, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509005299, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509005299, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509005299, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509005299, exceptions=(), bans={}]"));

  }

  @Test
  public void test498() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test498"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.removeBan(iP17);
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509005313L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test499() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test499"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    server0.update();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    long long12 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509005328L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509005328, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509005328, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509005328, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509005328, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509005329L);

  }

  @Test
  public void test500() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test500"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server7.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server7.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server7.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server7.removeBan(iP19);
    tp2.Server server21 = new tp2.Server();
    long long22 = server21.getLastUpdate();
    long long23 = server21.getLastUpdate();
    tp2.ITime iTime24 = server21.getTime();
    server7.setTime(iTime24);
    server0.setTime(iTime24);
    long long27 = server0.getLastUpdate();
    long long28 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465509005331L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465509005331L);

  }

}
