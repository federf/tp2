package randoop2;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

  public static boolean debug = false;

  @Test
  public void test001() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test001"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.ITime iTime5 = server0.getTime();
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeException(iP11);
    server8.update();
    long long14 = server8.getLastUpdate();
    tp2.IP iP15 = null;
    boolean b16 = server8.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server8.removeBan(iP17);
    long long19 = server8.getLastUpdate();
    long long20 = server8.getLastUpdate();
    tp2.Server server21 = new tp2.Server();
    long long22 = server21.getLastUpdate();
    tp2.ITime iTime23 = server21.getTime();
    tp2.IP iP24 = null;
    boolean b25 = server21.removeException(iP24);
    tp2.ITime iTime26 = server21.getTime();
    server8.setTime(iTime26);
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    server28.update();
    tp2.ITime iTime31 = server28.getTime();
    tp2.IP iP32 = null;
    boolean b33 = server28.removeBan(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server28.connect(iP34);
    tp2.Server server36 = new tp2.Server();
    long long37 = server36.getLastUpdate();
    server36.update();
    tp2.IP iP39 = null;
    boolean b40 = server36.removeException(iP39);
    server36.update();
    tp2.ITime iTime42 = server36.getTime();
    server28.setTime(iTime42);
    server8.setTime(iTime42);
    server0.setTime(iTime42);
    server0.update();
    tp2.IP iP47 = null;
    boolean b48 = server0.removeException(iP47);
    tp2.IP iP49 = null;
    boolean b50 = server0.removeException(iP49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509019163L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509019163L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465509019163L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long37 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);

  }

  @Test
  public void test002() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test002"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    java.lang.String str5 = server0.toString();
    tp2.ITime iTime6 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str5.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);

  }

  @Test
  public void test003() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test003"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    tp2.Server server11 = new tp2.Server();
    long long12 = server11.getLastUpdate();
    tp2.ITime iTime13 = server11.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server11.removeBan(iP14);
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    server16.update();
    tp2.IP iP19 = null;
    boolean b20 = server16.removeBan(iP19);
    tp2.Server server21 = new tp2.Server();
    tp2.ITime iTime22 = server21.getTime();
    server21.update();
    tp2.ITime iTime24 = server21.getTime();
    server16.setTime(iTime24);
    server11.setTime(iTime24);
    java.lang.String str27 = server11.toString();
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    tp2.IP iP30 = null;
    boolean b31 = server28.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server28.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server28.removeException(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server28.connect(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server28.removeException(iP38);
    java.lang.String str40 = server28.toString();
    tp2.IP iP41 = null;
    boolean b42 = server28.removeBan(iP41);
    tp2.Server server43 = new tp2.Server();
    long long44 = server43.getLastUpdate();
    server43.update();
    tp2.IP iP46 = null;
    boolean b47 = server43.removeBan(iP46);
    tp2.Server server48 = new tp2.Server();
    long long49 = server48.getLastUpdate();
    server48.update();
    tp2.IP iP51 = null;
    boolean b52 = server48.removeException(iP51);
    server48.update();
    tp2.ITime iTime54 = server48.getTime();
    server43.setTime(iTime54);
    tp2.IP iP56 = null;
    boolean b57 = server43.removeException(iP56);
    tp2.IP iP58 = null;
    boolean b59 = server43.connect(iP58);
    tp2.ITime iTime60 = server43.getTime();
    server28.setTime(iTime60);
    server11.setTime(iTime60);
    server0.setTime(iTime60);
    tp2.IP iP64 = null;
    boolean b65 = server0.removeException(iP64);
    tp2.ITime iTime66 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509019180, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509019180, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509019180, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509019180, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509019180L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str27.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str40.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long44 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long49 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime66);

  }

  @Test
  public void test004() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test004"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    long long12 = server0.getLastUpdate();
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.IP iP16 = null;
    boolean b17 = server13.connect(iP16);
    long long18 = server13.getLastUpdate();
    java.lang.String str19 = server13.toString();
    java.lang.String str20 = server13.toString();
    tp2.Server server21 = new tp2.Server();
    tp2.ITime iTime22 = server21.getTime();
    server21.update();
    tp2.ITime iTime24 = server21.getTime();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    tp2.ITime iTime27 = server25.getTime();
    server21.setTime(iTime27);
    tp2.ITime iTime29 = server21.getTime();
    server13.setTime(iTime29);
    server0.setTime(iTime29);
    tp2.IP iP32 = null;
    boolean b33 = server0.connect(iP32);
    server0.update();
    tp2.Server server35 = new tp2.Server();
    tp2.ITime iTime36 = server35.getTime();
    server35.update();
    tp2.IP iP38 = null;
    boolean b39 = server35.connect(iP38);
    long long40 = server35.getLastUpdate();
    tp2.Server server41 = new tp2.Server();
    long long42 = server41.getLastUpdate();
    long long43 = server41.getLastUpdate();
    java.lang.String str44 = server41.toString();
    tp2.Server server45 = new tp2.Server();
    tp2.ITime iTime46 = server45.getTime();
    server45.update();
    tp2.ITime iTime48 = server45.getTime();
    tp2.Server server49 = new tp2.Server();
    long long50 = server49.getLastUpdate();
    tp2.ITime iTime51 = server49.getTime();
    server45.setTime(iTime51);
    tp2.IP iP53 = null;
    boolean b54 = server45.connect(iP53);
    long long55 = server45.getLastUpdate();
    tp2.ITime iTime56 = server45.getTime();
    server41.setTime(iTime56);
    server35.setTime(iTime56);
    server0.setTime(iTime56);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509019219, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509019219, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509019219, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509019219, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509019219L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509019220L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509019220, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509019220, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=1465509019220, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=1465509019220, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long40 == 1465509019224L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long42 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long43 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str44.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long50 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long55 == 1465509019225L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);

  }

  @Test
  public void test005() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test005"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.connect(iP13);
    tp2.ITime iTime15 = server0.getTime();
    server0.update();
    long long17 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509019257L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 1465509019259L);

  }

  @Test
  public void test006() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test006"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    server0.update();
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server5.removeBan(iP9);
    server5.update();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server12.setTime(iTime15);
    server12.update();
    java.lang.String str18 = server12.toString();
    tp2.ITime iTime19 = server12.getTime();
    server5.setTime(iTime19);
    server0.setTime(iTime19);
    tp2.ITime iTime22 = server0.getTime();
    tp2.Server server23 = new tp2.Server();
    long long24 = server23.getLastUpdate();
    server23.update();
    tp2.IP iP26 = null;
    boolean b27 = server23.removeException(iP26);
    server23.update();
    long long29 = server23.getLastUpdate();
    tp2.IP iP30 = null;
    boolean b31 = server23.connect(iP30);
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    server32.update();
    tp2.ITime iTime35 = server32.getTime();
    server23.setTime(iTime35);
    server0.setTime(iTime35);
    tp2.ITime iTime38 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509019260, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509019260, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 1465509019261L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);

  }

  @Test
  public void test007() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test007"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    server0.update();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);

  }

  @Test
  public void test008() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test008"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.ITime iTime13 = server0.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    tp2.IP iP16 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b17 = server0.addException(iP16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);

  }

  @Test
  public void test009() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test009"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    java.lang.String str6 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test010() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test010"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    server0.update();
    tp2.ITime iTime8 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509019303, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509019303, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);

  }

  @Test
  public void test011() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test011"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeException(iP15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509019330, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509019330, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509019330, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509019330, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509019330, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509019330, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test012() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test012"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    server0.update();
    server0.update();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.ITime iTime15 = server0.getTime();
    tp2.ITime iTime16 = server0.getTime();
    java.lang.String str17 = server0.toString();
    tp2.IP iP18 = null;
    boolean b19 = server0.removeException(iP18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509019331L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509019331, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509019331, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test013() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test013"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    server0.update();
    java.lang.String str16 = server0.toString();
    server0.update();
    java.lang.String str18 = server0.toString();
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509019333L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509019333, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509019333, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509019333, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509019333, exceptions=(), bans={}]"));

  }

  @Test
  public void test014() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test014"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    long long4 = server0.getLastUpdate();
    java.lang.String str5 = server0.toString();
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str5.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);

  }

  @Test
  public void test015() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test015"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeBan(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server0.removeException(iP25);
    long long27 = server0.getLastUpdate();
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    server28.update();
    tp2.IP iP31 = null;
    boolean b32 = server28.connect(iP31);
    long long33 = server28.getLastUpdate();
    tp2.IP iP34 = null;
    boolean b35 = server28.removeBan(iP34);
    server28.update();
    java.lang.String str37 = server28.toString();
    tp2.Server server38 = new tp2.Server();
    long long39 = server38.getLastUpdate();
    long long40 = server38.getLastUpdate();
    java.lang.String str41 = server38.toString();
    tp2.Server server42 = new tp2.Server();
    tp2.ITime iTime43 = server42.getTime();
    server42.update();
    tp2.ITime iTime45 = server42.getTime();
    tp2.Server server46 = new tp2.Server();
    long long47 = server46.getLastUpdate();
    tp2.ITime iTime48 = server46.getTime();
    server42.setTime(iTime48);
    tp2.IP iP50 = null;
    boolean b51 = server42.connect(iP50);
    long long52 = server42.getLastUpdate();
    tp2.ITime iTime53 = server42.getTime();
    server38.setTime(iTime53);
    server28.setTime(iTime53);
    tp2.ITime iTime56 = server28.getTime();
    server0.setTime(iTime56);
    long long58 = server0.getLastUpdate();
    tp2.ITime iTime59 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465509019337L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 1465509019338L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "Server [lastUpdate=1465509019338, exceptions=(), bans={}]"+ "'", str37.equals("Server [lastUpdate=1465509019338, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long39 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long40 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str41.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long47 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long52 == 1465509019339L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long58 == 1465509019337L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime59);

  }

  @Test
  public void test016() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test016"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.Server server6 = new tp2.Server();
    long long7 = server6.getLastUpdate();
    tp2.ITime iTime8 = server6.getTime();
    server0.setTime(iTime8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    java.lang.String str14 = server12.toString();
    server12.update();
    tp2.IP iP16 = null;
    boolean b17 = server12.removeBan(iP16);
    server12.update();
    java.lang.String str19 = server12.toString();
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    server20.update();
    tp2.ITime iTime23 = server20.getTime();
    tp2.IP iP24 = null;
    boolean b25 = server20.connect(iP24);
    java.lang.String str26 = server20.toString();
    tp2.IP iP27 = null;
    boolean b28 = server20.removeBan(iP27);
    tp2.ITime iTime29 = server20.getTime();
    server12.setTime(iTime29);
    server0.setTime(iTime29);
    tp2.IP iP32 = null;
    boolean b33 = server0.removeBan(iP32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509019382, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509019382, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Server [lastUpdate=1465509019382, exceptions=(), bans={}]"+ "'", str26.equals("Server [lastUpdate=1465509019382, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);

  }

  @Test
  public void test017() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test017"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    server0.update();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test018() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test018"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    java.lang.String str9 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509019394L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509019394, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509019394, exceptions=(), bans={}]"));

  }

  @Test
  public void test019() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test019"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test020() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test020"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.IP iP25 = null;
    boolean b26 = server0.removeBan(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server0.removeException(iP27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465509019399, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465509019399, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test021() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test021"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test022() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test022"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    java.lang.String str4 = server0.toString();
    tp2.IP iP5 = null;
    boolean b6 = server0.connect(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.ITime iTime9 = server0.getTime();
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    server13.update();
    tp2.IP iP16 = null;
    boolean b17 = server13.removeException(iP16);
    server13.update();
    long long19 = server13.getLastUpdate();
    tp2.IP iP20 = null;
    boolean b21 = server13.removeBan(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server13.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server13.removeBan(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server13.removeBan(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server13.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server13.connect(iP30);
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    server32.update();
    tp2.IP iP35 = null;
    boolean b36 = server32.connect(iP35);
    long long37 = server32.getLastUpdate();
    java.lang.String str38 = server32.toString();
    tp2.IP iP39 = null;
    boolean b40 = server32.connect(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server32.removeBan(iP41);
    tp2.ITime iTime43 = server32.getTime();
    tp2.Server server44 = new tp2.Server();
    long long45 = server44.getLastUpdate();
    server44.update();
    tp2.IP iP47 = null;
    boolean b48 = server44.removeException(iP47);
    server44.update();
    long long50 = server44.getLastUpdate();
    tp2.IP iP51 = null;
    boolean b52 = server44.removeBan(iP51);
    tp2.IP iP53 = null;
    boolean b54 = server44.removeBan(iP53);
    long long55 = server44.getLastUpdate();
    long long56 = server44.getLastUpdate();
    tp2.Server server57 = new tp2.Server();
    long long58 = server57.getLastUpdate();
    tp2.ITime iTime59 = server57.getTime();
    tp2.IP iP60 = null;
    boolean b61 = server57.removeException(iP60);
    tp2.ITime iTime62 = server57.getTime();
    server44.setTime(iTime62);
    server32.setTime(iTime62);
    server13.setTime(iTime62);
    server0.setTime(iTime62);
    long long67 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=1465509019408, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=1465509019408, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509019409L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long37 == 1465509019411L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "Server [lastUpdate=1465509019411, exceptions=(), bans={}]"+ "'", str38.equals("Server [lastUpdate=1465509019411, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long45 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long50 == 1465509019411L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long55 == 1465509019411L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long56 == 1465509019411L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long58 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long67 == 1465509019408L);

  }

  @Test
  public void test023() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test023"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    long long12 = server10.getLastUpdate();
    java.lang.String str13 = server10.toString();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server14.update();
    tp2.ITime iTime17 = server14.getTime();
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server14.setTime(iTime20);
    tp2.IP iP22 = null;
    boolean b23 = server14.connect(iP22);
    long long24 = server14.getLastUpdate();
    tp2.ITime iTime25 = server14.getTime();
    server10.setTime(iTime25);
    server0.setTime(iTime25);
    server0.update();
    tp2.IP iP29 = null;
    boolean b30 = server0.connect(iP29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509019418L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509019419, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509019419, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509019419L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);

  }

  @Test
  public void test024() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test024"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server0.removeBan(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    server23.update();
    tp2.ITime iTime26 = server23.getTime();
    tp2.IP iP27 = null;
    boolean b28 = server23.removeBan(iP27);
    server23.update();
    tp2.Server server30 = new tp2.Server();
    tp2.ITime iTime31 = server30.getTime();
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    server30.setTime(iTime33);
    server30.update();
    java.lang.String str36 = server30.toString();
    tp2.ITime iTime37 = server30.getTime();
    server23.setTime(iTime37);
    server0.setTime(iTime37);
    tp2.IP iP40 = null;
    boolean b41 = server0.connect(iP40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "Server [lastUpdate=1465509019427, exceptions=(), bans={}]"+ "'", str36.equals("Server [lastUpdate=1465509019427, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);

  }

  @Test
  public void test025() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test025"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.ITime iTime12 = null;
    server0.setTime(iTime12);
    tp2.ITime iTime14 = null;
    server0.setTime(iTime14);
    tp2.ITime iTime16 = server0.getTime();
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    tp2.IP iP19 = null;
    boolean b20 = server17.connect(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server17.removeException(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server17.removeException(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server17.connect(iP25);
    tp2.Server server27 = new tp2.Server();
    long long28 = server27.getLastUpdate();
    java.lang.String str29 = server27.toString();
    server27.update();
    java.lang.String str31 = server27.toString();
    tp2.Server server32 = new tp2.Server();
    long long33 = server32.getLastUpdate();
    server32.update();
    tp2.IP iP35 = null;
    boolean b36 = server32.removeException(iP35);
    server32.update();
    long long38 = server32.getLastUpdate();
    java.lang.String str39 = server32.toString();
    tp2.ITime iTime40 = server32.getTime();
    server27.setTime(iTime40);
    tp2.ITime iTime42 = server27.getTime();
    tp2.Server server43 = new tp2.Server();
    long long44 = server43.getLastUpdate();
    java.lang.String str45 = server43.toString();
    tp2.IP iP46 = null;
    boolean b47 = server43.removeBan(iP46);
    tp2.IP iP48 = null;
    boolean b49 = server43.removeBan(iP48);
    long long50 = server43.getLastUpdate();
    tp2.ITime iTime51 = server43.getTime();
    tp2.IP iP52 = null;
    boolean b53 = server43.removeException(iP52);
    tp2.ITime iTime54 = server43.getTime();
    server27.setTime(iTime54);
    server17.setTime(iTime54);
    server0.setTime(iTime54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str29.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "Server [lastUpdate=1465509019436, exceptions=(), bans={}]"+ "'", str31.equals("Server [lastUpdate=1465509019436, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long38 == 1465509019438L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "Server [lastUpdate=1465509019438, exceptions=(), bans={}]"+ "'", str39.equals("Server [lastUpdate=1465509019438, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long44 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str45.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long50 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime54);

  }

  @Test
  public void test026() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test026"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    long long21 = server0.getLastUpdate();
    long long22 = server0.getLastUpdate();
    tp2.IP iP23 = null;
    boolean b24 = server0.removeBan(iP23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test027() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test027"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    long long14 = server10.getLastUpdate();
    tp2.IP iP15 = null;
    boolean b16 = server10.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server10.removeException(iP17);
    java.lang.String str19 = server10.toString();
    tp2.IP iP20 = null;
    boolean b21 = server10.connect(iP20);
    tp2.Server server22 = new tp2.Server();
    long long23 = server22.getLastUpdate();
    server22.update();
    tp2.IP iP25 = null;
    boolean b26 = server22.removeException(iP25);
    server22.update();
    long long28 = server22.getLastUpdate();
    tp2.IP iP29 = null;
    boolean b30 = server22.removeBan(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server22.removeBan(iP31);
    long long33 = server22.getLastUpdate();
    tp2.Server server34 = new tp2.Server();
    tp2.ITime iTime35 = server34.getTime();
    tp2.IP iP36 = null;
    boolean b37 = server34.removeException(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server34.connect(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server34.removeException(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server34.connect(iP42);
    tp2.IP iP44 = null;
    boolean b45 = server34.connect(iP44);
    tp2.Server server46 = new tp2.Server();
    tp2.ITime iTime47 = server46.getTime();
    server46.update();
    tp2.ITime iTime49 = server46.getTime();
    server34.setTime(iTime49);
    server22.setTime(iTime49);
    server10.setTime(iTime49);
    server0.setTime(iTime49);
    tp2.IP iP54 = null;
    boolean b55 = server0.removeBan(iP54);
    tp2.IP iP56 = null;
    boolean b57 = server0.removeBan(iP56);
    long long58 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509019459L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509019459, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509019459, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465509019459L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 1465509019459L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long58 == 1465509019458L);

  }

  @Test
  public void test028() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test028"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    java.lang.String str4 = server0.toString();
    tp2.IP iP5 = null;
    boolean b6 = server0.connect(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.ITime iTime9 = server0.getTime();
    tp2.ITime iTime10 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=1465509019468, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=1465509019468, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);

  }

  @Test
  public void test029() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test029"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.ITime iTime2 = server0.getTime();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test030() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test030"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    long long15 = server0.getLastUpdate();
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    tp2.IP iP20 = null;
    boolean b21 = server16.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server16.connect(iP22);
    tp2.ITime iTime24 = server16.getTime();
    server0.setTime(iTime24);
    tp2.IP iP26 = null;
    boolean b27 = server0.removeBan(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server0.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server0.connect(iP30);
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    server32.update();
    tp2.ITime iTime35 = server32.getTime();
    long long36 = server32.getLastUpdate();
    long long37 = server32.getLastUpdate();
    tp2.IP iP38 = null;
    boolean b39 = server32.removeException(iP38);
    long long40 = server32.getLastUpdate();
    long long41 = server32.getLastUpdate();
    tp2.ITime iTime42 = server32.getTime();
    server0.setTime(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509019471L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509019471L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 1465509019475L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long37 == 1465509019475L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long40 == 1465509019475L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 1465509019475L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);

  }

  @Test
  public void test031() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test031"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server0.removeException(iP21);
    long long23 = server0.getLastUpdate();
    tp2.IP iP24 = null;
    boolean b25 = server0.connect(iP24);
    long long26 = server0.getLastUpdate();
    long long27 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 0L);

  }

  @Test
  public void test032() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test032"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.ITime iTime21 = server13.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    tp2.ITime iTime27 = server25.getTime();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeBan(iP28);
    tp2.ITime iTime30 = server25.getTime();
    server0.setTime(iTime30);
    tp2.Server server32 = new tp2.Server();
    long long33 = server32.getLastUpdate();
    java.lang.String str34 = server32.toString();
    tp2.IP iP35 = null;
    boolean b36 = server32.removeBan(iP35);
    tp2.IP iP37 = null;
    boolean b38 = server32.removeBan(iP37);
    long long39 = server32.getLastUpdate();
    tp2.ITime iTime40 = server32.getTime();
    tp2.IP iP41 = null;
    boolean b42 = server32.removeBan(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server32.removeException(iP43);
    tp2.ITime iTime45 = server32.getTime();
    server0.setTime(iTime45);
    tp2.IP iP47 = null;
    boolean b48 = server0.removeBan(iP47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str34.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long39 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);

  }

  @Test
  public void test033() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test033"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    server0.update();
    long long8 = server0.getLastUpdate();
    long long9 = server0.getLastUpdate();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509019526L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509019526L);

  }

  @Test
  public void test034() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test034"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server0.setTime(iTime13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeException(iP15);
    java.lang.String str17 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509019540, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509019540, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509019540, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509019540, exceptions=(), bans={}]"));

  }

  @Test
  public void test035() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test035"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.ITime iTime11 = server9.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server9.removeBan(iP12);
    tp2.Server server14 = new tp2.Server();
    long long15 = server14.getLastUpdate();
    server14.update();
    tp2.IP iP17 = null;
    boolean b18 = server14.removeBan(iP17);
    tp2.Server server19 = new tp2.Server();
    tp2.ITime iTime20 = server19.getTime();
    server19.update();
    tp2.ITime iTime22 = server19.getTime();
    server14.setTime(iTime22);
    server9.setTime(iTime22);
    server0.setTime(iTime22);
    server0.update();
    tp2.IP iP27 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b28 = server0.addException(iP27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);

  }

  @Test
  public void test036() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test036"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.ITime iTime15 = null;
    server0.setTime(iTime15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);

  }

  @Test
  public void test037() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test037"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509019586L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509019586L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test038() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test038"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.ITime iTime7 = server0.getTime();
    java.lang.String str8 = server0.toString();
    server0.update();
    java.lang.String str10 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509019588, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509019588, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509019589, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509019589, exceptions=(), bans={}]"));

  }

  @Test
  public void test039() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test039"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509019595, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509019595, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509019595, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509019595, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test040() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test040"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.ITime iTime9 = server0.getTime();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    tp2.ITime iTime12 = server10.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server10.removeBan(iP13);
    tp2.ITime iTime15 = server10.getTime();
    server0.setTime(iTime15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server0.removeBan(iP19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509019595, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509019595, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test041() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test041"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.ITime iTime12 = server0.getTime();
    server0.update();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    long long16 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 1465509019600L);

  }

  @Test
  public void test042() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test042"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.ITime iTime21 = server13.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    server25.update();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeException(iP28);
    server25.update();
    long long31 = server25.getLastUpdate();
    java.lang.String str32 = server25.toString();
    tp2.ITime iTime33 = server25.getTime();
    server0.setTime(iTime33);
    tp2.ITime iTime35 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509019603L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "Server [lastUpdate=1465509019603, exceptions=(), bans={}]"+ "'", str32.equals("Server [lastUpdate=1465509019603, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);

  }

  @Test
  public void test043() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test043"); }


    tp2.Server server0 = new tp2.Server();
    java.lang.String str1 = server0.toString();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.connect(iP5);
    tp2.ITime iTime7 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str1.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);

  }

  @Test
  public void test044() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test044"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509019615L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test045() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test045"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test046() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test046"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server7.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server7.connect(iP15);
    tp2.ITime iTime17 = server7.getTime();
    server0.setTime(iTime17);
    tp2.ITime iTime19 = server0.getTime();
    tp2.IP iP20 = null;
    boolean b21 = server0.connect(iP20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);

  }

  @Test
  public void test047() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test047"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    java.lang.String str10 = server0.toString();
    long long11 = server0.getLastUpdate();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.connect(iP14);
    tp2.ITime iTime16 = server12.getTime();
    tp2.ITime iTime17 = server12.getTime();
    server0.setTime(iTime17);
    tp2.IP iP19 = null;
    boolean b20 = server0.removeException(iP19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509019642, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509019642, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509019642L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test048() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test048"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    java.lang.String str14 = server0.toString();
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);

  }

  @Test
  public void test049() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test049"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    server0.update();
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server5.removeBan(iP9);
    server5.update();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server12.setTime(iTime15);
    server12.update();
    java.lang.String str18 = server12.toString();
    tp2.ITime iTime19 = server12.getTime();
    server5.setTime(iTime19);
    server0.setTime(iTime19);
    tp2.ITime iTime22 = server0.getTime();
    tp2.ITime iTime23 = server0.getTime();
    tp2.IP iP24 = null;
    boolean b25 = server0.removeException(iP24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509019656, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509019656, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test050() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test050"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509019669L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509019669, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509019669, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);

  }

  @Test
  public void test051() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test051"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    server0.update();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test052() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test052"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server0.removeException(iP19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test053() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test053"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    long long10 = server0.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test054() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test054"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    long long11 = server0.getLastUpdate();
    long long12 = server0.getLastUpdate();
    long long13 = server0.getLastUpdate();
    long long14 = server0.getLastUpdate();
    java.lang.String str15 = server0.toString();
    tp2.IP iP16 = null;
    boolean b17 = server0.removeException(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    tp2.Server server22 = new tp2.Server();
    long long23 = server22.getLastUpdate();
    tp2.ITime iTime24 = server22.getTime();
    server18.setTime(iTime24);
    tp2.IP iP26 = null;
    boolean b27 = server18.connect(iP26);
    long long28 = server18.getLastUpdate();
    java.lang.String str29 = server18.toString();
    tp2.Server server30 = new tp2.Server();
    long long31 = server30.getLastUpdate();
    java.lang.String str32 = server30.toString();
    tp2.IP iP33 = null;
    boolean b34 = server30.removeBan(iP33);
    tp2.Server server35 = new tp2.Server();
    tp2.ITime iTime36 = server35.getTime();
    server35.update();
    tp2.ITime iTime38 = server35.getTime();
    long long39 = server35.getLastUpdate();
    tp2.IP iP40 = null;
    boolean b41 = server35.removeBan(iP40);
    tp2.Server server42 = new tp2.Server();
    tp2.ITime iTime43 = server42.getTime();
    tp2.IP iP44 = null;
    boolean b45 = server42.removeException(iP44);
    tp2.IP iP46 = null;
    boolean b47 = server42.connect(iP46);
    tp2.Server server48 = new tp2.Server();
    long long49 = server48.getLastUpdate();
    tp2.ITime iTime50 = server48.getTime();
    server42.setTime(iTime50);
    server35.setTime(iTime50);
    server30.setTime(iTime50);
    server18.setTime(iTime50);
    server18.update();
    long long56 = server18.getLastUpdate();
    tp2.ITime iTime57 = server18.getTime();
    server0.setTime(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509019712L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509019712L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509019712L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509019712L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509019712L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=1465509019712, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=1465509019712, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465509019712L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "Server [lastUpdate=1465509019712, exceptions=(), bans={}]"+ "'", str29.equals("Server [lastUpdate=1465509019712, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str32.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long39 == 1465509019713L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long49 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long56 == 1465509019714L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);

  }

  @Test
  public void test055() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test055"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server8.removeException(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server8.connect(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server8.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server8.connect(iP16);
    tp2.ITime iTime18 = server8.getTime();
    server0.setTime(iTime18);
    tp2.IP iP20 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b21 = server0.addException(iP20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);

  }

  @Test
  public void test056() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test056"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.ITime iTime12 = server0.getTime();
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server13.removeException(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server13.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server13.removeException(iP19);
    java.lang.String str21 = server13.toString();
    java.lang.String str22 = server13.toString();
    tp2.ITime iTime23 = server13.getTime();
    server0.setTime(iTime23);
    java.lang.String str25 = server0.toString();
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str21.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str22.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Server [lastUpdate=1465509019738, exceptions=(), bans={}]"+ "'", str25.equals("Server [lastUpdate=1465509019738, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test057() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test057"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    long long2 = server0.getLastUpdate();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = server0.addException(iP7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long2 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test058() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test058"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test059() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test059"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    tp2.ITime iTime14 = server12.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeBan(iP15);
    tp2.ITime iTime17 = server12.getTime();
    long long18 = server12.getLastUpdate();
    tp2.IP iP19 = null;
    boolean b20 = server12.removeBan(iP19);
    tp2.Server server21 = new tp2.Server();
    long long22 = server21.getLastUpdate();
    java.lang.String str23 = server21.toString();
    server21.update();
    tp2.IP iP25 = null;
    boolean b26 = server21.removeBan(iP25);
    server21.update();
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    tp2.IP iP30 = null;
    boolean b31 = server28.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server28.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server28.removeException(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server28.connect(iP36);
    java.lang.String str38 = server28.toString();
    tp2.ITime iTime39 = server28.getTime();
    server21.setTime(iTime39);
    server12.setTime(iTime39);
    server0.setTime(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str38.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);

  }

  @Test
  public void test060() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test060"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    tp2.ITime iTime7 = server0.getTime();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    long long12 = server8.getLastUpdate();
    tp2.IP iP13 = null;
    boolean b14 = server8.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server8.removeException(iP15);
    java.lang.String str17 = server8.toString();
    tp2.IP iP18 = null;
    boolean b19 = server8.connect(iP18);
    tp2.Server server20 = new tp2.Server();
    long long21 = server20.getLastUpdate();
    server20.update();
    tp2.IP iP23 = null;
    boolean b24 = server20.removeException(iP23);
    server20.update();
    long long26 = server20.getLastUpdate();
    tp2.IP iP27 = null;
    boolean b28 = server20.removeBan(iP27);
    tp2.IP iP29 = null;
    boolean b30 = server20.removeBan(iP29);
    long long31 = server20.getLastUpdate();
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    tp2.IP iP34 = null;
    boolean b35 = server32.removeException(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server32.connect(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server32.removeException(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server32.connect(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server32.connect(iP42);
    tp2.Server server44 = new tp2.Server();
    tp2.ITime iTime45 = server44.getTime();
    server44.update();
    tp2.ITime iTime47 = server44.getTime();
    server32.setTime(iTime47);
    server20.setTime(iTime47);
    server8.setTime(iTime47);
    server0.setTime(iTime47);
    tp2.ITime iTime52 = server0.getTime();
    tp2.ITime iTime53 = server0.getTime();
    tp2.IP iP54 = null;
    boolean b55 = server0.removeException(iP54);
    tp2.IP iP56 = null;
    boolean b57 = server0.removeException(iP56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509019765, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509019765, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509019765L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509019765, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509019765, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 1465509019766L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509019766L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);

  }

  @Test
  public void test061() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test061"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server8.setTime(iTime11);
    server8.update();
    java.lang.String str14 = server8.toString();
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.ITime iTime18 = server15.getTime();
    tp2.Server server19 = new tp2.Server();
    long long20 = server19.getLastUpdate();
    tp2.ITime iTime21 = server19.getTime();
    server15.setTime(iTime21);
    server8.setTime(iTime21);
    long long24 = server8.getLastUpdate();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    tp2.ITime iTime27 = server25.getTime();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeBan(iP28);
    tp2.Server server30 = new tp2.Server();
    long long31 = server30.getLastUpdate();
    server30.update();
    tp2.IP iP33 = null;
    boolean b34 = server30.removeBan(iP33);
    tp2.Server server35 = new tp2.Server();
    tp2.ITime iTime36 = server35.getTime();
    server35.update();
    tp2.ITime iTime38 = server35.getTime();
    server30.setTime(iTime38);
    server25.setTime(iTime38);
    tp2.ITime iTime41 = server25.getTime();
    tp2.ITime iTime42 = server25.getTime();
    server8.setTime(iTime42);
    server0.setTime(iTime42);
    tp2.IP iP45 = null;
    boolean b46 = server0.removeException(iP45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465509019784, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465509019784, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509019784L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);

  }

  @Test
  public void test062() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test062"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    server0.update();
    java.lang.String str8 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509019811, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509019811, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509019811, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509019811, exceptions=(), bans={}]"));

  }

  @Test
  public void test063() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test063"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    java.lang.String str7 = server0.toString();
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    server15.update();
    tp2.IP iP18 = null;
    boolean b19 = server15.removeBan(iP18);
    tp2.Server server20 = new tp2.Server();
    long long21 = server20.getLastUpdate();
    server20.update();
    tp2.IP iP23 = null;
    boolean b24 = server20.removeException(iP23);
    server20.update();
    tp2.ITime iTime26 = server20.getTime();
    server15.setTime(iTime26);
    tp2.IP iP28 = null;
    boolean b29 = server15.removeException(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server15.connect(iP30);
    tp2.ITime iTime32 = server15.getTime();
    tp2.ITime iTime33 = server15.getTime();
    server0.setTime(iTime33);
    tp2.Server server35 = new tp2.Server();
    long long36 = server35.getLastUpdate();
    tp2.IP iP37 = null;
    boolean b38 = server35.removeException(iP37);
    tp2.Server server39 = new tp2.Server();
    tp2.ITime iTime40 = server39.getTime();
    server39.update();
    tp2.ITime iTime42 = server39.getTime();
    tp2.Server server43 = new tp2.Server();
    long long44 = server43.getLastUpdate();
    tp2.ITime iTime45 = server43.getTime();
    server39.setTime(iTime45);
    tp2.ITime iTime47 = server39.getTime();
    server35.setTime(iTime47);
    tp2.IP iP49 = null;
    boolean b50 = server35.connect(iP49);
    tp2.ITime iTime51 = server35.getTime();
    tp2.IP iP52 = null;
    boolean b53 = server35.removeBan(iP52);
    server35.update();
    tp2.Server server55 = new tp2.Server();
    long long56 = server55.getLastUpdate();
    java.lang.String str57 = server55.toString();
    server55.update();
    java.lang.String str59 = server55.toString();
    tp2.IP iP60 = null;
    boolean b61 = server55.connect(iP60);
    java.lang.String str62 = server55.toString();
    tp2.ITime iTime63 = server55.getTime();
    server35.setTime(iTime63);
    server0.setTime(iTime63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509019812, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509019812, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509019812L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long44 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long56 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str57.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "Server [lastUpdate=1465509019816, exceptions=(), bans={}]"+ "'", str59.equals("Server [lastUpdate=1465509019816, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "Server [lastUpdate=1465509019816, exceptions=(), bans={}]"+ "'", str62.equals("Server [lastUpdate=1465509019816, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime63);

  }

  @Test
  public void test064() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test064"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509019835, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509019835, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509019835, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509019835, exceptions=(), bans={}]"));

  }

  @Test
  public void test065() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test065"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    java.lang.String str10 = server0.toString();
    long long11 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509019837, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509019837, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509019837L);

  }

  @Test
  public void test066() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test066"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeBan(iP16);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test067() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test067"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    long long10 = server0.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.IP iP21 = null;
    boolean b22 = server13.connect(iP21);
    long long23 = server13.getLastUpdate();
    java.lang.String str24 = server13.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    java.lang.String str27 = server25.toString();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeBan(iP28);
    tp2.Server server30 = new tp2.Server();
    tp2.ITime iTime31 = server30.getTime();
    server30.update();
    tp2.ITime iTime33 = server30.getTime();
    long long34 = server30.getLastUpdate();
    tp2.IP iP35 = null;
    boolean b36 = server30.removeBan(iP35);
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    tp2.IP iP39 = null;
    boolean b40 = server37.removeException(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server37.connect(iP41);
    tp2.Server server43 = new tp2.Server();
    long long44 = server43.getLastUpdate();
    tp2.ITime iTime45 = server43.getTime();
    server37.setTime(iTime45);
    server30.setTime(iTime45);
    server25.setTime(iTime45);
    server13.setTime(iTime45);
    tp2.ITime iTime50 = server13.getTime();
    server0.setTime(iTime50);
    tp2.IP iP52 = null;
    boolean b53 = server0.removeBan(iP52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 1465509019842L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465509019842, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465509019842, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str27.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long34 == 1465509019843L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long44 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);

  }

  @Test
  public void test068() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test068"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test069() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test069"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    tp2.ITime iTime14 = server12.getTime();
    server8.setTime(iTime14);
    tp2.ITime iTime16 = server8.getTime();
    server0.setTime(iTime16);
    server0.update();
    tp2.IP iP19 = null;
    boolean b20 = server0.removeBan(iP19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509019876L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509019876, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509019876, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509019876, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509019876, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test070() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test070"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    server0.update();
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    long long19 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509019882, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509019882, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509019882, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509019882, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509019882L);

  }

  @Test
  public void test071() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test071"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test072() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test072"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    server0.update();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test073() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test073"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    java.lang.String str4 = server0.toString();
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    long long11 = server5.getLastUpdate();
    java.lang.String str12 = server5.toString();
    tp2.ITime iTime13 = server5.getTime();
    server0.setTime(iTime13);
    tp2.ITime iTime15 = server0.getTime();
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    java.lang.String str18 = server16.toString();
    tp2.IP iP19 = null;
    boolean b20 = server16.removeBan(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server16.removeBan(iP21);
    long long23 = server16.getLastUpdate();
    tp2.ITime iTime24 = server16.getTime();
    tp2.IP iP25 = null;
    boolean b26 = server16.removeException(iP25);
    tp2.ITime iTime27 = server16.getTime();
    server0.setTime(iTime27);
    java.lang.String str29 = server0.toString();
    java.lang.String str30 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=1465509019894, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=1465509019894, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509019894L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509019894, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509019894, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "Server [lastUpdate=1465509019894, exceptions=(), bans={}]"+ "'", str29.equals("Server [lastUpdate=1465509019894, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Server [lastUpdate=1465509019894, exceptions=(), bans={}]"+ "'", str30.equals("Server [lastUpdate=1465509019894, exceptions=(), bans={}]"));

  }

  @Test
  public void test074() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test074"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    long long9 = server5.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server5.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server12.setTime(iTime20);
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    long long26 = server0.getLastUpdate();
    tp2.Server server27 = new tp2.Server();
    tp2.ITime iTime28 = server27.getTime();
    server27.update();
    tp2.ITime iTime30 = server27.getTime();
    tp2.Server server31 = new tp2.Server();
    long long32 = server31.getLastUpdate();
    tp2.ITime iTime33 = server31.getTime();
    server27.setTime(iTime33);
    java.lang.String str35 = server27.toString();
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.ITime iTime39 = server36.getTime();
    tp2.Server server40 = new tp2.Server();
    long long41 = server40.getLastUpdate();
    tp2.ITime iTime42 = server40.getTime();
    server36.setTime(iTime42);
    server27.setTime(iTime42);
    server0.setTime(iTime42);
    long long46 = server0.getLastUpdate();
    tp2.Server server47 = new tp2.Server();
    tp2.ITime iTime48 = server47.getTime();
    tp2.IP iP49 = null;
    boolean b50 = server47.removeException(iP49);
    tp2.IP iP51 = null;
    boolean b52 = server47.connect(iP51);
    tp2.IP iP53 = null;
    boolean b54 = server47.removeException(iP53);
    tp2.IP iP55 = null;
    boolean b56 = server47.connect(iP55);
    tp2.IP iP57 = null;
    boolean b58 = server47.connect(iP57);
    tp2.Server server59 = new tp2.Server();
    tp2.ITime iTime60 = server59.getTime();
    server59.update();
    tp2.ITime iTime62 = server59.getTime();
    server47.setTime(iTime62);
    tp2.IP iP64 = null;
    boolean b65 = server47.removeException(iP64);
    tp2.IP iP66 = null;
    boolean b67 = server47.removeBan(iP66);
    tp2.Server server68 = new tp2.Server();
    long long69 = server68.getLastUpdate();
    server68.update();
    tp2.IP iP71 = null;
    boolean b72 = server68.removeException(iP71);
    server68.update();
    long long74 = server68.getLastUpdate();
    tp2.IP iP75 = null;
    boolean b76 = server68.removeBan(iP75);
    tp2.IP iP77 = null;
    boolean b78 = server68.removeException(iP77);
    tp2.IP iP79 = null;
    boolean b80 = server68.removeBan(iP79);
    tp2.Server server81 = new tp2.Server();
    tp2.ITime iTime82 = server81.getTime();
    server81.update();
    tp2.IP iP84 = null;
    boolean b85 = server81.connect(iP84);
    long long86 = server81.getLastUpdate();
    tp2.ITime iTime87 = server81.getTime();
    server68.setTime(iTime87);
    server47.setTime(iTime87);
    server0.setTime(iTime87);
    tp2.IP iP91 = null;
    boolean b92 = server0.connect(iP91);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509019898L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long32 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "Server [lastUpdate=1465509019900, exceptions=(), bans={}]"+ "'", str35.equals("Server [lastUpdate=1465509019900, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long46 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long69 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long74 == 1465509019901L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long86 == 1465509019902L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b92 == true);

  }

  @Test
  public void test075() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test075"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    java.lang.String str13 = server0.toString();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509019939, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509019939, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509019939, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509019939, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509019939, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509019939, exceptions=(), bans={}]"));

  }

  @Test
  public void test076() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test076"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeBan(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);

  }

  @Test
  public void test077() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test077"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    long long13 = server0.getLastUpdate();
    long long14 = server0.getLastUpdate();
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    java.lang.String str17 = server15.toString();
    tp2.IP iP18 = null;
    boolean b19 = server15.removeBan(iP18);
    server15.update();
    long long21 = server15.getLastUpdate();
    tp2.IP iP22 = null;
    boolean b23 = server15.removeBan(iP22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    server24.update();
    tp2.IP iP27 = null;
    boolean b28 = server24.connect(iP27);
    tp2.Server server29 = new tp2.Server();
    tp2.ITime iTime30 = server29.getTime();
    tp2.IP iP31 = null;
    boolean b32 = server29.removeException(iP31);
    tp2.IP iP33 = null;
    boolean b34 = server29.connect(iP33);
    tp2.IP iP35 = null;
    boolean b36 = server29.removeException(iP35);
    tp2.IP iP37 = null;
    boolean b38 = server29.connect(iP37);
    tp2.IP iP39 = null;
    boolean b40 = server29.connect(iP39);
    tp2.Server server41 = new tp2.Server();
    tp2.ITime iTime42 = server41.getTime();
    server41.update();
    tp2.ITime iTime44 = server41.getTime();
    server29.setTime(iTime44);
    server24.setTime(iTime44);
    tp2.IP iP47 = null;
    boolean b48 = server24.removeException(iP47);
    tp2.ITime iTime49 = server24.getTime();
    server15.setTime(iTime49);
    long long51 = server15.getLastUpdate();
    tp2.ITime iTime52 = server15.getTime();
    long long53 = server15.getLastUpdate();
    tp2.Server server54 = new tp2.Server();
    long long55 = server54.getLastUpdate();
    server54.update();
    tp2.IP iP57 = null;
    boolean b58 = server54.removeException(iP57);
    server54.update();
    server54.update();
    server54.update();
    tp2.IP iP62 = null;
    boolean b63 = server54.removeBan(iP62);
    tp2.IP iP64 = null;
    boolean b65 = server54.removeBan(iP64);
    tp2.ITime iTime66 = server54.getTime();
    tp2.Server server67 = new tp2.Server();
    tp2.ITime iTime68 = server67.getTime();
    tp2.IP iP69 = null;
    boolean b70 = server67.connect(iP69);
    tp2.IP iP71 = null;
    boolean b72 = server67.removeException(iP71);
    long long73 = server67.getLastUpdate();
    tp2.IP iP74 = null;
    boolean b75 = server67.removeBan(iP74);
    tp2.Server server76 = new tp2.Server();
    long long77 = server76.getLastUpdate();
    tp2.IP iP78 = null;
    boolean b79 = server76.removeException(iP78);
    tp2.Server server80 = new tp2.Server();
    tp2.ITime iTime81 = server80.getTime();
    server80.update();
    tp2.ITime iTime83 = server80.getTime();
    tp2.Server server84 = new tp2.Server();
    long long85 = server84.getLastUpdate();
    tp2.ITime iTime86 = server84.getTime();
    server80.setTime(iTime86);
    tp2.ITime iTime88 = server80.getTime();
    server76.setTime(iTime88);
    server67.setTime(iTime88);
    server54.setTime(iTime88);
    server15.setTime(iTime88);
    server0.setTime(iTime88);
    tp2.IP iP94 = null;
    boolean b95 = server0.removeException(iP94);
    tp2.IP iP96 = null;
    boolean b97 = server0.removeException(iP96);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509019958, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509019958, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509019958L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509019958L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509019960L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long51 == 1465509019960L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long53 == 1465509019960L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long55 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long73 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long77 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long85 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b95 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b97 == false);

  }

  @Test
  public void test078() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test078"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.ITime iTime2 = server0.getTime();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509019994L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test079() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test079"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    java.lang.String str13 = server0.toString();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server14.update();
    tp2.ITime iTime17 = server14.getTime();
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server14.setTime(iTime20);
    java.lang.String str22 = server14.toString();
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    server23.update();
    tp2.ITime iTime26 = server23.getTime();
    tp2.Server server27 = new tp2.Server();
    long long28 = server27.getLastUpdate();
    tp2.ITime iTime29 = server27.getTime();
    server23.setTime(iTime29);
    server14.setTime(iTime29);
    server0.setTime(iTime29);
    tp2.IP iP33 = null;
    boolean b34 = server0.connect(iP33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509019995, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509019995, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509019995, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509019995, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509019995, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509019995, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Server [lastUpdate=1465509019996, exceptions=(), bans={}]"+ "'", str22.equals("Server [lastUpdate=1465509019996, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);

  }

  @Test
  public void test080() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test080"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);

  }

  @Test
  public void test081() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test081"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    tp2.IP iP20 = null;
    boolean b21 = server16.connect(iP20);
    tp2.Server server22 = new tp2.Server();
    tp2.ITime iTime23 = server22.getTime();
    tp2.IP iP24 = null;
    boolean b25 = server22.removeException(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server22.connect(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server22.removeException(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server22.connect(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server22.connect(iP32);
    tp2.Server server34 = new tp2.Server();
    tp2.ITime iTime35 = server34.getTime();
    server34.update();
    tp2.ITime iTime37 = server34.getTime();
    server22.setTime(iTime37);
    server16.setTime(iTime37);
    java.lang.String str40 = server16.toString();
    tp2.Server server41 = new tp2.Server();
    long long42 = server41.getLastUpdate();
    server41.update();
    tp2.IP iP44 = null;
    boolean b45 = server41.removeException(iP44);
    server41.update();
    long long47 = server41.getLastUpdate();
    tp2.IP iP48 = null;
    boolean b49 = server41.removeBan(iP48);
    tp2.IP iP50 = null;
    boolean b51 = server41.removeBan(iP50);
    long long52 = server41.getLastUpdate();
    tp2.Server server53 = new tp2.Server();
    tp2.ITime iTime54 = server53.getTime();
    tp2.IP iP55 = null;
    boolean b56 = server53.removeException(iP55);
    tp2.IP iP57 = null;
    boolean b58 = server53.connect(iP57);
    tp2.IP iP59 = null;
    boolean b60 = server53.removeException(iP59);
    tp2.IP iP61 = null;
    boolean b62 = server53.connect(iP61);
    tp2.IP iP63 = null;
    boolean b64 = server53.connect(iP63);
    tp2.Server server65 = new tp2.Server();
    tp2.ITime iTime66 = server65.getTime();
    server65.update();
    tp2.ITime iTime68 = server65.getTime();
    server53.setTime(iTime68);
    server41.setTime(iTime68);
    server16.setTime(iTime68);
    tp2.IP iP72 = null;
    boolean b73 = server16.connect(iP72);
    server16.update();
    tp2.IP iP75 = null;
    boolean b76 = server16.connect(iP75);
    tp2.ITime iTime77 = server16.getTime();
    server0.setTime(iTime77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509020040, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509020040, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "Server [lastUpdate=1465509020042, exceptions=(), bans={}]"+ "'", str40.equals("Server [lastUpdate=1465509020042, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long42 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long47 == 1465509020043L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long52 == 1465509020043L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime77);

  }

  @Test
  public void test082() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test082"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    java.lang.String str4 = server0.toString();
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    long long11 = server5.getLastUpdate();
    java.lang.String str12 = server5.toString();
    tp2.ITime iTime13 = server5.getTime();
    server0.setTime(iTime13);
    tp2.ITime iTime15 = server0.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server0.removeBan(iP16);
    java.lang.String str18 = server0.toString();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=1465509020076, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=1465509020076, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509020078L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509020078, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509020078, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509020076, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509020076, exceptions=(), bans={}]"));

  }

  @Test
  public void test083() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test083"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    server12.update();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeException(iP15);
    server12.update();
    long long18 = server12.getLastUpdate();
    tp2.IP iP19 = null;
    boolean b20 = server12.removeBan(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server12.removeBan(iP21);
    long long23 = server12.getLastUpdate();
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server24.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server24.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server24.connect(iP34);
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.ITime iTime39 = server36.getTime();
    server24.setTime(iTime39);
    server12.setTime(iTime39);
    server0.setTime(iTime39);
    tp2.IP iP43 = null;
    boolean b44 = server0.connect(iP43);
    server0.update();
    tp2.IP iP46 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b47 = server0.addException(iP46);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509020080L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509020080, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509020080, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509020081L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 1465509020081L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);

  }

  @Test
  public void test084() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test084"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509020082L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509020082L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509020082, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509020082, exceptions=(), bans={}]"));

  }

  @Test
  public void test085() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test085"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    long long11 = server0.getLastUpdate();
    long long12 = server0.getLastUpdate();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    server13.update();
    tp2.IP iP16 = null;
    boolean b17 = server13.removeBan(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server13.setTime(iTime21);
    server0.setTime(iTime21);
    long long24 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020086L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509020086L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509020086L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509020086L);

  }

  @Test
  public void test086() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test086"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.ITime iTime5 = server0.getTime();
    tp2.ITime iTime6 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);

  }

  @Test
  public void test087() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test087"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.IP iP18 = null;
    boolean b19 = server15.connect(iP18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    tp2.IP iP22 = null;
    boolean b23 = server20.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server20.connect(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server20.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server20.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server20.connect(iP30);
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    server32.update();
    tp2.ITime iTime35 = server32.getTime();
    server20.setTime(iTime35);
    server15.setTime(iTime35);
    server0.setTime(iTime35);
    tp2.Server server39 = new tp2.Server();
    long long40 = server39.getLastUpdate();
    server39.update();
    tp2.ITime iTime42 = server39.getTime();
    server0.setTime(iTime42);
    tp2.Server server44 = new tp2.Server();
    tp2.ITime iTime45 = server44.getTime();
    server44.update();
    tp2.IP iP47 = null;
    boolean b48 = server44.connect(iP47);
    long long49 = server44.getLastUpdate();
    tp2.IP iP50 = null;
    boolean b51 = server44.connect(iP50);
    tp2.IP iP52 = null;
    boolean b53 = server44.removeException(iP52);
    tp2.ITime iTime54 = server44.getTime();
    server0.setTime(iTime54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long40 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long49 == 1465509020097L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime54);

  }

  @Test
  public void test088() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test088"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test089() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test089"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    java.lang.String str13 = server0.toString();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    java.lang.String str16 = server0.toString();
    tp2.IP iP17 = null;
    boolean b18 = server0.removeException(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509020115L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509020115, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509020115, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509020115, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509020115, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509020115, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509020115, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test090() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test090"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    long long12 = server0.getLastUpdate();
    java.lang.String str13 = server0.toString();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    tp2.IP iP16 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b17 = server0.addException(iP16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509020134L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509020134, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509020134, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test091() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test091"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.IP iP12 = null;
    boolean b13 = server9.connect(iP12);
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server14.removeException(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server14.connect(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server14.removeException(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server14.connect(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server14.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    tp2.ITime iTime27 = server26.getTime();
    server26.update();
    tp2.ITime iTime29 = server26.getTime();
    server14.setTime(iTime29);
    server9.setTime(iTime29);
    tp2.IP iP32 = null;
    boolean b33 = server9.removeException(iP32);
    tp2.ITime iTime34 = server9.getTime();
    server0.setTime(iTime34);
    long long36 = server0.getLastUpdate();
    tp2.ITime iTime37 = server0.getTime();
    long long38 = server0.getLastUpdate();
    long long39 = server0.getLastUpdate();
    java.lang.String str40 = server0.toString();
    tp2.IP iP41 = null;
    boolean b42 = server0.removeBan(iP41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020135L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 1465509020135L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long38 == 1465509020135L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long39 == 1465509020135L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "Server [lastUpdate=1465509020135, exceptions=(), bans={}]"+ "'", str40.equals("Server [lastUpdate=1465509020135, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);

  }

  @Test
  public void test092() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test092"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    server0.update();
    long long8 = server0.getLastUpdate();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server9.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server9.removeException(iP13);
    long long15 = server9.getLastUpdate();
    tp2.ITime iTime16 = server9.getTime();
    tp2.IP iP17 = null;
    boolean b18 = server9.removeException(iP17);
    tp2.ITime iTime19 = server9.getTime();
    server0.setTime(iTime19);
    tp2.IP iP21 = null;
    boolean b22 = server0.removeException(iP21);
    java.lang.String str23 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509020147L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509020148L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465509020148, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465509020148, exceptions=(), bans={}]"));

  }

  @Test
  public void test093() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test093"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    tp2.ITime iTime11 = server5.getTime();
    server0.setTime(iTime11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server0.connect(iP19);
    java.lang.String str21 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Server [lastUpdate=1465509020153, exceptions=(), bans={}]"+ "'", str21.equals("Server [lastUpdate=1465509020153, exceptions=(), bans={}]"));

  }

  @Test
  public void test094() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test094"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeException(iP23);
    tp2.ITime iTime25 = server0.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    tp2.Server server28 = new tp2.Server();
    long long29 = server28.getLastUpdate();
    server28.update();
    tp2.IP iP31 = null;
    boolean b32 = server28.removeBan(iP31);
    tp2.Server server33 = new tp2.Server();
    long long34 = server33.getLastUpdate();
    server33.update();
    tp2.IP iP36 = null;
    boolean b37 = server33.removeException(iP36);
    server33.update();
    tp2.ITime iTime39 = server33.getTime();
    server28.setTime(iTime39);
    long long41 = server28.getLastUpdate();
    tp2.ITime iTime42 = server28.getTime();
    server0.setTime(iTime42);
    tp2.Server server44 = new tp2.Server();
    long long45 = server44.getLastUpdate();
    tp2.ITime iTime46 = server44.getTime();
    tp2.IP iP47 = null;
    boolean b48 = server44.removeBan(iP47);
    tp2.Server server49 = new tp2.Server();
    long long50 = server49.getLastUpdate();
    server49.update();
    tp2.IP iP52 = null;
    boolean b53 = server49.removeBan(iP52);
    tp2.Server server54 = new tp2.Server();
    tp2.ITime iTime55 = server54.getTime();
    server54.update();
    tp2.ITime iTime57 = server54.getTime();
    server49.setTime(iTime57);
    server44.setTime(iTime57);
    tp2.ITime iTime60 = server44.getTime();
    server0.setTime(iTime60);
    tp2.IP iP62 = null;
    boolean b63 = server0.removeBan(iP62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long34 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 1465509020158L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long45 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long50 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);

  }

  @Test
  public void test095() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test095"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);

  }

  @Test
  public void test096() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test096"); }


    tp2.Server server0 = new tp2.Server();
    java.lang.String str1 = server0.toString();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str1.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);

  }

  @Test
  public void test097() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test097"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    java.lang.String str9 = server0.toString();
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509020195L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509020195, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509020195, exceptions=(), bans={}]"));

  }

  @Test
  public void test098() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test098"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    java.lang.String str3 = server0.toString();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    server4.update();
    tp2.IP iP7 = null;
    boolean b8 = server4.removeException(iP7);
    server4.update();
    long long10 = server4.getLastUpdate();
    java.lang.String str11 = server4.toString();
    tp2.ITime iTime12 = server4.getTime();
    server4.update();
    tp2.IP iP14 = null;
    boolean b15 = server4.removeBan(iP14);
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    long long18 = server16.getLastUpdate();
    java.lang.String str19 = server16.toString();
    tp2.ITime iTime20 = server16.getTime();
    server4.setTime(iTime20);
    server0.setTime(iTime20);
    java.lang.String str23 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509020198L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509020198, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509020198, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test099() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test099"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    server0.update();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.ITime iTime13 = server0.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    server0.update();
    tp2.IP iP17 = null;
    boolean b18 = server0.removeException(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509020201L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509020201, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509020201, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test100() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test100"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.ITime iTime11 = server0.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020205L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509020205, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509020205, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test101() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test101"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    long long14 = server10.getLastUpdate();
    tp2.IP iP15 = null;
    boolean b16 = server10.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server10.removeException(iP17);
    java.lang.String str19 = server10.toString();
    tp2.IP iP20 = null;
    boolean b21 = server10.connect(iP20);
    tp2.Server server22 = new tp2.Server();
    long long23 = server22.getLastUpdate();
    server22.update();
    tp2.IP iP25 = null;
    boolean b26 = server22.removeException(iP25);
    server22.update();
    long long28 = server22.getLastUpdate();
    tp2.IP iP29 = null;
    boolean b30 = server22.removeBan(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server22.removeBan(iP31);
    long long33 = server22.getLastUpdate();
    tp2.Server server34 = new tp2.Server();
    tp2.ITime iTime35 = server34.getTime();
    tp2.IP iP36 = null;
    boolean b37 = server34.removeException(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server34.connect(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server34.removeException(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server34.connect(iP42);
    tp2.IP iP44 = null;
    boolean b45 = server34.connect(iP44);
    tp2.Server server46 = new tp2.Server();
    tp2.ITime iTime47 = server46.getTime();
    server46.update();
    tp2.ITime iTime49 = server46.getTime();
    server34.setTime(iTime49);
    server22.setTime(iTime49);
    server10.setTime(iTime49);
    server0.setTime(iTime49);
    tp2.IP iP54 = null;
    boolean b55 = server0.connect(iP54);
    tp2.Server server56 = new tp2.Server();
    tp2.ITime iTime57 = server56.getTime();
    server56.update();
    tp2.ITime iTime59 = server56.getTime();
    tp2.Server server60 = new tp2.Server();
    long long61 = server60.getLastUpdate();
    tp2.ITime iTime62 = server60.getTime();
    server56.setTime(iTime62);
    tp2.IP iP64 = null;
    boolean b65 = server56.connect(iP64);
    long long66 = server56.getLastUpdate();
    tp2.Server server67 = new tp2.Server();
    tp2.ITime iTime68 = server67.getTime();
    server67.update();
    tp2.IP iP70 = null;
    boolean b71 = server67.connect(iP70);
    tp2.Server server72 = new tp2.Server();
    tp2.ITime iTime73 = server72.getTime();
    tp2.IP iP74 = null;
    boolean b75 = server72.removeException(iP74);
    tp2.IP iP76 = null;
    boolean b77 = server72.connect(iP76);
    tp2.IP iP78 = null;
    boolean b79 = server72.removeException(iP78);
    tp2.IP iP80 = null;
    boolean b81 = server72.connect(iP80);
    tp2.IP iP82 = null;
    boolean b83 = server72.connect(iP82);
    tp2.Server server84 = new tp2.Server();
    tp2.ITime iTime85 = server84.getTime();
    server84.update();
    tp2.ITime iTime87 = server84.getTime();
    server72.setTime(iTime87);
    server67.setTime(iTime87);
    tp2.IP iP90 = null;
    boolean b91 = server67.removeException(iP90);
    tp2.ITime iTime92 = server67.getTime();
    server56.setTime(iTime92);
    server0.setTime(iTime92);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509020207L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509020207, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509020207, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465509020208L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 1465509020208L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long61 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long66 == 1465509020209L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime92);

  }

  @Test
  public void test102() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test102"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.ITime iTime11 = server0.getTime();
    java.lang.String str12 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020257L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509020257, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509020257, exceptions=(), bans={}]"));

  }

  @Test
  public void test103() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test103"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.ITime iTime5 = server0.getTime();
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test104() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test104"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    tp2.IP iP25 = null;
    boolean b26 = server23.removeException(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server23.connect(iP27);
    tp2.IP iP29 = null;
    boolean b30 = server23.removeException(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server23.connect(iP31);
    tp2.IP iP33 = null;
    boolean b34 = server23.removeException(iP33);
    java.lang.String str35 = server23.toString();
    tp2.IP iP36 = null;
    boolean b37 = server23.removeBan(iP36);
    tp2.Server server38 = new tp2.Server();
    tp2.ITime iTime39 = server38.getTime();
    server38.update();
    tp2.IP iP41 = null;
    boolean b42 = server38.connect(iP41);
    tp2.Server server43 = new tp2.Server();
    tp2.ITime iTime44 = server43.getTime();
    tp2.IP iP45 = null;
    boolean b46 = server43.removeException(iP45);
    tp2.IP iP47 = null;
    boolean b48 = server43.connect(iP47);
    tp2.IP iP49 = null;
    boolean b50 = server43.removeException(iP49);
    tp2.IP iP51 = null;
    boolean b52 = server43.connect(iP51);
    tp2.IP iP53 = null;
    boolean b54 = server43.connect(iP53);
    tp2.Server server55 = new tp2.Server();
    tp2.ITime iTime56 = server55.getTime();
    server55.update();
    tp2.ITime iTime58 = server55.getTime();
    server43.setTime(iTime58);
    server38.setTime(iTime58);
    server23.setTime(iTime58);
    server0.setTime(iTime58);
    tp2.ITime iTime63 = server0.getTime();
    tp2.IP iP64 = null;
    boolean b65 = server0.removeBan(iP64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str35.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);

  }

  @Test
  public void test105() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test105"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.Server server4 = new tp2.Server();
    tp2.ITime iTime5 = server4.getTime();
    server4.update();
    tp2.ITime iTime7 = server4.getTime();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    tp2.ITime iTime10 = server8.getTime();
    server4.setTime(iTime10);
    tp2.ITime iTime12 = server4.getTime();
    server0.setTime(iTime12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    tp2.ITime iTime16 = server0.getTime();
    tp2.IP iP17 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = server0.addException(iP17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);

  }

  @Test
  public void test106() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test106"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    long long4 = server0.getLastUpdate();
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server5.removeBan(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.connect(iP11);
    server5.update();
    java.lang.String str14 = server5.toString();
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    java.lang.String str17 = server15.toString();
    server15.update();
    tp2.IP iP19 = null;
    boolean b20 = server15.removeBan(iP19);
    tp2.ITime iTime21 = server15.getTime();
    server5.setTime(iTime21);
    server5.update();
    tp2.ITime iTime24 = server5.getTime();
    server0.setTime(iTime24);
    tp2.Server server26 = new tp2.Server();
    tp2.ITime iTime27 = server26.getTime();
    server26.update();
    tp2.ITime iTime29 = server26.getTime();
    tp2.IP iP30 = null;
    boolean b31 = server26.connect(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server26.removeBan(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server26.connect(iP34);
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.ITime iTime39 = server36.getTime();
    tp2.Server server40 = new tp2.Server();
    long long41 = server40.getLastUpdate();
    tp2.ITime iTime42 = server40.getTime();
    server36.setTime(iTime42);
    java.lang.String str44 = server36.toString();
    tp2.Server server45 = new tp2.Server();
    tp2.ITime iTime46 = server45.getTime();
    server45.update();
    tp2.ITime iTime48 = server45.getTime();
    tp2.Server server49 = new tp2.Server();
    long long50 = server49.getLastUpdate();
    tp2.ITime iTime51 = server49.getTime();
    server45.setTime(iTime51);
    server36.setTime(iTime51);
    server26.setTime(iTime51);
    server0.setTime(iTime51);
    tp2.ITime iTime56 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465509020293, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465509020293, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "Server [lastUpdate=1465509020294, exceptions=(), bans={}]"+ "'", str44.equals("Server [lastUpdate=1465509020294, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long50 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);

  }

  @Test
  public void test107() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test107"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    long long11 = server0.getLastUpdate();
    long long12 = server0.getLastUpdate();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server13.removeException(iP16);
    tp2.ITime iTime18 = server13.getTime();
    server0.setTime(iTime18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    server20.update();
    tp2.ITime iTime23 = server20.getTime();
    tp2.Server server24 = new tp2.Server();
    long long25 = server24.getLastUpdate();
    tp2.ITime iTime26 = server24.getTime();
    server20.setTime(iTime26);
    java.lang.String str28 = server20.toString();
    tp2.ITime iTime29 = server20.getTime();
    server0.setTime(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020325L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509020325L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509020325L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long25 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "Server [lastUpdate=1465509020326, exceptions=(), bans={}]"+ "'", str28.equals("Server [lastUpdate=1465509020326, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);

  }

  @Test
  public void test108() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test108"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    java.lang.String str3 = server0.toString();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=1465509020333, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=1465509020333, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020333L);

  }

  @Test
  public void test109() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test109"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    tp2.ITime iTime11 = server5.getTime();
    server0.setTime(iTime11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.IP iP20 = null;
    boolean b21 = server17.connect(iP20);
    long long22 = server17.getLastUpdate();
    java.lang.String str23 = server17.toString();
    java.lang.String str24 = server17.toString();
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    server25.update();
    tp2.ITime iTime28 = server25.getTime();
    tp2.Server server29 = new tp2.Server();
    long long30 = server29.getLastUpdate();
    tp2.ITime iTime31 = server29.getTime();
    server25.setTime(iTime31);
    tp2.ITime iTime33 = server25.getTime();
    server17.setTime(iTime33);
    server0.setTime(iTime33);
    tp2.IP iP36 = null;
    boolean b37 = server0.connect(iP36);
    server0.update();
    tp2.IP iP39 = null;
    boolean b40 = server0.removeBan(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server0.removeBan(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server0.removeException(iP43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 1465509020334L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465509020334, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465509020334, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465509020334, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465509020334, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);

  }

  @Test
  public void test110() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test110"); }


    tp2.Server server0 = new tp2.Server();
    tp2.IP iP1 = null;
    boolean b2 = server0.connect(iP1);
    java.lang.String str3 = server0.toString();
    tp2.Server server4 = new tp2.Server();
    tp2.ITime iTime5 = server4.getTime();
    server4.update();
    tp2.ITime iTime7 = server4.getTime();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    tp2.ITime iTime10 = server8.getTime();
    server4.setTime(iTime10);
    java.lang.String str12 = server4.toString();
    tp2.ITime iTime13 = server4.getTime();
    server0.setTime(iTime13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeException(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server0.removeBan(iP19);
    long long21 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509020346, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509020346, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);

  }

  @Test
  public void test111() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test111"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server10.connect(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server10.removeException(iP14);
    long long16 = server10.getLastUpdate();
    tp2.IP iP17 = null;
    boolean b18 = server10.removeBan(iP17);
    tp2.Server server19 = new tp2.Server();
    long long20 = server19.getLastUpdate();
    tp2.IP iP21 = null;
    boolean b22 = server19.removeException(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    server23.update();
    tp2.ITime iTime26 = server23.getTime();
    tp2.Server server27 = new tp2.Server();
    long long28 = server27.getLastUpdate();
    tp2.ITime iTime29 = server27.getTime();
    server23.setTime(iTime29);
    tp2.ITime iTime31 = server23.getTime();
    server19.setTime(iTime31);
    server10.setTime(iTime31);
    server0.setTime(iTime31);
    tp2.IP iP35 = null;
    boolean b36 = server0.connect(iP35);
    server0.update();
    tp2.IP iP38 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b39 = server0.addException(iP38);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509020351L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);

  }

  @Test
  public void test112() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test112"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    server0.update();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    long long9 = server0.getLastUpdate();
    long long10 = server0.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509020353L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509020353L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test113() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test113"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.ITime iTime3 = server0.getTime();
    tp2.ITime iTime4 = server0.getTime();
    long long5 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);

  }

  @Test
  public void test114() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test114"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    server0.update();
    tp2.ITime iTime9 = server0.getTime();
    server0.update();
    long long11 = server0.getLastUpdate();
    java.lang.String str12 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509020368, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509020368, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509020368, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509020368, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509020368L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509020368, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509020368, exceptions=(), bans={}]"));

  }

  @Test
  public void test115() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test115"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    java.lang.String str11 = server9.toString();
    tp2.IP iP12 = null;
    boolean b13 = server9.removeBan(iP12);
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server14.update();
    tp2.ITime iTime17 = server14.getTime();
    long long18 = server14.getLastUpdate();
    tp2.IP iP19 = null;
    boolean b20 = server14.removeBan(iP19);
    tp2.Server server21 = new tp2.Server();
    tp2.ITime iTime22 = server21.getTime();
    tp2.IP iP23 = null;
    boolean b24 = server21.removeException(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server21.connect(iP25);
    tp2.Server server27 = new tp2.Server();
    long long28 = server27.getLastUpdate();
    tp2.ITime iTime29 = server27.getTime();
    server21.setTime(iTime29);
    server14.setTime(iTime29);
    server9.setTime(iTime29);
    tp2.IP iP33 = null;
    boolean b34 = server9.removeBan(iP33);
    server9.update();
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.IP iP39 = null;
    boolean b40 = server36.connect(iP39);
    long long41 = server36.getLastUpdate();
    tp2.IP iP42 = null;
    boolean b43 = server36.removeBan(iP42);
    server36.update();
    java.lang.String str45 = server36.toString();
    tp2.Server server46 = new tp2.Server();
    long long47 = server46.getLastUpdate();
    long long48 = server46.getLastUpdate();
    java.lang.String str49 = server46.toString();
    tp2.Server server50 = new tp2.Server();
    tp2.ITime iTime51 = server50.getTime();
    server50.update();
    tp2.ITime iTime53 = server50.getTime();
    tp2.Server server54 = new tp2.Server();
    long long55 = server54.getLastUpdate();
    tp2.ITime iTime56 = server54.getTime();
    server50.setTime(iTime56);
    tp2.IP iP58 = null;
    boolean b59 = server50.connect(iP58);
    long long60 = server50.getLastUpdate();
    tp2.ITime iTime61 = server50.getTime();
    server46.setTime(iTime61);
    server36.setTime(iTime61);
    server9.setTime(iTime61);
    server0.setTime(iTime61);
    tp2.IP iP66 = null;
    boolean b67 = server0.connect(iP66);
    tp2.IP iP68 = null;
    boolean b69 = server0.removeException(iP68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509020374L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 1465509020375L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "Server [lastUpdate=1465509020376, exceptions=(), bans={}]"+ "'", str45.equals("Server [lastUpdate=1465509020376, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long47 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long48 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str49.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long55 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long60 == 1465509020376L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);

  }

  @Test
  public void test116() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test116"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.ITime iTime10 = server0.getTime();
    java.lang.String str11 = server0.toString();
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.connect(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);

  }

  @Test
  public void test117() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test117"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    server0.update();
    tp2.ITime iTime12 = server0.getTime();
    long long13 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020411L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509020412L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test118() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test118"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    long long2 = server0.getLastUpdate();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.connect(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.ITime iTime9 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long2 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);

  }

  @Test
  public void test119() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test119"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    long long12 = server0.getLastUpdate();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.ITime iTime15 = server0.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server0.connect(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509020432, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509020432, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509020432, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509020432, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509020432L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);

  }

  @Test
  public void test120() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test120"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    java.lang.String str9 = server0.toString();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    tp2.ITime iTime12 = server10.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server10.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server10.removeBan(iP15);
    tp2.ITime iTime17 = server10.getTime();
    server0.setTime(iTime17);
    tp2.IP iP19 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b20 = server0.addException(iP19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);

  }

  @Test
  public void test121() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test121"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);

  }

  @Test
  public void test122() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test122"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);

  }

  @Test
  public void test123() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test123"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeBan(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server0.removeException(iP25);
    long long27 = server0.getLastUpdate();
    tp2.IP iP28 = null;
    boolean b29 = server0.removeException(iP28);
    tp2.Server server30 = new tp2.Server();
    tp2.ITime iTime31 = server30.getTime();
    tp2.IP iP32 = null;
    boolean b33 = server30.removeException(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server30.connect(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server30.connect(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server30.connect(iP38);
    tp2.ITime iTime40 = server30.getTime();
    server0.setTime(iTime40);
    tp2.Server server42 = new tp2.Server();
    tp2.ITime iTime43 = server42.getTime();
    server42.update();
    tp2.ITime iTime45 = server42.getTime();
    tp2.IP iP46 = null;
    boolean b47 = server42.removeBan(iP46);
    tp2.IP iP48 = null;
    boolean b49 = server42.connect(iP48);
    server42.update();
    java.lang.String str51 = server42.toString();
    tp2.Server server52 = new tp2.Server();
    long long53 = server52.getLastUpdate();
    java.lang.String str54 = server52.toString();
    server52.update();
    tp2.IP iP56 = null;
    boolean b57 = server52.removeBan(iP56);
    tp2.ITime iTime58 = server52.getTime();
    server42.setTime(iTime58);
    server42.update();
    tp2.ITime iTime61 = server42.getTime();
    server0.setTime(iTime61);
    tp2.IP iP63 = null;
    boolean b64 = server0.removeException(iP63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465509020446L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "Server [lastUpdate=1465509020447, exceptions=(), bans={}]"+ "'", str51.equals("Server [lastUpdate=1465509020447, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long53 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str54.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);

  }

  @Test
  public void test124() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test124"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    server0.update();
    java.lang.String str10 = server0.toString();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server13.removeBan(iP16);
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    server18.update();
    tp2.IP iP21 = null;
    boolean b22 = server18.removeBan(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    server23.update();
    tp2.ITime iTime26 = server23.getTime();
    server18.setTime(iTime26);
    server13.setTime(iTime26);
    server0.setTime(iTime26);
    tp2.IP iP30 = null;
    boolean b31 = server0.connect(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server0.connect(iP32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020462L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509020462, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509020462, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509020462, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509020462, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);

  }

  @Test
  public void test125() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test125"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    long long9 = server5.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server5.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server12.setTime(iTime20);
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server0.removeException(iP28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509020467L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);

  }

  @Test
  public void test126() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test126"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    long long9 = server0.getLastUpdate();
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);

  }

  @Test
  public void test127() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test127"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    server0.update();
    server0.update();
    tp2.IP iP12 = null;
    boolean b13 = server0.connect(iP12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);

  }

  @Test
  public void test128() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test128"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    server0.update();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server14.removeException(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server14.connect(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server14.removeException(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server14.connect(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server14.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    tp2.ITime iTime27 = server26.getTime();
    server26.update();
    tp2.ITime iTime29 = server26.getTime();
    server14.setTime(iTime29);
    server0.setTime(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);

  }

  @Test
  public void test129() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test129"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    server0.setTime(iTime15);
    tp2.IP iP17 = null;
    boolean b18 = server0.removeException(iP17);
    long long19 = server0.getLastUpdate();
    tp2.ITime iTime20 = server0.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server0.removeException(iP21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test130() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test130"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    server0.update();
    server0.update();
    tp2.ITime iTime10 = server0.getTime();
    tp2.ITime iTime11 = server0.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);

  }

  @Test
  public void test131() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test131"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.removeBan(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test132() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test132"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.ITime iTime11 = server0.getTime();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    java.lang.String str14 = server12.toString();
    server12.update();
    tp2.IP iP16 = null;
    boolean b17 = server12.removeBan(iP16);
    server12.update();
    java.lang.String str19 = server12.toString();
    tp2.IP iP20 = null;
    boolean b21 = server12.connect(iP20);
    server12.update();
    long long23 = server12.getLastUpdate();
    tp2.ITime iTime24 = server12.getTime();
    server0.setTime(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020514L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509020514, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509020514, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509020515, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509020515, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 1465509020515L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);

  }

  @Test
  public void test133() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test133"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.Server server3 = new tp2.Server();
    tp2.ITime iTime4 = server3.getTime();
    server3.update();
    tp2.ITime iTime6 = server3.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server3.removeBan(iP7);
    java.lang.String str9 = server3.toString();
    java.lang.String str10 = server3.toString();
    tp2.ITime iTime11 = server3.getTime();
    tp2.ITime iTime12 = server3.getTime();
    long long13 = server3.getLastUpdate();
    tp2.Server server14 = new tp2.Server();
    long long15 = server14.getLastUpdate();
    tp2.ITime iTime16 = server14.getTime();
    server3.setTime(iTime16);
    server0.setTime(iTime16);
    java.lang.String str19 = server0.toString();
    tp2.IP iP20 = null;
    boolean b21 = server0.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server0.removeBan(iP22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509020525, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509020525, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509020525, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509020525, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509020525L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test134() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test134"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509020533, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509020533, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509020533, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509020533, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509020533L);

  }

  @Test
  public void test135() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test135"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.ITime iTime5 = server0.getTime();
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.IP iP18 = null;
    boolean b19 = server15.connect(iP18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    tp2.IP iP22 = null;
    boolean b23 = server20.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server20.connect(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server20.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server20.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server20.connect(iP30);
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    server32.update();
    tp2.ITime iTime35 = server32.getTime();
    server20.setTime(iTime35);
    server15.setTime(iTime35);
    tp2.Server server38 = new tp2.Server();
    tp2.ITime iTime39 = server38.getTime();
    tp2.IP iP40 = null;
    boolean b41 = server38.removeException(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server38.connect(iP42);
    tp2.IP iP44 = null;
    boolean b45 = server38.removeException(iP44);
    tp2.IP iP46 = null;
    boolean b47 = server38.connect(iP46);
    tp2.IP iP48 = null;
    boolean b49 = server38.removeException(iP48);
    java.lang.String str50 = server38.toString();
    tp2.IP iP51 = null;
    boolean b52 = server38.removeBan(iP51);
    tp2.Server server53 = new tp2.Server();
    tp2.ITime iTime54 = server53.getTime();
    server53.update();
    tp2.IP iP56 = null;
    boolean b57 = server53.connect(iP56);
    tp2.Server server58 = new tp2.Server();
    tp2.ITime iTime59 = server58.getTime();
    tp2.IP iP60 = null;
    boolean b61 = server58.removeException(iP60);
    tp2.IP iP62 = null;
    boolean b63 = server58.connect(iP62);
    tp2.IP iP64 = null;
    boolean b65 = server58.removeException(iP64);
    tp2.IP iP66 = null;
    boolean b67 = server58.connect(iP66);
    tp2.IP iP68 = null;
    boolean b69 = server58.connect(iP68);
    tp2.Server server70 = new tp2.Server();
    tp2.ITime iTime71 = server70.getTime();
    server70.update();
    tp2.ITime iTime73 = server70.getTime();
    server58.setTime(iTime73);
    server53.setTime(iTime73);
    server38.setTime(iTime73);
    server15.setTime(iTime73);
    server0.setTime(iTime73);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str50.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime73);

  }

  @Test
  public void test136() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test136"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.ITime iTime12 = server0.getTime();
    java.lang.String str13 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020568L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509020568, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509020568, exceptions=(), bans={}]"));

  }

  @Test
  public void test137() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test137"); }


    tp2.Server server0 = new tp2.Server();
    tp2.IP iP1 = null;
    boolean b2 = server0.connect(iP1);
    java.lang.String str3 = server0.toString();
    tp2.Server server4 = new tp2.Server();
    tp2.ITime iTime5 = server4.getTime();
    server4.update();
    tp2.ITime iTime7 = server4.getTime();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    tp2.ITime iTime10 = server8.getTime();
    server4.setTime(iTime10);
    java.lang.String str12 = server4.toString();
    tp2.ITime iTime13 = server4.getTime();
    server0.setTime(iTime13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeException(iP15);
    long long17 = server0.getLastUpdate();
    long long18 = server0.getLastUpdate();
    tp2.IP iP19 = null;
    boolean b20 = server0.connect(iP19);
    tp2.Server server21 = new tp2.Server();
    tp2.ITime iTime22 = server21.getTime();
    tp2.IP iP23 = null;
    boolean b24 = server21.connect(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server21.removeException(iP25);
    long long27 = server21.getLastUpdate();
    tp2.ITime iTime28 = server21.getTime();
    tp2.ITime iTime29 = server21.getTime();
    server0.setTime(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509020570, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509020570, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);

  }

  @Test
  public void test138() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test138"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server7.setTime(iTime15);
    server0.setTime(iTime15);
    tp2.ITime iTime18 = server0.getTime();
    long long19 = server0.getLastUpdate();
    java.lang.String str20 = server0.toString();
    tp2.IP iP21 = null;
    boolean b22 = server0.connect(iP21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509020595L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509020595L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=1465509020595, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=1465509020595, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);

  }

  @Test
  public void test139() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test139"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    server12.update();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeException(iP15);
    server12.update();
    long long18 = server12.getLastUpdate();
    tp2.IP iP19 = null;
    boolean b20 = server12.removeBan(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server12.removeBan(iP21);
    long long23 = server12.getLastUpdate();
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server24.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server24.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server24.connect(iP34);
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.ITime iTime39 = server36.getTime();
    server24.setTime(iTime39);
    server12.setTime(iTime39);
    server0.setTime(iTime39);
    tp2.IP iP43 = null;
    boolean b44 = server0.connect(iP43);
    long long45 = server0.getLastUpdate();
    tp2.IP iP46 = null;
    boolean b47 = server0.removeException(iP46);
    tp2.Server server48 = new tp2.Server();
    long long49 = server48.getLastUpdate();
    server48.update();
    tp2.IP iP51 = null;
    boolean b52 = server48.removeException(iP51);
    server48.update();
    long long54 = server48.getLastUpdate();
    tp2.IP iP55 = null;
    boolean b56 = server48.removeBan(iP55);
    tp2.IP iP57 = null;
    boolean b58 = server48.removeBan(iP57);
    server48.update();
    server48.update();
    tp2.IP iP61 = null;
    boolean b62 = server48.removeBan(iP61);
    tp2.IP iP63 = null;
    boolean b64 = server48.removeException(iP63);
    tp2.ITime iTime65 = server48.getTime();
    server0.setTime(iTime65);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509020602L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509020602, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509020602, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509020603L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 1465509020603L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long45 == 1465509020602L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long49 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long54 == 1465509020607L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime65);

  }

  @Test
  public void test140() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test140"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.IP iP17 = null;
    boolean b18 = server13.removeBan(iP17);
    java.lang.String str19 = server13.toString();
    java.lang.String str20 = server13.toString();
    java.lang.String str21 = server13.toString();
    java.lang.String str22 = server13.toString();
    tp2.ITime iTime23 = server13.getTime();
    server0.setTime(iTime23);
    tp2.IP iP25 = null;
    boolean b26 = server0.removeBan(iP25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509020618L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509020618L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509020618, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509020618, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=1465509020618, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=1465509020618, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Server [lastUpdate=1465509020618, exceptions=(), bans={}]"+ "'", str21.equals("Server [lastUpdate=1465509020618, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Server [lastUpdate=1465509020618, exceptions=(), bans={}]"+ "'", str22.equals("Server [lastUpdate=1465509020618, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test141() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test141"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    server0.update();
    tp2.ITime iTime15 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);

  }

  @Test
  public void test142() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test142"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.Server server11 = new tp2.Server();
    tp2.ITime iTime12 = server11.getTime();
    server11.update();
    tp2.ITime iTime14 = server11.getTime();
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    tp2.ITime iTime17 = server15.getTime();
    server11.setTime(iTime17);
    tp2.ITime iTime19 = server11.getTime();
    server9.setTime(iTime19);
    server0.setTime(iTime19);
    tp2.IP iP22 = null;
    boolean b23 = server0.removeBan(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeException(iP24);
    java.lang.String str26 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509020642L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509020642, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509020642, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Server [lastUpdate=1465509020642, exceptions=(), bans={}]"+ "'", str26.equals("Server [lastUpdate=1465509020642, exceptions=(), bans={}]"));

  }

  @Test
  public void test143() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test143"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    long long9 = server5.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server5.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server12.setTime(iTime20);
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    server0.update();
    long long27 = server0.getLastUpdate();
    long long28 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509020650L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465509020651L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465509020651L);

  }

  @Test
  public void test144() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test144"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    tp2.ITime iTime14 = server0.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server0.removeException(iP15);
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    server17.update();
    tp2.IP iP20 = null;
    boolean b21 = server17.removeException(iP20);
    server17.update();
    server17.update();
    server17.update();
    tp2.IP iP25 = null;
    boolean b26 = server17.removeBan(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server17.removeBan(iP27);
    server17.update();
    tp2.Server server30 = new tp2.Server();
    tp2.ITime iTime31 = server30.getTime();
    server30.update();
    tp2.ITime iTime33 = server30.getTime();
    tp2.IP iP34 = null;
    boolean b35 = server30.connect(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server30.connect(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server30.removeException(iP38);
    tp2.Server server40 = new tp2.Server();
    tp2.ITime iTime41 = server40.getTime();
    tp2.IP iP42 = null;
    boolean b43 = server40.removeException(iP42);
    tp2.IP iP44 = null;
    boolean b45 = server40.connect(iP44);
    tp2.IP iP46 = null;
    boolean b47 = server40.removeException(iP46);
    java.lang.String str48 = server40.toString();
    java.lang.String str49 = server40.toString();
    tp2.ITime iTime50 = server40.getTime();
    tp2.Server server51 = new tp2.Server();
    tp2.ITime iTime52 = server51.getTime();
    server51.update();
    tp2.ITime iTime54 = server51.getTime();
    tp2.Server server55 = new tp2.Server();
    long long56 = server55.getLastUpdate();
    tp2.ITime iTime57 = server55.getTime();
    server51.setTime(iTime57);
    tp2.IP iP59 = null;
    boolean b60 = server51.connect(iP59);
    long long61 = server51.getLastUpdate();
    java.lang.String str62 = server51.toString();
    tp2.ITime iTime63 = server51.getTime();
    java.lang.String str64 = server51.toString();
    tp2.ITime iTime65 = server51.getTime();
    server40.setTime(iTime65);
    server30.setTime(iTime65);
    server17.setTime(iTime65);
    server0.setTime(iTime65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509020657L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509020657, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509020657, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str48.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str49.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long56 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long61 == 1465509020660L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "Server [lastUpdate=1465509020660, exceptions=(), bans={}]"+ "'", str62.equals("Server [lastUpdate=1465509020660, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "Server [lastUpdate=1465509020660, exceptions=(), bans={}]"+ "'", str64.equals("Server [lastUpdate=1465509020660, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime65);

  }

  @Test
  public void test145() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test145"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    long long8 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 0L);

  }

  @Test
  public void test146() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test146"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.ITime iTime11 = server0.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server0.connect(iP12);
    tp2.IP iP14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = server0.addException(iP14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020711L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);

  }

  @Test
  public void test147() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test147"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    java.lang.String str14 = server12.toString();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeBan(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    long long21 = server17.getLastUpdate();
    tp2.IP iP22 = null;
    boolean b23 = server17.removeBan(iP22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.Server server30 = new tp2.Server();
    long long31 = server30.getLastUpdate();
    tp2.ITime iTime32 = server30.getTime();
    server24.setTime(iTime32);
    server17.setTime(iTime32);
    server12.setTime(iTime32);
    server0.setTime(iTime32);
    server0.update();
    long long38 = server0.getLastUpdate();
    tp2.Server server39 = new tp2.Server();
    long long40 = server39.getLastUpdate();
    server39.update();
    tp2.IP iP42 = null;
    boolean b43 = server39.removeException(iP42);
    server39.update();
    long long45 = server39.getLastUpdate();
    tp2.IP iP46 = null;
    boolean b47 = server39.removeBan(iP46);
    tp2.IP iP48 = null;
    boolean b49 = server39.removeBan(iP48);
    long long50 = server39.getLastUpdate();
    tp2.ITime iTime51 = server39.getTime();
    server0.setTime(iTime51);
    java.lang.String str53 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509020716L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509020716, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509020716, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509020718L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long38 == 1465509020719L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long40 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long45 == 1465509020720L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long50 == 1465509020720L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "Server [lastUpdate=1465509020719, exceptions=(), bans={}]"+ "'", str53.equals("Server [lastUpdate=1465509020719, exceptions=(), bans={}]"));

  }

  @Test
  public void test148() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test148"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server9.connect(iP13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    tp2.ITime iTime17 = server15.getTime();
    server9.setTime(iTime17);
    server0.setTime(iTime17);
    tp2.IP iP20 = null;
    boolean b21 = server0.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server0.connect(iP22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020744L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);

  }

  @Test
  public void test149() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test149"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test150() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test150"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    server0.update();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509020752, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509020752, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509020752, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509020752, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509020753L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509020753, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509020753, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test151() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test151"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    long long14 = server10.getLastUpdate();
    tp2.IP iP15 = null;
    boolean b16 = server10.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server10.removeException(iP17);
    java.lang.String str19 = server10.toString();
    tp2.IP iP20 = null;
    boolean b21 = server10.connect(iP20);
    tp2.Server server22 = new tp2.Server();
    long long23 = server22.getLastUpdate();
    server22.update();
    tp2.IP iP25 = null;
    boolean b26 = server22.removeException(iP25);
    server22.update();
    long long28 = server22.getLastUpdate();
    tp2.IP iP29 = null;
    boolean b30 = server22.removeBan(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server22.removeBan(iP31);
    long long33 = server22.getLastUpdate();
    tp2.Server server34 = new tp2.Server();
    tp2.ITime iTime35 = server34.getTime();
    tp2.IP iP36 = null;
    boolean b37 = server34.removeException(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server34.connect(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server34.removeException(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server34.connect(iP42);
    tp2.IP iP44 = null;
    boolean b45 = server34.connect(iP44);
    tp2.Server server46 = new tp2.Server();
    tp2.ITime iTime47 = server46.getTime();
    server46.update();
    tp2.ITime iTime49 = server46.getTime();
    server34.setTime(iTime49);
    server22.setTime(iTime49);
    server10.setTime(iTime49);
    server0.setTime(iTime49);
    server0.update();
    tp2.Server server55 = new tp2.Server();
    tp2.IP iP56 = null;
    boolean b57 = server55.connect(iP56);
    tp2.ITime iTime58 = server55.getTime();
    server0.setTime(iTime58);
    tp2.IP iP60 = null;
    boolean b61 = server0.removeException(iP60);
    tp2.IP iP62 = null;
    boolean b63 = server0.removeBan(iP62);
    java.lang.String str64 = server0.toString();
    tp2.IP iP65 = null;
    boolean b66 = server0.removeException(iP65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509020757L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509020757, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509020757, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465509020758L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 1465509020758L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "Server [lastUpdate=1465509020759, exceptions=(), bans={}]"+ "'", str64.equals("Server [lastUpdate=1465509020759, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);

  }

  @Test
  public void test152() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test152"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    tp2.ITime iTime10 = server0.getTime();
    tp2.Server server11 = new tp2.Server();
    tp2.ITime iTime12 = server11.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server11.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server11.removeException(iP15);
    long long17 = server11.getLastUpdate();
    tp2.IP iP18 = null;
    boolean b19 = server11.removeBan(iP18);
    tp2.Server server20 = new tp2.Server();
    long long21 = server20.getLastUpdate();
    tp2.IP iP22 = null;
    boolean b23 = server20.removeException(iP22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    server24.update();
    tp2.ITime iTime27 = server24.getTime();
    tp2.Server server28 = new tp2.Server();
    long long29 = server28.getLastUpdate();
    tp2.ITime iTime30 = server28.getTime();
    server24.setTime(iTime30);
    tp2.ITime iTime32 = server24.getTime();
    server20.setTime(iTime32);
    server11.setTime(iTime32);
    java.lang.String str35 = server11.toString();
    tp2.Server server36 = new tp2.Server();
    long long37 = server36.getLastUpdate();
    server36.update();
    tp2.IP iP39 = null;
    boolean b40 = server36.removeException(iP39);
    server36.update();
    long long42 = server36.getLastUpdate();
    java.lang.String str43 = server36.toString();
    tp2.ITime iTime44 = server36.getTime();
    server11.setTime(iTime44);
    server0.setTime(iTime44);
    long long47 = server0.getLastUpdate();
    tp2.IP iP48 = null;
    boolean b49 = server0.removeBan(iP48);
    server0.update();
    tp2.IP iP51 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b52 = server0.addException(iP51);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509020781, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509020781, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509020781, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509020781, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509020781, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509020781, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509020781, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509020781, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str35.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long37 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long42 == 1465509020783L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "Server [lastUpdate=1465509020783, exceptions=(), bans={}]"+ "'", str43.equals("Server [lastUpdate=1465509020783, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long47 == 1465509020781L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);

  }

  @Test
  public void test153() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test153"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    server13.update();
    tp2.IP iP16 = null;
    boolean b17 = server13.removeException(iP16);
    server13.update();
    long long19 = server13.getLastUpdate();
    server13.update();
    tp2.ITime iTime21 = server13.getTime();
    server0.setTime(iTime21);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeException(iP23);
    tp2.IP iP25 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b26 = server0.addException(iP25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509020786L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test154() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test154"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test155() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test155"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeBan(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server0.removeException(iP25);
    long long27 = server0.getLastUpdate();
    tp2.IP iP28 = null;
    boolean b29 = server0.removeException(iP28);
    tp2.IP iP30 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b31 = server0.addException(iP30);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465509020789L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);

  }

  @Test
  public void test156() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test156"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.Server server11 = new tp2.Server();
    tp2.ITime iTime12 = server11.getTime();
    server11.update();
    tp2.IP iP14 = null;
    boolean b15 = server11.connect(iP14);
    long long16 = server11.getLastUpdate();
    java.lang.String str17 = server11.toString();
    java.lang.String str18 = server11.toString();
    java.lang.String str19 = server11.toString();
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    server20.update();
    tp2.ITime iTime23 = server20.getTime();
    long long24 = server20.getLastUpdate();
    tp2.IP iP25 = null;
    boolean b26 = server20.removeBan(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server20.removeException(iP27);
    tp2.Server server29 = new tp2.Server();
    long long30 = server29.getLastUpdate();
    server29.update();
    tp2.IP iP32 = null;
    boolean b33 = server29.removeException(iP32);
    server29.update();
    long long35 = server29.getLastUpdate();
    tp2.IP iP36 = null;
    boolean b37 = server29.connect(iP36);
    tp2.Server server38 = new tp2.Server();
    tp2.ITime iTime39 = server38.getTime();
    server38.update();
    tp2.ITime iTime41 = server38.getTime();
    server29.setTime(iTime41);
    server20.setTime(iTime41);
    server11.setTime(iTime41);
    server0.setTime(iTime41);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 1465509020793L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509020793, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509020793, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509020793, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509020793, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509020793, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509020793, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509020794L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long35 == 1465509020796L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime41);

  }

  @Test
  public void test157() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test157"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    long long10 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509020809L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509020809L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509020809L);

  }

  @Test
  public void test158() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test158"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    long long9 = server5.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server5.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server12.setTime(iTime20);
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    long long26 = server0.getLastUpdate();
    tp2.Server server27 = new tp2.Server();
    tp2.ITime iTime28 = server27.getTime();
    server27.update();
    tp2.ITime iTime30 = server27.getTime();
    tp2.Server server31 = new tp2.Server();
    long long32 = server31.getLastUpdate();
    tp2.ITime iTime33 = server31.getTime();
    server27.setTime(iTime33);
    java.lang.String str35 = server27.toString();
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.ITime iTime39 = server36.getTime();
    tp2.Server server40 = new tp2.Server();
    long long41 = server40.getLastUpdate();
    tp2.ITime iTime42 = server40.getTime();
    server36.setTime(iTime42);
    server27.setTime(iTime42);
    server0.setTime(iTime42);
    java.lang.String str46 = server0.toString();
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509020810L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long32 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "Server [lastUpdate=1465509020812, exceptions=(), bans={}]"+ "'", str35.equals("Server [lastUpdate=1465509020812, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str46.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test159() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test159"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020845L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test160() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test160"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    server15.update();
    tp2.IP iP18 = null;
    boolean b19 = server15.removeBan(iP18);
    tp2.Server server20 = new tp2.Server();
    long long21 = server20.getLastUpdate();
    server20.update();
    tp2.IP iP23 = null;
    boolean b24 = server20.removeException(iP23);
    server20.update();
    tp2.ITime iTime26 = server20.getTime();
    server15.setTime(iTime26);
    tp2.IP iP28 = null;
    boolean b29 = server15.removeException(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server15.connect(iP30);
    tp2.ITime iTime32 = server15.getTime();
    server0.setTime(iTime32);
    tp2.Server server34 = new tp2.Server();
    long long35 = server34.getLastUpdate();
    long long36 = server34.getLastUpdate();
    java.lang.String str37 = server34.toString();
    tp2.ITime iTime38 = server34.getTime();
    server0.setTime(iTime38);
    tp2.IP iP40 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b41 = server0.addException(iP40);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long35 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str37.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);

  }

  @Test
  public void test161() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test161"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.removeBan(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509020847, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509020847, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509020847, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509020847, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test162() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test162"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.connect(iP12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509020851, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509020851, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);

  }

  @Test
  public void test163() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test163"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    server0.update();
    server0.update();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    server0.update();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test164() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test164"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    java.lang.String str10 = server8.toString();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeBan(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    long long17 = server13.getLastUpdate();
    tp2.IP iP18 = null;
    boolean b19 = server13.removeBan(iP18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    tp2.IP iP22 = null;
    boolean b23 = server20.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server20.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    long long27 = server26.getLastUpdate();
    tp2.ITime iTime28 = server26.getTime();
    server20.setTime(iTime28);
    server13.setTime(iTime28);
    server8.setTime(iTime28);
    server0.setTime(iTime28);
    java.lang.String str33 = server0.toString();
    tp2.Server server34 = new tp2.Server();
    tp2.ITime iTime35 = server34.getTime();
    server34.update();
    tp2.ITime iTime37 = server34.getTime();
    tp2.IP iP38 = null;
    boolean b39 = server34.removeBan(iP38);
    server34.update();
    tp2.ITime iTime41 = server34.getTime();
    server0.setTime(iTime41);
    tp2.Server server43 = new tp2.Server();
    tp2.ITime iTime44 = server43.getTime();
    server43.update();
    tp2.ITime iTime46 = server43.getTime();
    tp2.IP iP47 = null;
    boolean b48 = server43.removeBan(iP47);
    java.lang.String str49 = server43.toString();
    java.lang.String str50 = server43.toString();
    java.lang.String str51 = server43.toString();
    java.lang.String str52 = server43.toString();
    tp2.ITime iTime53 = server43.getTime();
    server0.setTime(iTime53);
    tp2.IP iP55 = null;
    boolean b56 = server0.connect(iP55);
    tp2.IP iP57 = null;
    boolean b58 = server0.removeException(iP57);
    tp2.IP iP59 = null;
    boolean b60 = server0.connect(iP59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 1465509020857L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "Server [lastUpdate=1465509020856, exceptions=(), bans={}]"+ "'", str33.equals("Server [lastUpdate=1465509020856, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "Server [lastUpdate=1465509020858, exceptions=(), bans={}]"+ "'", str49.equals("Server [lastUpdate=1465509020858, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "Server [lastUpdate=1465509020858, exceptions=(), bans={}]"+ "'", str50.equals("Server [lastUpdate=1465509020858, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "Server [lastUpdate=1465509020858, exceptions=(), bans={}]"+ "'", str51.equals("Server [lastUpdate=1465509020858, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "Server [lastUpdate=1465509020858, exceptions=(), bans={}]"+ "'", str52.equals("Server [lastUpdate=1465509020858, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);

  }

  @Test
  public void test165() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test165"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.ITime iTime12 = server0.getTime();
    long long13 = server0.getLastUpdate();
    tp2.IP iP14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = server0.addException(iP14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509020881L);

  }

  @Test
  public void test166() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test166"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    server0.update();
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    tp2.ITime iTime18 = server16.getTime();
    tp2.IP iP19 = null;
    boolean b20 = server16.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server16.removeBan(iP21);
    tp2.ITime iTime23 = server16.getTime();
    server0.setTime(iTime23);
    java.lang.String str25 = server0.toString();
    server0.update();
    tp2.ITime iTime27 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Server [lastUpdate=1465509020882, exceptions=(), bans={}]"+ "'", str25.equals("Server [lastUpdate=1465509020882, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);

  }

  @Test
  public void test167() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test167"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.IP iP12 = null;
    boolean b13 = server9.connect(iP12);
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server14.removeException(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server14.connect(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server14.removeException(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server14.connect(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server14.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    tp2.ITime iTime27 = server26.getTime();
    server26.update();
    tp2.ITime iTime29 = server26.getTime();
    server14.setTime(iTime29);
    server9.setTime(iTime29);
    tp2.IP iP32 = null;
    boolean b33 = server9.removeException(iP32);
    tp2.ITime iTime34 = server9.getTime();
    server0.setTime(iTime34);
    long long36 = server0.getLastUpdate();
    tp2.ITime iTime37 = server0.getTime();
    long long38 = server0.getLastUpdate();
    tp2.Server server39 = new tp2.Server();
    long long40 = server39.getLastUpdate();
    server39.update();
    tp2.IP iP42 = null;
    boolean b43 = server39.removeException(iP42);
    server39.update();
    server39.update();
    server39.update();
    tp2.IP iP47 = null;
    boolean b48 = server39.removeBan(iP47);
    tp2.IP iP49 = null;
    boolean b50 = server39.removeBan(iP49);
    tp2.ITime iTime51 = server39.getTime();
    tp2.Server server52 = new tp2.Server();
    tp2.ITime iTime53 = server52.getTime();
    tp2.IP iP54 = null;
    boolean b55 = server52.connect(iP54);
    tp2.IP iP56 = null;
    boolean b57 = server52.removeException(iP56);
    long long58 = server52.getLastUpdate();
    tp2.IP iP59 = null;
    boolean b60 = server52.removeBan(iP59);
    tp2.Server server61 = new tp2.Server();
    long long62 = server61.getLastUpdate();
    tp2.IP iP63 = null;
    boolean b64 = server61.removeException(iP63);
    tp2.Server server65 = new tp2.Server();
    tp2.ITime iTime66 = server65.getTime();
    server65.update();
    tp2.ITime iTime68 = server65.getTime();
    tp2.Server server69 = new tp2.Server();
    long long70 = server69.getLastUpdate();
    tp2.ITime iTime71 = server69.getTime();
    server65.setTime(iTime71);
    tp2.ITime iTime73 = server65.getTime();
    server61.setTime(iTime73);
    server52.setTime(iTime73);
    server39.setTime(iTime73);
    server0.setTime(iTime73);
    tp2.IP iP78 = null;
    boolean b79 = server0.removeBan(iP78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509020892L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 1465509020892L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long38 == 1465509020892L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long40 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long58 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long62 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long70 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == false);

  }

  @Test
  public void test168() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test168"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509020942L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test169() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test169"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeException(iP23);
    tp2.ITime iTime25 = server0.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    tp2.Server server28 = new tp2.Server();
    long long29 = server28.getLastUpdate();
    server28.update();
    tp2.IP iP31 = null;
    boolean b32 = server28.removeBan(iP31);
    tp2.Server server33 = new tp2.Server();
    long long34 = server33.getLastUpdate();
    server33.update();
    tp2.IP iP36 = null;
    boolean b37 = server33.removeException(iP36);
    server33.update();
    tp2.ITime iTime39 = server33.getTime();
    server28.setTime(iTime39);
    long long41 = server28.getLastUpdate();
    tp2.ITime iTime42 = server28.getTime();
    server0.setTime(iTime42);
    tp2.Server server44 = new tp2.Server();
    long long45 = server44.getLastUpdate();
    tp2.ITime iTime46 = server44.getTime();
    tp2.IP iP47 = null;
    boolean b48 = server44.removeBan(iP47);
    tp2.Server server49 = new tp2.Server();
    long long50 = server49.getLastUpdate();
    server49.update();
    tp2.IP iP52 = null;
    boolean b53 = server49.removeBan(iP52);
    tp2.Server server54 = new tp2.Server();
    tp2.ITime iTime55 = server54.getTime();
    server54.update();
    tp2.ITime iTime57 = server54.getTime();
    server49.setTime(iTime57);
    server44.setTime(iTime57);
    tp2.ITime iTime60 = server44.getTime();
    server0.setTime(iTime60);
    tp2.IP iP62 = null;
    boolean b63 = server0.connect(iP62);
    tp2.IP iP64 = null;
    boolean b65 = server0.connect(iP64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long34 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 1465509020946L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long45 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long50 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);

  }

  @Test
  public void test170() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test170"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.ITime iTime2 = server0.getTime();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test171() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test171"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    java.lang.String str15 = server0.toString();
    tp2.IP iP16 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b17 = server0.addException(iP16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test172() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test172"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.ITime iTime15 = server0.getTime();
    tp2.ITime iTime16 = server0.getTime();
    tp2.IP iP17 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = server0.addException(iP17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509020987L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);

  }

  @Test
  public void test173() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test173"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    long long12 = server10.getLastUpdate();
    java.lang.String str13 = server10.toString();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server14.update();
    tp2.ITime iTime17 = server14.getTime();
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server14.setTime(iTime20);
    tp2.IP iP22 = null;
    boolean b23 = server14.connect(iP22);
    long long24 = server14.getLastUpdate();
    tp2.ITime iTime25 = server14.getTime();
    server10.setTime(iTime25);
    server0.setTime(iTime25);
    java.lang.String str28 = server0.toString();
    tp2.IP iP29 = null;
    boolean b30 = server0.removeBan(iP29);
    java.lang.String str31 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509020988L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509020989, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509020989, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509020989L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "Server [lastUpdate=1465509020989, exceptions=(), bans={}]"+ "'", str28.equals("Server [lastUpdate=1465509020989, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "Server [lastUpdate=1465509020989, exceptions=(), bans={}]"+ "'", str31.equals("Server [lastUpdate=1465509020989, exceptions=(), bans={}]"));

  }

  @Test
  public void test174() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test174"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    long long12 = server0.getLastUpdate();
    long long13 = server0.getLastUpdate();
    long long14 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509020997L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509020997L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509020997L);

  }

  @Test
  public void test175() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test175"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.ITime iTime13 = null;
    server0.setTime(iTime13);
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509020999L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test176() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test176"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);

  }

  @Test
  public void test177() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test177"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    java.lang.String str13 = server0.toString();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.connect(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server0.connect(iP18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509021000L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509021000, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509021000, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test178() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test178"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    long long16 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);

  }

  @Test
  public void test179() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test179"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test180() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test180"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.ITime iTime2 = server0.getTime();
    tp2.Server server3 = new tp2.Server();
    long long4 = server3.getLastUpdate();
    server3.update();
    tp2.IP iP6 = null;
    boolean b7 = server3.removeException(iP6);
    server3.update();
    server3.update();
    server3.update();
    tp2.Server server11 = new tp2.Server();
    long long12 = server11.getLastUpdate();
    java.lang.String str13 = server11.toString();
    tp2.IP iP14 = null;
    boolean b15 = server11.removeBan(iP14);
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    long long20 = server16.getLastUpdate();
    tp2.IP iP21 = null;
    boolean b22 = server16.removeBan(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    tp2.IP iP25 = null;
    boolean b26 = server23.removeException(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server23.connect(iP27);
    tp2.Server server29 = new tp2.Server();
    long long30 = server29.getLastUpdate();
    tp2.ITime iTime31 = server29.getTime();
    server23.setTime(iTime31);
    server16.setTime(iTime31);
    server11.setTime(iTime31);
    server3.setTime(iTime31);
    java.lang.String str36 = server3.toString();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    server37.update();
    tp2.ITime iTime40 = server37.getTime();
    tp2.IP iP41 = null;
    boolean b42 = server37.removeBan(iP41);
    server37.update();
    tp2.ITime iTime44 = server37.getTime();
    server3.setTime(iTime44);
    tp2.Server server46 = new tp2.Server();
    tp2.ITime iTime47 = server46.getTime();
    server46.update();
    tp2.ITime iTime49 = server46.getTime();
    tp2.IP iP50 = null;
    boolean b51 = server46.removeBan(iP50);
    java.lang.String str52 = server46.toString();
    java.lang.String str53 = server46.toString();
    java.lang.String str54 = server46.toString();
    java.lang.String str55 = server46.toString();
    tp2.ITime iTime56 = server46.getTime();
    server3.setTime(iTime56);
    server0.setTime(iTime56);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465509021012L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "Server [lastUpdate=1465509021011, exceptions=(), bans={}]"+ "'", str36.equals("Server [lastUpdate=1465509021011, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "Server [lastUpdate=1465509021013, exceptions=(), bans={}]"+ "'", str52.equals("Server [lastUpdate=1465509021013, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "Server [lastUpdate=1465509021013, exceptions=(), bans={}]"+ "'", str53.equals("Server [lastUpdate=1465509021013, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "Server [lastUpdate=1465509021013, exceptions=(), bans={}]"+ "'", str54.equals("Server [lastUpdate=1465509021013, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "Server [lastUpdate=1465509021013, exceptions=(), bans={}]"+ "'", str55.equals("Server [lastUpdate=1465509021013, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);

  }

  @Test
  public void test181() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test181"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);

  }

  @Test
  public void test182() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test182"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test183() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test183"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.ITime iTime21 = server13.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    tp2.ITime iTime27 = server25.getTime();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeBan(iP28);
    tp2.ITime iTime30 = server25.getTime();
    server0.setTime(iTime30);
    server0.update();
    tp2.Server server33 = new tp2.Server();
    tp2.ITime iTime34 = server33.getTime();
    tp2.IP iP35 = null;
    boolean b36 = server33.removeException(iP35);
    tp2.IP iP37 = null;
    boolean b38 = server33.connect(iP37);
    tp2.IP iP39 = null;
    boolean b40 = server33.removeException(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server33.connect(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server33.connect(iP43);
    tp2.Server server45 = new tp2.Server();
    tp2.ITime iTime46 = server45.getTime();
    tp2.Server server47 = new tp2.Server();
    tp2.ITime iTime48 = server47.getTime();
    server45.setTime(iTime48);
    server33.setTime(iTime48);
    server0.setTime(iTime48);
    tp2.IP iP52 = null;
    boolean b53 = server0.removeException(iP52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);

  }

  @Test
  public void test184() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test184"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test185() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test185"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server0.removeException(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server0.connect(iP23);
    long long25 = server0.getLastUpdate();
    java.lang.String str26 = server0.toString();
    tp2.ITime iTime27 = server0.getTime();
    tp2.IP iP28 = null;
    boolean b29 = server0.removeBan(iP28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long25 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str26.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);

  }

  @Test
  public void test186() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test186"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509021095L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509021095L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509021095, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509021095, exceptions=(), bans={}]"));

  }

  @Test
  public void test187() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test187"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server13.removeException(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server13.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server13.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server13.connect(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server13.connect(iP23);
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    server25.update();
    tp2.ITime iTime28 = server25.getTime();
    server13.setTime(iTime28);
    server8.setTime(iTime28);
    tp2.IP iP31 = null;
    boolean b32 = server8.removeException(iP31);
    tp2.ITime iTime33 = server8.getTime();
    server0.setTime(iTime33);
    tp2.ITime iTime35 = server0.getTime();
    tp2.IP iP36 = null;
    boolean b37 = server0.removeException(iP36);
    server0.update();
    tp2.IP iP39 = null;
    boolean b40 = server0.removeException(iP39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509021096, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509021096, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);

  }

  @Test
  public void test188() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test188"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.Server server7 = new tp2.Server();
    long long8 = server7.getLastUpdate();
    server7.update();
    tp2.IP iP10 = null;
    boolean b11 = server7.removeException(iP10);
    server7.update();
    server7.update();
    server7.update();
    tp2.ITime iTime15 = server7.getTime();
    server0.setTime(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);

  }

  @Test
  public void test189() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test189"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    long long21 = server0.getLastUpdate();
    long long22 = server0.getLastUpdate();
    tp2.IP iP23 = null;
    boolean b24 = server0.removeException(iP23);
    java.lang.String str25 = server0.toString();
    java.lang.String str26 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str25.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str26.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test190() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test190"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    long long8 = server0.getLastUpdate();
    tp2.ITime iTime9 = server0.getTime();
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509021118L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509021118, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509021118, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509021118L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

  @Test
  public void test191() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test191"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    server0.update();
    java.lang.String str12 = server0.toString();
    tp2.ITime iTime13 = server0.getTime();
    tp2.IP iP14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = server0.addException(iP14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509021124L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509021124, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509021124, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

  @Test
  public void test192() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test192"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    long long13 = server0.getLastUpdate();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server14.removeException(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server14.connect(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server14.removeException(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server14.connect(iP22);
    java.lang.String str24 = server14.toString();
    long long25 = server14.getLastUpdate();
    tp2.Server server26 = new tp2.Server();
    tp2.ITime iTime27 = server26.getTime();
    tp2.IP iP28 = null;
    boolean b29 = server26.removeException(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server26.connect(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server26.removeException(iP32);
    java.lang.String str34 = server26.toString();
    long long35 = server26.getLastUpdate();
    tp2.ITime iTime36 = server26.getTime();
    server14.setTime(iTime36);
    server0.setTime(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509021125, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509021125, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509021125L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long25 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str34.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long35 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);

  }

  @Test
  public void test193() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test193"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    java.lang.String str11 = server9.toString();
    server9.update();
    tp2.IP iP13 = null;
    boolean b14 = server9.removeBan(iP13);
    server9.update();
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    tp2.IP iP18 = null;
    boolean b19 = server16.removeException(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server16.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server16.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server16.connect(iP24);
    java.lang.String str26 = server16.toString();
    tp2.ITime iTime27 = server16.getTime();
    server9.setTime(iTime27);
    server0.setTime(iTime27);
    tp2.ITime iTime30 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str26.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);

  }

  @Test
  public void test194() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test194"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    long long18 = server12.getLastUpdate();
    server12.update();
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    server20.update();
    tp2.ITime iTime23 = server20.getTime();
    tp2.IP iP24 = null;
    boolean b25 = server20.removeBan(iP24);
    tp2.Server server26 = new tp2.Server();
    long long27 = server26.getLastUpdate();
    tp2.ITime iTime28 = server26.getTime();
    server20.setTime(iTime28);
    server12.setTime(iTime28);
    server0.setTime(iTime28);
    tp2.IP iP32 = null;
    boolean b33 = server0.removeException(iP32);
    tp2.IP iP34 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b35 = server0.addException(iP34);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509021149L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509021149L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);

  }

  @Test
  public void test195() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test195"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    long long2 = server0.getLastUpdate();
    java.lang.String str3 = server0.toString();
    server0.update();
    java.lang.String str5 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long2 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Server [lastUpdate=1465509021153, exceptions=(), bans={}]"+ "'", str5.equals("Server [lastUpdate=1465509021153, exceptions=(), bans={}]"));

  }

  @Test
  public void test196() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test196"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    server0.update();
    java.lang.String str14 = server0.toString();
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509021154L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509021154, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509021154, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465509021155, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465509021155, exceptions=(), bans={}]"));

  }

  @Test
  public void test197() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test197"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.ITime iTime2 = server0.getTime();
    tp2.Server server3 = new tp2.Server();
    long long4 = server3.getLastUpdate();
    server3.update();
    tp2.IP iP6 = null;
    boolean b7 = server3.removeException(iP6);
    server3.update();
    server3.update();
    server3.update();
    tp2.Server server11 = new tp2.Server();
    long long12 = server11.getLastUpdate();
    java.lang.String str13 = server11.toString();
    tp2.IP iP14 = null;
    boolean b15 = server11.removeBan(iP14);
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    long long20 = server16.getLastUpdate();
    tp2.IP iP21 = null;
    boolean b22 = server16.removeBan(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    tp2.IP iP25 = null;
    boolean b26 = server23.removeException(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server23.connect(iP27);
    tp2.Server server29 = new tp2.Server();
    long long30 = server29.getLastUpdate();
    tp2.ITime iTime31 = server29.getTime();
    server23.setTime(iTime31);
    server16.setTime(iTime31);
    server11.setTime(iTime31);
    server3.setTime(iTime31);
    java.lang.String str36 = server3.toString();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    server37.update();
    tp2.ITime iTime40 = server37.getTime();
    tp2.IP iP41 = null;
    boolean b42 = server37.removeBan(iP41);
    server37.update();
    tp2.ITime iTime44 = server37.getTime();
    server3.setTime(iTime44);
    tp2.Server server46 = new tp2.Server();
    tp2.ITime iTime47 = server46.getTime();
    server46.update();
    tp2.ITime iTime49 = server46.getTime();
    tp2.IP iP50 = null;
    boolean b51 = server46.removeBan(iP50);
    java.lang.String str52 = server46.toString();
    java.lang.String str53 = server46.toString();
    java.lang.String str54 = server46.toString();
    java.lang.String str55 = server46.toString();
    tp2.ITime iTime56 = server46.getTime();
    server3.setTime(iTime56);
    server0.setTime(iTime56);
    tp2.IP iP59 = null;
    boolean b60 = server0.removeException(iP59);
    long long61 = server0.getLastUpdate();
    long long62 = server0.getLastUpdate();
    tp2.IP iP63 = null;
    boolean b64 = server0.removeException(iP63);
    tp2.Server server65 = new tp2.Server();
    tp2.ITime iTime66 = server65.getTime();
    tp2.IP iP67 = null;
    boolean b68 = server65.removeException(iP67);
    tp2.IP iP69 = null;
    boolean b70 = server65.connect(iP69);
    tp2.IP iP71 = null;
    boolean b72 = server65.removeException(iP71);
    java.lang.String str73 = server65.toString();
    java.lang.String str74 = server65.toString();
    tp2.ITime iTime75 = server65.getTime();
    server0.setTime(iTime75);
    tp2.IP iP77 = null;
    boolean b78 = server0.removeBan(iP77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465509021175L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "Server [lastUpdate=1465509021174, exceptions=(), bans={}]"+ "'", str36.equals("Server [lastUpdate=1465509021174, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "Server [lastUpdate=1465509021176, exceptions=(), bans={}]"+ "'", str52.equals("Server [lastUpdate=1465509021176, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "Server [lastUpdate=1465509021176, exceptions=(), bans={}]"+ "'", str53.equals("Server [lastUpdate=1465509021176, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "Server [lastUpdate=1465509021176, exceptions=(), bans={}]"+ "'", str54.equals("Server [lastUpdate=1465509021176, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "Server [lastUpdate=1465509021176, exceptions=(), bans={}]"+ "'", str55.equals("Server [lastUpdate=1465509021176, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long61 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long62 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str73.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str74.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);

  }

  @Test
  public void test198() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test198"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    server6.update();
    tp2.ITime iTime9 = server6.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server6.removeBan(iP10);
    server6.update();
    tp2.ITime iTime13 = server6.getTime();
    server0.setTime(iTime13);
    long long15 = server0.getLastUpdate();
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    tp2.Server server20 = new tp2.Server();
    long long21 = server20.getLastUpdate();
    tp2.ITime iTime22 = server20.getTime();
    server16.setTime(iTime22);
    long long24 = server16.getLastUpdate();
    java.lang.String str25 = server16.toString();
    tp2.ITime iTime26 = server16.getTime();
    server0.setTime(iTime26);
    tp2.IP iP28 = null;
    boolean b29 = server0.connect(iP28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509021202L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509021202L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509021202L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Server [lastUpdate=1465509021202, exceptions=(), bans={}]"+ "'", str25.equals("Server [lastUpdate=1465509021202, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);

  }

  @Test
  public void test199() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test199"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeException(iP11);
    server8.update();
    tp2.ITime iTime14 = server8.getTime();
    server0.setTime(iTime14);
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    tp2.Server server20 = new tp2.Server();
    long long21 = server20.getLastUpdate();
    tp2.ITime iTime22 = server20.getTime();
    server16.setTime(iTime22);
    tp2.IP iP24 = null;
    boolean b25 = server16.connect(iP24);
    long long26 = server16.getLastUpdate();
    java.lang.String str27 = server16.toString();
    tp2.ITime iTime28 = server16.getTime();
    server0.setTime(iTime28);
    java.lang.String str30 = server0.toString();
    tp2.IP iP31 = null;
    boolean b32 = server0.connect(iP31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 1465509021212L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Server [lastUpdate=1465509021212, exceptions=(), bans={}]"+ "'", str27.equals("Server [lastUpdate=1465509021212, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str30.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);

  }

  @Test
  public void test200() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test200"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    long long19 = server0.getLastUpdate();
    tp2.IP iP20 = null;
    boolean b21 = server0.removeException(iP20);
    long long22 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509021219L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509021219L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 1465509021219L);

  }

  @Test
  public void test201() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test201"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    tp2.ITime iTime11 = server0.getTime();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    server12.update();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeException(iP15);
    server12.update();
    long long18 = server12.getLastUpdate();
    tp2.IP iP19 = null;
    boolean b20 = server12.connect(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server12.connect(iP21);
    tp2.ITime iTime23 = server12.getTime();
    server0.setTime(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509021221L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);

  }

  @Test
  public void test202() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test202"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    server0.update();
    long long9 = server0.getLastUpdate();
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509021224L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test203() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test203"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    java.lang.String str16 = server12.toString();
    tp2.IP iP17 = null;
    boolean b18 = server12.removeException(iP17);
    server12.update();
    tp2.IP iP20 = null;
    boolean b21 = server12.removeBan(iP20);
    tp2.ITime iTime22 = server12.getTime();
    server0.setTime(iTime22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    server24.update();
    tp2.ITime iTime27 = server24.getTime();
    tp2.IP iP28 = null;
    boolean b29 = server24.removeBan(iP28);
    java.lang.String str30 = server24.toString();
    java.lang.String str31 = server24.toString();
    server24.update();
    tp2.ITime iTime33 = server24.getTime();
    server0.setTime(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509021225, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509021225, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Server [lastUpdate=1465509021227, exceptions=(), bans={}]"+ "'", str30.equals("Server [lastUpdate=1465509021227, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "Server [lastUpdate=1465509021227, exceptions=(), bans={}]"+ "'", str31.equals("Server [lastUpdate=1465509021227, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);

  }

  @Test
  public void test204() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test204"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    tp2.ITime iTime11 = server0.getTime();
    long long12 = server0.getLastUpdate();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509021233L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509021233L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test205() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test205"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeException(iP16);
    tp2.ITime iTime18 = server0.getTime();
    long long19 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);

  }

  @Test
  public void test206() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test206"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    server25.update();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeException(iP28);
    server25.update();
    long long31 = server25.getLastUpdate();
    tp2.IP iP32 = null;
    boolean b33 = server25.removeBan(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server25.removeBan(iP34);
    long long36 = server25.getLastUpdate();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    tp2.IP iP39 = null;
    boolean b40 = server37.removeException(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server37.connect(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server37.removeException(iP43);
    tp2.IP iP45 = null;
    boolean b46 = server37.connect(iP45);
    tp2.IP iP47 = null;
    boolean b48 = server37.connect(iP47);
    tp2.Server server49 = new tp2.Server();
    tp2.ITime iTime50 = server49.getTime();
    server49.update();
    tp2.ITime iTime52 = server49.getTime();
    server37.setTime(iTime52);
    server25.setTime(iTime52);
    server0.setTime(iTime52);
    tp2.ITime iTime56 = server0.getTime();
    long long57 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465509021238, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465509021238, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509021241L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 1465509021241L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long57 == 1465509021238L);

  }

  @Test
  public void test207() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test207"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    java.lang.String str11 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509021254, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509021254, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509021254, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509021254, exceptions=(), bans={}]"));

  }

  @Test
  public void test208() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test208"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server0.removeException(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeBan(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server0.connect(iP25);
    tp2.ITime iTime27 = server0.getTime();
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    server28.update();
    tp2.ITime iTime31 = server28.getTime();
    tp2.IP iP32 = null;
    boolean b33 = server28.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server28.connect(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server28.removeException(iP36);
    tp2.Server server38 = new tp2.Server();
    tp2.ITime iTime39 = server38.getTime();
    tp2.IP iP40 = null;
    boolean b41 = server38.removeException(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server38.connect(iP42);
    tp2.IP iP44 = null;
    boolean b45 = server38.removeException(iP44);
    java.lang.String str46 = server38.toString();
    java.lang.String str47 = server38.toString();
    tp2.ITime iTime48 = server38.getTime();
    tp2.Server server49 = new tp2.Server();
    tp2.ITime iTime50 = server49.getTime();
    server49.update();
    tp2.ITime iTime52 = server49.getTime();
    tp2.Server server53 = new tp2.Server();
    long long54 = server53.getLastUpdate();
    tp2.ITime iTime55 = server53.getTime();
    server49.setTime(iTime55);
    tp2.IP iP57 = null;
    boolean b58 = server49.connect(iP57);
    long long59 = server49.getLastUpdate();
    java.lang.String str60 = server49.toString();
    tp2.ITime iTime61 = server49.getTime();
    java.lang.String str62 = server49.toString();
    tp2.ITime iTime63 = server49.getTime();
    server38.setTime(iTime63);
    server28.setTime(iTime63);
    server0.setTime(iTime63);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str46.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str47.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long54 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long59 == 1465509021257L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "Server [lastUpdate=1465509021257, exceptions=(), bans={}]"+ "'", str60.equals("Server [lastUpdate=1465509021257, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "Server [lastUpdate=1465509021257, exceptions=(), bans={}]"+ "'", str62.equals("Server [lastUpdate=1465509021257, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime63);

  }

  @Test
  public void test209() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test209"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    java.lang.String str10 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509021291, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509021291, exceptions=(), bans={}]"));

  }

  @Test
  public void test210() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test210"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    server0.update();
    java.lang.String str16 = server0.toString();
    tp2.IP iP17 = null;
    boolean b18 = server0.removeBan(iP17);
    java.lang.String str19 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509021292L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509021292, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509021292, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509021292, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509021292, exceptions=(), bans={}]"));

  }

  @Test
  public void test211() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test211"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeException(iP11);
    server8.update();
    tp2.ITime iTime14 = server8.getTime();
    server0.setTime(iTime14);
    server0.update();
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);

  }

  @Test
  public void test212() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test212"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.ITime iTime7 = null;
    server0.setTime(iTime7);
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test213() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test213"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    server0.update();
    tp2.ITime iTime9 = server0.getTime();
    server0.update();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    java.lang.String str13 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509021305, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509021305, exceptions=(), bans={}]"));

  }

  @Test
  public void test214() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test214"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    server0.setTime(iTime15);
    java.lang.String str17 = server0.toString();
    tp2.IP iP18 = null;
    boolean b19 = server0.removeException(iP18);
    long long20 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP22 = null;
    boolean b23 = server0.connect(iP22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);

  }

  @Test
  public void test215() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test215"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.Server server3 = new tp2.Server();
    tp2.ITime iTime4 = server3.getTime();
    server3.update();
    tp2.ITime iTime6 = server3.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server3.removeBan(iP7);
    java.lang.String str9 = server3.toString();
    java.lang.String str10 = server3.toString();
    tp2.ITime iTime11 = server3.getTime();
    tp2.ITime iTime12 = server3.getTime();
    long long13 = server3.getLastUpdate();
    tp2.Server server14 = new tp2.Server();
    long long15 = server14.getLastUpdate();
    tp2.ITime iTime16 = server14.getTime();
    server3.setTime(iTime16);
    server0.setTime(iTime16);
    java.lang.String str19 = server0.toString();
    tp2.IP iP20 = null;
    boolean b21 = server0.connect(iP20);
    tp2.ITime iTime22 = server0.getTime();
    tp2.IP iP23 = null;
    boolean b24 = server0.connect(iP23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509021314, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509021314, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509021314, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509021314, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509021314L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);

  }

  @Test
  public void test216() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test216"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.ITime iTime10 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509021320, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509021320, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509021320, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509021320, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);

  }

  @Test
  public void test217() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test217"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeBan(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server5.setTime(iTime13);
    server0.setTime(iTime13);
    tp2.ITime iTime16 = server0.getTime();
    tp2.ITime iTime17 = server0.getTime();
    java.lang.String str18 = server0.toString();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test218() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test218"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    tp2.ITime iTime11 = server5.getTime();
    server0.setTime(iTime11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    long long15 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509021326L);

  }

  @Test
  public void test219() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test219"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    server0.update();
    java.lang.String str14 = server0.toString();
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    java.lang.String str17 = server0.toString();
    tp2.IP iP18 = null;
    boolean b19 = server0.removeException(iP18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509021333L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509021333, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509021333, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465509021333, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465509021333, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509021333, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509021333, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test220() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test220"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    java.lang.String str3 = server0.toString();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);

  }

  @Test
  public void test221() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test221"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    long long2 = server0.getLastUpdate();
    java.lang.String str3 = server0.toString();
    tp2.ITime iTime4 = server0.getTime();
    long long5 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long2 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);

  }

  @Test
  public void test222() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test222"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    java.lang.String str28 = server0.toString();
    tp2.Server server29 = new tp2.Server();
    tp2.ITime iTime30 = server29.getTime();
    server29.update();
    tp2.ITime iTime32 = server29.getTime();
    tp2.IP iP33 = null;
    boolean b34 = server29.removeBan(iP33);
    server29.update();
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    tp2.Server server38 = new tp2.Server();
    tp2.ITime iTime39 = server38.getTime();
    server36.setTime(iTime39);
    server36.update();
    java.lang.String str42 = server36.toString();
    tp2.ITime iTime43 = server36.getTime();
    server29.setTime(iTime43);
    server0.setTime(iTime43);
    tp2.ITime iTime46 = server0.getTime();
    tp2.IP iP47 = null;
    boolean b48 = server0.removeException(iP47);
    long long49 = server0.getLastUpdate();
    tp2.IP iP50 = null;
    boolean b51 = server0.connect(iP50);
    tp2.ITime iTime52 = server0.getTime();
    tp2.Server server53 = new tp2.Server();
    long long54 = server53.getLastUpdate();
    server53.update();
    tp2.IP iP56 = null;
    boolean b57 = server53.removeException(iP56);
    server53.update();
    long long59 = server53.getLastUpdate();
    tp2.IP iP60 = null;
    boolean b61 = server53.removeBan(iP60);
    tp2.IP iP62 = null;
    boolean b63 = server53.removeBan(iP62);
    server53.update();
    server53.update();
    tp2.IP iP66 = null;
    boolean b67 = server53.removeBan(iP66);
    tp2.ITime iTime68 = server53.getTime();
    server0.setTime(iTime68);
    long long70 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "Server [lastUpdate=1465509021337, exceptions=(), bans={}]"+ "'", str28.equals("Server [lastUpdate=1465509021337, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "Server [lastUpdate=1465509021340, exceptions=(), bans={}]"+ "'", str42.equals("Server [lastUpdate=1465509021340, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long49 == 1465509021337L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long54 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long59 == 1465509021340L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long70 == 1465509021337L);

  }

  @Test
  public void test223() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test223"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.IP iP16 = null;
    boolean b17 = server13.connect(iP16);
    long long18 = server13.getLastUpdate();
    tp2.ITime iTime19 = server13.getTime();
    server0.setTime(iTime19);
    long long21 = server0.getLastUpdate();
    tp2.IP iP22 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b23 = server0.addException(iP22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509021361L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509021361L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509021361L);

  }

  @Test
  public void test224() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test224"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.ITime iTime12 = server0.getTime();
    java.lang.String str13 = server0.toString();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509021362, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509021362, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509021362, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509021362, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test225() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test225"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    tp2.ITime iTime14 = server12.getTime();
    server8.setTime(iTime14);
    java.lang.String str16 = server8.toString();
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    tp2.Server server21 = new tp2.Server();
    long long22 = server21.getLastUpdate();
    tp2.ITime iTime23 = server21.getTime();
    server17.setTime(iTime23);
    server8.setTime(iTime23);
    server0.setTime(iTime23);
    tp2.Server server27 = new tp2.Server();
    tp2.ITime iTime28 = server27.getTime();
    server27.update();
    tp2.IP iP30 = null;
    boolean b31 = server27.connect(iP30);
    long long32 = server27.getLastUpdate();
    tp2.Server server33 = new tp2.Server();
    tp2.ITime iTime34 = server33.getTime();
    server33.update();
    tp2.ITime iTime36 = server33.getTime();
    tp2.IP iP37 = null;
    boolean b38 = server33.removeBan(iP37);
    server33.update();
    tp2.ITime iTime40 = server33.getTime();
    server27.setTime(iTime40);
    server0.setTime(iTime40);
    server0.update();
    java.lang.String str44 = server0.toString();
    tp2.IP iP45 = null;
    boolean b46 = server0.removeBan(iP45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509021366, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509021366, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long32 == 1465509021367L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "Server [lastUpdate=1465509021367, exceptions=(), bans={}]"+ "'", str44.equals("Server [lastUpdate=1465509021367, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);

  }

  @Test
  public void test226() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test226"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.ITime iTime8 = server0.getTime();
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.ITime iTime12 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509021385, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509021385, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);

  }

  @Test
  public void test227() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test227"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    long long12 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeException(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test228() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test228"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    java.lang.String str4 = server0.toString();
    tp2.IP iP5 = null;
    boolean b6 = server0.connect(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=1465509021389, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=1465509021389, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);

  }

  @Test
  public void test229() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test229"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    java.lang.String str13 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509021400, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509021400, exceptions=(), bans={}]"));

  }

  @Test
  public void test230() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test230"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    server0.update();
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509021401L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509021401, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509021401, exceptions=(), bans={}]"));

  }

  @Test
  public void test231() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test231"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509021402L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509021402, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509021402, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509021402, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509021402, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509021402, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509021402, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test232() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test232"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    long long11 = server0.getLastUpdate();
    tp2.ITime iTime12 = server0.getTime();
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);

  }

  @Test
  public void test233() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test233"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    long long4 = server0.getLastUpdate();
    java.lang.String str5 = server0.toString();
    java.lang.String str6 = server0.toString();
    server0.update();
    long long8 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str5.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509021410L);

  }

  @Test
  public void test234() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test234"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    server0.update();
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    server9.update();
    tp2.IP iP12 = null;
    boolean b13 = server9.removeException(iP12);
    server9.update();
    long long15 = server9.getLastUpdate();
    server9.update();
    tp2.IP iP17 = null;
    boolean b18 = server9.removeBan(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server9.connect(iP19);
    tp2.ITime iTime21 = server9.getTime();
    server0.setTime(iTime21);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509021411L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509021411, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509021411, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509021411L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);

  }

  @Test
  public void test235() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test235"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    long long7 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509021418L);

  }

  @Test
  public void test236() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test236"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    server0.update();
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    long long8 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509021419L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test237() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test237"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    long long7 = server0.getLastUpdate();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.Server server11 = new tp2.Server();
    tp2.ITime iTime12 = server11.getTime();
    server11.update();
    tp2.ITime iTime14 = server11.getTime();
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    tp2.ITime iTime17 = server15.getTime();
    server11.setTime(iTime17);
    tp2.IP iP19 = null;
    boolean b20 = server11.connect(iP19);
    long long21 = server11.getLastUpdate();
    java.lang.String str22 = server11.toString();
    tp2.Server server23 = new tp2.Server();
    long long24 = server23.getLastUpdate();
    java.lang.String str25 = server23.toString();
    tp2.IP iP26 = null;
    boolean b27 = server23.removeBan(iP26);
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    server28.update();
    tp2.ITime iTime31 = server28.getTime();
    long long32 = server28.getLastUpdate();
    tp2.IP iP33 = null;
    boolean b34 = server28.removeBan(iP33);
    tp2.Server server35 = new tp2.Server();
    tp2.ITime iTime36 = server35.getTime();
    tp2.IP iP37 = null;
    boolean b38 = server35.removeException(iP37);
    tp2.IP iP39 = null;
    boolean b40 = server35.connect(iP39);
    tp2.Server server41 = new tp2.Server();
    long long42 = server41.getLastUpdate();
    tp2.ITime iTime43 = server41.getTime();
    server35.setTime(iTime43);
    server28.setTime(iTime43);
    server23.setTime(iTime43);
    server11.setTime(iTime43);
    server11.update();
    long long49 = server11.getLastUpdate();
    tp2.ITime iTime50 = server11.getTime();
    server0.setTime(iTime50);
    server0.update();
    tp2.ITime iTime53 = server0.getTime();
    tp2.IP iP54 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b55 = server0.addException(iP54);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509021426L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509021426L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Server [lastUpdate=1465509021426, exceptions=(), bans={}]"+ "'", str22.equals("Server [lastUpdate=1465509021426, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str25.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long32 == 1465509021429L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long42 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long49 == 1465509021430L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime53);

  }

  @Test
  public void test238() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test238"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    server0.update();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.ITime iTime13 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509021430, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509021430, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509021430, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509021430, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

  @Test
  public void test239() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test239"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    server0.update();
    java.lang.String str14 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509021464L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509021464, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509021464, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509021464, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509021464, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509021464, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509021464, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465509021464, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465509021464, exceptions=(), bans={}]"));

  }

  @Test
  public void test240() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test240"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    server0.update();
    long long11 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509021466, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509021466, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509021466, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509021466, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509021466L);

  }

  @Test
  public void test241() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test241"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    server0.update();
    tp2.ITime iTime9 = server0.getTime();
    server0.update();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.IP iP13 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b14 = server0.addException(iP13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test242() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test242"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    server0.update();
    java.lang.String str8 = server0.toString();
    long long9 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509021468L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509021470, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509021470, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509021470L);

  }

  @Test
  public void test243() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test243"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.ITime iTime2 = server0.getTime();
    tp2.Server server3 = new tp2.Server();
    long long4 = server3.getLastUpdate();
    server3.update();
    tp2.IP iP6 = null;
    boolean b7 = server3.removeException(iP6);
    server3.update();
    server3.update();
    server3.update();
    tp2.Server server11 = new tp2.Server();
    long long12 = server11.getLastUpdate();
    java.lang.String str13 = server11.toString();
    tp2.IP iP14 = null;
    boolean b15 = server11.removeBan(iP14);
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    long long20 = server16.getLastUpdate();
    tp2.IP iP21 = null;
    boolean b22 = server16.removeBan(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    tp2.IP iP25 = null;
    boolean b26 = server23.removeException(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server23.connect(iP27);
    tp2.Server server29 = new tp2.Server();
    long long30 = server29.getLastUpdate();
    tp2.ITime iTime31 = server29.getTime();
    server23.setTime(iTime31);
    server16.setTime(iTime31);
    server11.setTime(iTime31);
    server3.setTime(iTime31);
    java.lang.String str36 = server3.toString();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    server37.update();
    tp2.ITime iTime40 = server37.getTime();
    tp2.IP iP41 = null;
    boolean b42 = server37.removeBan(iP41);
    server37.update();
    tp2.ITime iTime44 = server37.getTime();
    server3.setTime(iTime44);
    tp2.Server server46 = new tp2.Server();
    tp2.ITime iTime47 = server46.getTime();
    server46.update();
    tp2.ITime iTime49 = server46.getTime();
    tp2.IP iP50 = null;
    boolean b51 = server46.removeBan(iP50);
    java.lang.String str52 = server46.toString();
    java.lang.String str53 = server46.toString();
    java.lang.String str54 = server46.toString();
    java.lang.String str55 = server46.toString();
    tp2.ITime iTime56 = server46.getTime();
    server3.setTime(iTime56);
    server0.setTime(iTime56);
    tp2.IP iP59 = null;
    boolean b60 = server0.removeException(iP59);
    long long61 = server0.getLastUpdate();
    long long62 = server0.getLastUpdate();
    tp2.IP iP63 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b64 = server0.addException(iP63);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465509021473L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "Server [lastUpdate=1465509021472, exceptions=(), bans={}]"+ "'", str36.equals("Server [lastUpdate=1465509021472, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "Server [lastUpdate=1465509021474, exceptions=(), bans={}]"+ "'", str52.equals("Server [lastUpdate=1465509021474, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "Server [lastUpdate=1465509021474, exceptions=(), bans={}]"+ "'", str53.equals("Server [lastUpdate=1465509021474, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "Server [lastUpdate=1465509021474, exceptions=(), bans={}]"+ "'", str54.equals("Server [lastUpdate=1465509021474, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "Server [lastUpdate=1465509021474, exceptions=(), bans={}]"+ "'", str55.equals("Server [lastUpdate=1465509021474, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long61 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long62 == 0L);

  }

  @Test
  public void test244() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test244"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    tp2.ITime iTime12 = server0.getTime();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    server13.update();
    tp2.IP iP16 = null;
    boolean b17 = server13.removeException(iP16);
    server13.update();
    long long19 = server13.getLastUpdate();
    java.lang.String str20 = server13.toString();
    tp2.ITime iTime21 = server13.getTime();
    server13.update();
    java.lang.String str23 = server13.toString();
    tp2.IP iP24 = null;
    boolean b25 = server13.removeException(iP24);
    tp2.Server server26 = new tp2.Server();
    long long27 = server26.getLastUpdate();
    tp2.ITime iTime28 = server26.getTime();
    tp2.IP iP29 = null;
    boolean b30 = server26.removeBan(iP29);
    tp2.Server server31 = new tp2.Server();
    long long32 = server31.getLastUpdate();
    server31.update();
    tp2.IP iP34 = null;
    boolean b35 = server31.removeBan(iP34);
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.ITime iTime39 = server36.getTime();
    server31.setTime(iTime39);
    server26.setTime(iTime39);
    server13.setTime(iTime39);
    server0.setTime(iTime39);
    tp2.ITime iTime44 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509021478L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=1465509021478, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=1465509021478, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465509021478, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465509021478, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long32 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);

  }

  @Test
  public void test245() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test245"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509021495L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509021495, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509021495, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test246() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test246"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    tp2.ITime iTime7 = server0.getTime();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    long long12 = server8.getLastUpdate();
    tp2.IP iP13 = null;
    boolean b14 = server8.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server8.removeException(iP15);
    java.lang.String str17 = server8.toString();
    tp2.IP iP18 = null;
    boolean b19 = server8.connect(iP18);
    tp2.Server server20 = new tp2.Server();
    long long21 = server20.getLastUpdate();
    server20.update();
    tp2.IP iP23 = null;
    boolean b24 = server20.removeException(iP23);
    server20.update();
    long long26 = server20.getLastUpdate();
    tp2.IP iP27 = null;
    boolean b28 = server20.removeBan(iP27);
    tp2.IP iP29 = null;
    boolean b30 = server20.removeBan(iP29);
    long long31 = server20.getLastUpdate();
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    tp2.IP iP34 = null;
    boolean b35 = server32.removeException(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server32.connect(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server32.removeException(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server32.connect(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server32.connect(iP42);
    tp2.Server server44 = new tp2.Server();
    tp2.ITime iTime45 = server44.getTime();
    server44.update();
    tp2.ITime iTime47 = server44.getTime();
    server32.setTime(iTime47);
    server20.setTime(iTime47);
    server8.setTime(iTime47);
    server0.setTime(iTime47);
    server0.update();
    long long53 = server0.getLastUpdate();
    long long54 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509021498, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509021498, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509021498L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509021498, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509021498, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 1465509021501L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509021501L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long53 == 1465509021502L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long54 == 1465509021502L);

  }

  @Test
  public void test247() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test247"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeException(iP15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509021514L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509021514, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509021514, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509021514, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509021514, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test248() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test248"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    long long10 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509021517L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509021517, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509021517, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509021517, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509021517, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509021517, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509021517, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509021517, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509021517, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509021517L);

  }

  @Test
  public void test249() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test249"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    java.lang.String str4 = server0.toString();
    tp2.IP iP5 = null;
    boolean b6 = server0.connect(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.ITime iTime9 = server0.getTime();
    tp2.ITime iTime10 = server0.getTime();
    java.lang.String str11 = server0.toString();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=1465509021518, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=1465509021518, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509021518, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509021518, exceptions=(), bans={}]"));

  }

  @Test
  public void test250() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test250"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.ITime iTime11 = server0.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    java.lang.String str14 = server0.toString();
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    java.lang.String str19 = server17.toString();
    tp2.ITime iTime20 = server17.getTime();
    server0.setTime(iTime20);
    long long22 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);

  }

  @Test
  public void test251() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test251"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    java.lang.String str12 = server0.toString();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server0.setTime(iTime15);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509021531L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509021531, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509021531, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509021531, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509021531, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);

  }

  @Test
  public void test252() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test252"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.ITime iTime13 = server0.getTime();
    java.lang.String str14 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509021536L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509021536L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465509021536, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465509021536, exceptions=(), bans={}]"));

  }

  @Test
  public void test253() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test253"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    java.lang.String str9 = server0.toString();
    long long10 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509021540, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509021540, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509021540L);

  }

  @Test
  public void test254() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test254"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.ITime iTime10 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509021550L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);

  }

  @Test
  public void test255() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test255"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    java.lang.String str14 = server12.toString();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeBan(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    long long21 = server17.getLastUpdate();
    tp2.IP iP22 = null;
    boolean b23 = server17.removeBan(iP22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.Server server30 = new tp2.Server();
    long long31 = server30.getLastUpdate();
    tp2.ITime iTime32 = server30.getTime();
    server24.setTime(iTime32);
    server17.setTime(iTime32);
    server12.setTime(iTime32);
    server0.setTime(iTime32);
    tp2.ITime iTime37 = server0.getTime();
    java.lang.String str38 = server0.toString();
    tp2.Server server39 = new tp2.Server();
    tp2.ITime iTime40 = server39.getTime();
    server39.update();
    tp2.ITime iTime42 = server39.getTime();
    tp2.IP iP43 = null;
    boolean b44 = server39.removeBan(iP43);
    tp2.Server server45 = new tp2.Server();
    long long46 = server45.getLastUpdate();
    tp2.ITime iTime47 = server45.getTime();
    server39.setTime(iTime47);
    tp2.IP iP49 = null;
    boolean b50 = server39.removeException(iP49);
    tp2.Server server51 = new tp2.Server();
    long long52 = server51.getLastUpdate();
    java.lang.String str53 = server51.toString();
    server51.update();
    tp2.IP iP55 = null;
    boolean b56 = server51.removeBan(iP55);
    server51.update();
    java.lang.String str58 = server51.toString();
    tp2.Server server59 = new tp2.Server();
    tp2.ITime iTime60 = server59.getTime();
    server59.update();
    tp2.ITime iTime62 = server59.getTime();
    tp2.IP iP63 = null;
    boolean b64 = server59.connect(iP63);
    java.lang.String str65 = server59.toString();
    tp2.IP iP66 = null;
    boolean b67 = server59.removeBan(iP66);
    tp2.ITime iTime68 = server59.getTime();
    server51.setTime(iTime68);
    server39.setTime(iTime68);
    server0.setTime(iTime68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509021595L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509021595, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509021595, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509021595L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "Server [lastUpdate=1465509021595, exceptions=(), bans={}]"+ "'", str38.equals("Server [lastUpdate=1465509021595, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long46 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long52 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str53.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "Server [lastUpdate=1465509021597, exceptions=(), bans={}]"+ "'", str58.equals("Server [lastUpdate=1465509021597, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "Server [lastUpdate=1465509021597, exceptions=(), bans={}]"+ "'", str65.equals("Server [lastUpdate=1465509021597, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime68);

  }

  @Test
  public void test256() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test256"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    server0.update();
    java.lang.String str6 = server0.toString();
    server0.update();
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509021629, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509021629, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509021629L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test257() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test257"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.ITime iTime5 = server0.getTime();
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test258() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test258"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.ITime iTime21 = server13.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    tp2.ITime iTime27 = server25.getTime();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeBan(iP28);
    tp2.ITime iTime30 = server25.getTime();
    server0.setTime(iTime30);
    tp2.Server server32 = new tp2.Server();
    long long33 = server32.getLastUpdate();
    java.lang.String str34 = server32.toString();
    tp2.IP iP35 = null;
    boolean b36 = server32.removeBan(iP35);
    tp2.IP iP37 = null;
    boolean b38 = server32.removeBan(iP37);
    long long39 = server32.getLastUpdate();
    tp2.ITime iTime40 = server32.getTime();
    tp2.IP iP41 = null;
    boolean b42 = server32.removeBan(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server32.removeException(iP43);
    tp2.ITime iTime45 = server32.getTime();
    server0.setTime(iTime45);
    long long47 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str34.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long39 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long47 == 0L);

  }

  @Test
  public void test259() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test259"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    tp2.ITime iTime11 = server5.getTime();
    server0.setTime(iTime11);
    server0.update();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    long long16 = server0.getLastUpdate();
    long long17 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 1465509021650L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 1465509021650L);

  }

  @Test
  public void test260() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test260"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    server0.update();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    long long10 = server0.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    server0.update();
    java.lang.String str14 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509021684L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465509021684, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465509021684, exceptions=(), bans={}]"));

  }

  @Test
  public void test261() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test261"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    server0.update();
    java.lang.String str16 = server0.toString();
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server0.removeBan(iP19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509021686L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509021688, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509021688, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test262() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test262"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test263() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test263"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    java.lang.String str9 = server0.toString();
    long long10 = server0.getLastUpdate();
    long long11 = server0.getLastUpdate();
    long long12 = server0.getLastUpdate();
    tp2.ITime iTime13 = server0.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509021698, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509021698, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509021698L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509021698L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509021698L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test264() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test264"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    server12.update();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeException(iP15);
    server12.update();
    long long18 = server12.getLastUpdate();
    tp2.IP iP19 = null;
    boolean b20 = server12.removeBan(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server12.removeBan(iP21);
    long long23 = server12.getLastUpdate();
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server24.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server24.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server24.connect(iP34);
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.ITime iTime39 = server36.getTime();
    server24.setTime(iTime39);
    server12.setTime(iTime39);
    server0.setTime(iTime39);
    java.lang.String str43 = server0.toString();
    java.lang.String str44 = server0.toString();
    tp2.IP iP45 = null;
    boolean b46 = server0.removeBan(iP45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509021705L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509021705, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509021705, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509021706L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 1465509021706L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "Server [lastUpdate=1465509021705, exceptions=(), bans={}]"+ "'", str43.equals("Server [lastUpdate=1465509021705, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "Server [lastUpdate=1465509021705, exceptions=(), bans={}]"+ "'", str44.equals("Server [lastUpdate=1465509021705, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);

  }

  @Test
  public void test265() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test265"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server2.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server2.removeException(iP6);
    long long8 = server2.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server2.removeBan(iP9);
    tp2.Server server11 = new tp2.Server();
    long long12 = server11.getLastUpdate();
    tp2.ITime iTime13 = server11.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server11.removeBan(iP14);
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    server16.update();
    tp2.IP iP19 = null;
    boolean b20 = server16.removeBan(iP19);
    tp2.Server server21 = new tp2.Server();
    tp2.ITime iTime22 = server21.getTime();
    server21.update();
    tp2.ITime iTime24 = server21.getTime();
    server16.setTime(iTime24);
    server11.setTime(iTime24);
    server2.setTime(iTime24);
    server0.setTime(iTime24);
    server0.update();
    tp2.IP iP30 = null;
    boolean b31 = server0.connect(iP30);
    tp2.ITime iTime32 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);

  }

  @Test
  public void test266() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test266"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    server0.update();
    server0.update();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.IP iP15 = null;
    boolean b16 = server12.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    tp2.IP iP19 = null;
    boolean b20 = server17.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server17.connect(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server17.removeException(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server17.connect(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server17.connect(iP27);
    tp2.Server server29 = new tp2.Server();
    tp2.ITime iTime30 = server29.getTime();
    server29.update();
    tp2.ITime iTime32 = server29.getTime();
    server17.setTime(iTime32);
    server12.setTime(iTime32);
    tp2.Server server35 = new tp2.Server();
    tp2.ITime iTime36 = server35.getTime();
    tp2.IP iP37 = null;
    boolean b38 = server35.removeException(iP37);
    tp2.IP iP39 = null;
    boolean b40 = server35.connect(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server35.removeException(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server35.connect(iP43);
    tp2.IP iP45 = null;
    boolean b46 = server35.removeException(iP45);
    java.lang.String str47 = server35.toString();
    tp2.IP iP48 = null;
    boolean b49 = server35.removeBan(iP48);
    tp2.Server server50 = new tp2.Server();
    tp2.ITime iTime51 = server50.getTime();
    server50.update();
    tp2.IP iP53 = null;
    boolean b54 = server50.connect(iP53);
    tp2.Server server55 = new tp2.Server();
    tp2.ITime iTime56 = server55.getTime();
    tp2.IP iP57 = null;
    boolean b58 = server55.removeException(iP57);
    tp2.IP iP59 = null;
    boolean b60 = server55.connect(iP59);
    tp2.IP iP61 = null;
    boolean b62 = server55.removeException(iP61);
    tp2.IP iP63 = null;
    boolean b64 = server55.connect(iP63);
    tp2.IP iP65 = null;
    boolean b66 = server55.connect(iP65);
    tp2.Server server67 = new tp2.Server();
    tp2.ITime iTime68 = server67.getTime();
    server67.update();
    tp2.ITime iTime70 = server67.getTime();
    server55.setTime(iTime70);
    server50.setTime(iTime70);
    server35.setTime(iTime70);
    server12.setTime(iTime70);
    tp2.ITime iTime75 = server12.getTime();
    server0.setTime(iTime75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str47.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime75);

  }

  @Test
  public void test267() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test267"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.Server server4 = new tp2.Server();
    tp2.ITime iTime5 = server4.getTime();
    server4.update();
    tp2.ITime iTime7 = server4.getTime();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    tp2.ITime iTime10 = server8.getTime();
    server4.setTime(iTime10);
    tp2.ITime iTime12 = server4.getTime();
    server0.setTime(iTime12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    java.lang.String str16 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test268() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test268"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server0.removeBan(iP28);
    long long30 = server0.getLastUpdate();
    server0.update();
    java.lang.String str32 = server0.toString();
    java.lang.String str33 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 1465509021762L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "Server [lastUpdate=1465509021763, exceptions=(), bans={}]"+ "'", str32.equals("Server [lastUpdate=1465509021763, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "Server [lastUpdate=1465509021763, exceptions=(), bans={}]"+ "'", str33.equals("Server [lastUpdate=1465509021763, exceptions=(), bans={}]"));

  }

  @Test
  public void test269() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test269"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    long long13 = server0.getLastUpdate();
    tp2.ITime iTime14 = null;
    server0.setTime(iTime14);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeException(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509021770, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509021770, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509021770L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test270() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test270"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    server0.update();
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server10.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server10.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server10.removeException(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server10.connect(iP18);
    java.lang.String str20 = server10.toString();
    java.lang.String str21 = server10.toString();
    tp2.ITime iTime22 = null;
    server10.setTime(iTime22);
    java.lang.String str24 = server10.toString();
    tp2.IP iP25 = null;
    boolean b26 = server10.removeException(iP25);
    tp2.Server server27 = new tp2.Server();
    long long28 = server27.getLastUpdate();
    server27.update();
    tp2.IP iP30 = null;
    boolean b31 = server27.removeException(iP30);
    server27.update();
    long long33 = server27.getLastUpdate();
    tp2.IP iP34 = null;
    boolean b35 = server27.removeBan(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server27.removeBan(iP36);
    long long38 = server27.getLastUpdate();
    tp2.Server server39 = new tp2.Server();
    tp2.ITime iTime40 = server39.getTime();
    tp2.IP iP41 = null;
    boolean b42 = server39.removeException(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server39.connect(iP43);
    tp2.IP iP45 = null;
    boolean b46 = server39.removeException(iP45);
    tp2.IP iP47 = null;
    boolean b48 = server39.connect(iP47);
    tp2.IP iP49 = null;
    boolean b50 = server39.connect(iP49);
    tp2.Server server51 = new tp2.Server();
    tp2.ITime iTime52 = server51.getTime();
    server51.update();
    tp2.ITime iTime54 = server51.getTime();
    server39.setTime(iTime54);
    server27.setTime(iTime54);
    server10.setTime(iTime54);
    server0.setTime(iTime54);
    tp2.IP iP59 = null;
    boolean b60 = server0.connect(iP59);
    long long61 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str21.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 1465509021775L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long38 == 1465509021775L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long61 == 1465509021774L);

  }

  @Test
  public void test271() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test271"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.ITime iTime9 = server0.getTime();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    tp2.ITime iTime12 = server10.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server10.removeBan(iP13);
    tp2.ITime iTime15 = server10.getTime();
    server0.setTime(iTime15);
    server0.update();
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    long long20 = server18.getLastUpdate();
    java.lang.String str21 = server18.toString();
    tp2.Server server22 = new tp2.Server();
    tp2.ITime iTime23 = server22.getTime();
    server22.update();
    tp2.ITime iTime25 = server22.getTime();
    tp2.Server server26 = new tp2.Server();
    long long27 = server26.getLastUpdate();
    tp2.ITime iTime28 = server26.getTime();
    server22.setTime(iTime28);
    tp2.IP iP30 = null;
    boolean b31 = server22.connect(iP30);
    long long32 = server22.getLastUpdate();
    tp2.ITime iTime33 = server22.getTime();
    server18.setTime(iTime33);
    server0.setTime(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509021786, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509021786, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str21.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long32 == 1465509021787L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);

  }

  @Test
  public void test272() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test272"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server2.update();
    tp2.ITime iTime5 = server2.getTime();
    tp2.Server server6 = new tp2.Server();
    long long7 = server6.getLastUpdate();
    tp2.ITime iTime8 = server6.getTime();
    server2.setTime(iTime8);
    java.lang.String str10 = server2.toString();
    tp2.ITime iTime11 = server2.getTime();
    server0.setTime(iTime11);
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server0.setTime(iTime15);
    long long17 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509021804, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509021804, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);

  }

  @Test
  public void test273() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test273"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.IP iP20 = null;
    boolean b21 = server0.removeException(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server0.removeException(iP22);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    server25.update();
    tp2.ITime iTime28 = server25.getTime();
    tp2.IP iP29 = null;
    boolean b30 = server25.removeBan(iP29);
    java.lang.String str31 = server25.toString();
    java.lang.String str32 = server25.toString();
    java.lang.String str33 = server25.toString();
    java.lang.String str34 = server25.toString();
    tp2.ITime iTime35 = server25.getTime();
    server0.setTime(iTime35);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "Server [lastUpdate=1465509021823, exceptions=(), bans={}]"+ "'", str31.equals("Server [lastUpdate=1465509021823, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "Server [lastUpdate=1465509021823, exceptions=(), bans={}]"+ "'", str32.equals("Server [lastUpdate=1465509021823, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "Server [lastUpdate=1465509021823, exceptions=(), bans={}]"+ "'", str33.equals("Server [lastUpdate=1465509021823, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "Server [lastUpdate=1465509021823, exceptions=(), bans={}]"+ "'", str34.equals("Server [lastUpdate=1465509021823, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);

  }

  @Test
  public void test274() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test274"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server9.connect(iP13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    tp2.ITime iTime17 = server15.getTime();
    server9.setTime(iTime17);
    server0.setTime(iTime17);
    tp2.Server server20 = new tp2.Server();
    long long21 = server20.getLastUpdate();
    tp2.ITime iTime22 = server20.getTime();
    tp2.IP iP23 = null;
    boolean b24 = server20.removeBan(iP23);
    tp2.ITime iTime25 = server20.getTime();
    long long26 = server20.getLastUpdate();
    tp2.IP iP27 = null;
    boolean b28 = server20.removeException(iP27);
    long long29 = server20.getLastUpdate();
    tp2.ITime iTime30 = server20.getTime();
    server0.setTime(iTime30);
    tp2.IP iP32 = null;
    boolean b33 = server0.removeBan(iP32);
    java.lang.String str34 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509021864L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "Server [lastUpdate=1465509021864, exceptions=(), bans={}]"+ "'", str34.equals("Server [lastUpdate=1465509021864, exceptions=(), bans={}]"));

  }

  @Test
  public void test275() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test275"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server2.update();
    tp2.ITime iTime5 = server2.getTime();
    tp2.Server server6 = new tp2.Server();
    long long7 = server6.getLastUpdate();
    tp2.ITime iTime8 = server6.getTime();
    server2.setTime(iTime8);
    java.lang.String str10 = server2.toString();
    tp2.ITime iTime11 = server2.getTime();
    server0.setTime(iTime11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.removeBan(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509021870, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509021870, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test276() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test276"); }


    tp2.Server server0 = new tp2.Server();
    tp2.IP iP1 = null;
    boolean b2 = server0.connect(iP1);
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509021875L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test277() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test277"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    long long2 = server0.getLastUpdate();
    java.lang.String str3 = server0.toString();
    tp2.Server server4 = new tp2.Server();
    tp2.ITime iTime5 = server4.getTime();
    server4.update();
    tp2.ITime iTime7 = server4.getTime();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    tp2.ITime iTime10 = server8.getTime();
    server4.setTime(iTime10);
    tp2.IP iP12 = null;
    boolean b13 = server4.connect(iP12);
    long long14 = server4.getLastUpdate();
    tp2.ITime iTime15 = server4.getTime();
    server0.setTime(iTime15);
    long long17 = server0.getLastUpdate();
    java.lang.String str18 = server0.toString();
    tp2.ITime iTime19 = server0.getTime();
    long long20 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long2 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509021877L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);

  }

  @Test
  public void test278() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test278"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    tp2.IP iP5 = null;
    boolean b6 = server0.connect(iP5);
    tp2.ITime iTime7 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);

  }

  @Test
  public void test279() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test279"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server2.update();
    tp2.ITime iTime5 = server2.getTime();
    tp2.Server server6 = new tp2.Server();
    long long7 = server6.getLastUpdate();
    tp2.ITime iTime8 = server6.getTime();
    server2.setTime(iTime8);
    java.lang.String str10 = server2.toString();
    tp2.ITime iTime11 = server2.getTime();
    server0.setTime(iTime11);
    java.lang.String str13 = server0.toString();
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    server0.update();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    server17.update();
    tp2.IP iP20 = null;
    boolean b21 = server17.removeException(iP20);
    server17.update();
    tp2.ITime iTime23 = server17.getTime();
    tp2.IP iP24 = null;
    boolean b25 = server17.removeBan(iP24);
    long long26 = server17.getLastUpdate();
    tp2.ITime iTime27 = server17.getTime();
    server0.setTime(iTime27);
    tp2.IP iP29 = null;
    boolean b30 = server0.removeBan(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server0.removeException(iP31);
    tp2.IP iP33 = null;
    boolean b34 = server0.connect(iP33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509021886, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509021886, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 1465509021887L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);

  }

  @Test
  public void test280() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test280"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    long long12 = server0.getLastUpdate();
    long long13 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);

  }

  @Test
  public void test281() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test281"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509021900, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509021900, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509021900, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509021900, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509021900L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test282() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test282"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.ITime iTime11 = server0.getTime();
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.connect(iP13);
    java.lang.String str15 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test283() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test283"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    java.lang.String str10 = server0.toString();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.ITime iTime13 = server0.getTime();
    long long14 = server0.getLastUpdate();
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.ITime iTime18 = server15.getTime();
    tp2.IP iP19 = null;
    boolean b20 = server15.connect(iP19);
    java.lang.String str21 = server15.toString();
    tp2.IP iP22 = null;
    boolean b23 = server15.removeBan(iP22);
    tp2.ITime iTime24 = server15.getTime();
    tp2.IP iP25 = null;
    boolean b26 = server15.removeBan(iP25);
    tp2.ITime iTime27 = server15.getTime();
    server0.setTime(iTime27);
    tp2.ITime iTime29 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509021904, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509021904, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509021904L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Server [lastUpdate=1465509021904, exceptions=(), bans={}]"+ "'", str21.equals("Server [lastUpdate=1465509021904, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);

  }

  @Test
  public void test284() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test284"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test285() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test285"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    long long12 = server0.getLastUpdate();
    java.lang.String str13 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509021916L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509021916, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509021916, exceptions=(), bans={}]"));

  }

  @Test
  public void test286() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test286"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.ITime iTime11 = server0.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    java.lang.String str14 = server0.toString();
    server0.update();
    java.lang.String str16 = server0.toString();
    tp2.IP iP17 = null;
    boolean b18 = server0.removeBan(iP17);
    tp2.ITime iTime19 = server0.getTime();
    tp2.IP iP20 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b21 = server0.addException(iP20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509021919, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509021919, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);

  }

  @Test
  public void test287() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test287"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    server0.update();
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server5.removeBan(iP9);
    server5.update();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server12.setTime(iTime15);
    server12.update();
    java.lang.String str18 = server12.toString();
    tp2.ITime iTime19 = server12.getTime();
    server5.setTime(iTime19);
    server0.setTime(iTime19);
    tp2.ITime iTime22 = server0.getTime();
    tp2.IP iP23 = null;
    boolean b24 = server0.connect(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server0.connect(iP25);
    java.lang.String str27 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509021921, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509021921, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Server [lastUpdate=1465509021920, exceptions=(), bans={}]"+ "'", str27.equals("Server [lastUpdate=1465509021920, exceptions=(), bans={}]"));

  }

  @Test
  public void test288() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test288"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    long long12 = server0.getLastUpdate();
    long long13 = server0.getLastUpdate();
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.connect(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509021933L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509021933L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);

  }

  @Test
  public void test289() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test289"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server9.connect(iP13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    tp2.ITime iTime17 = server15.getTime();
    server9.setTime(iTime17);
    server0.setTime(iTime17);
    tp2.IP iP20 = null;
    boolean b21 = server0.connect(iP20);
    server0.update();
    tp2.IP iP23 = null;
    boolean b24 = server0.removeBan(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server0.connect(iP25);
    tp2.Server server27 = new tp2.Server();
    tp2.ITime iTime28 = server27.getTime();
    server27.update();
    tp2.ITime iTime30 = server27.getTime();
    tp2.IP iP31 = null;
    boolean b32 = server27.removeBan(iP31);
    tp2.IP iP33 = null;
    boolean b34 = server27.connect(iP33);
    server27.update();
    java.lang.String str36 = server27.toString();
    tp2.Server server37 = new tp2.Server();
    long long38 = server37.getLastUpdate();
    java.lang.String str39 = server37.toString();
    server37.update();
    tp2.IP iP41 = null;
    boolean b42 = server37.removeBan(iP41);
    tp2.ITime iTime43 = server37.getTime();
    server27.setTime(iTime43);
    server27.update();
    tp2.ITime iTime46 = server27.getTime();
    server0.setTime(iTime46);
    tp2.IP iP48 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b49 = server0.addException(iP48);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509021936L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "Server [lastUpdate=1465509021937, exceptions=(), bans={}]"+ "'", str36.equals("Server [lastUpdate=1465509021937, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long38 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str39.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);

  }

  @Test
  public void test290() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test290"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    long long4 = server0.getLastUpdate();
    java.lang.String str5 = server0.toString();
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str5.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test291() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test291"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    java.lang.String str15 = server0.toString();
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    tp2.ITime iTime18 = server16.getTime();
    tp2.IP iP19 = null;
    boolean b20 = server16.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server16.removeBan(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    tp2.IP iP25 = null;
    boolean b26 = server23.removeException(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server23.connect(iP27);
    tp2.IP iP29 = null;
    boolean b30 = server23.removeException(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server23.connect(iP31);
    tp2.ITime iTime33 = server23.getTime();
    server16.setTime(iTime33);
    long long35 = server16.getLastUpdate();
    server16.update();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    server37.update();
    tp2.ITime iTime40 = server37.getTime();
    long long41 = server37.getLastUpdate();
    tp2.IP iP42 = null;
    boolean b43 = server37.removeBan(iP42);
    tp2.Server server44 = new tp2.Server();
    tp2.ITime iTime45 = server44.getTime();
    tp2.IP iP46 = null;
    boolean b47 = server44.removeException(iP46);
    tp2.IP iP48 = null;
    boolean b49 = server44.connect(iP48);
    tp2.Server server50 = new tp2.Server();
    long long51 = server50.getLastUpdate();
    tp2.ITime iTime52 = server50.getTime();
    server44.setTime(iTime52);
    server37.setTime(iTime52);
    tp2.ITime iTime55 = server37.getTime();
    server16.setTime(iTime55);
    server16.update();
    tp2.ITime iTime58 = server16.getTime();
    server0.setTime(iTime58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long35 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 1465509021956L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long51 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime58);

  }

  @Test
  public void test292() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test292"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);

  }

  @Test
  public void test293() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test293"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    server0.update();
    server0.update();
    tp2.ITime iTime11 = server0.getTime();
    long long12 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509021982L);

  }

  @Test
  public void test294() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test294"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeException(iP23);
    tp2.ITime iTime25 = server0.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    tp2.Server server28 = new tp2.Server();
    long long29 = server28.getLastUpdate();
    server28.update();
    tp2.IP iP31 = null;
    boolean b32 = server28.removeBan(iP31);
    tp2.Server server33 = new tp2.Server();
    long long34 = server33.getLastUpdate();
    server33.update();
    tp2.IP iP36 = null;
    boolean b37 = server33.removeException(iP36);
    server33.update();
    tp2.ITime iTime39 = server33.getTime();
    server28.setTime(iTime39);
    long long41 = server28.getLastUpdate();
    tp2.ITime iTime42 = server28.getTime();
    server0.setTime(iTime42);
    tp2.Server server44 = new tp2.Server();
    long long45 = server44.getLastUpdate();
    tp2.ITime iTime46 = server44.getTime();
    tp2.IP iP47 = null;
    boolean b48 = server44.removeBan(iP47);
    tp2.Server server49 = new tp2.Server();
    long long50 = server49.getLastUpdate();
    server49.update();
    tp2.IP iP52 = null;
    boolean b53 = server49.removeBan(iP52);
    tp2.Server server54 = new tp2.Server();
    tp2.ITime iTime55 = server54.getTime();
    server54.update();
    tp2.ITime iTime57 = server54.getTime();
    server49.setTime(iTime57);
    server44.setTime(iTime57);
    tp2.ITime iTime60 = server44.getTime();
    server0.setTime(iTime60);
    tp2.IP iP62 = null;
    boolean b63 = server0.connect(iP62);
    tp2.ITime iTime64 = server0.getTime();
    tp2.IP iP65 = null;
    boolean b66 = server0.removeBan(iP65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long34 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 1465509021984L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long45 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long50 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);

  }

  @Test
  public void test295() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test295"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    java.lang.String str12 = server10.toString();
    server10.update();
    tp2.IP iP14 = null;
    boolean b15 = server10.removeBan(iP14);
    tp2.ITime iTime16 = server10.getTime();
    server0.setTime(iTime16);
    server0.update();
    java.lang.String str19 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509022013, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509022013, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509022014, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509022014, exceptions=(), bans={}]"));

  }

  @Test
  public void test296() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test296"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);

  }

  @Test
  public void test297() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test297"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    java.lang.String str8 = server0.toString();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.ITime iTime12 = server9.getTime();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server9.setTime(iTime15);
    server0.setTime(iTime15);
    tp2.IP iP18 = null;
    boolean b19 = server0.removeException(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server0.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server0.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server0.connect(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server0.connect(iP26);
    tp2.IP iP28 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b29 = server0.addException(iP28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509022017, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509022017, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);

  }

  @Test
  public void test298() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test298"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    java.lang.String str13 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509022021, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509022021, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509022021, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509022021, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509022021L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509022021, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509022021, exceptions=(), bans={}]"));

  }

  @Test
  public void test299() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test299"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b9 = server0.addException(iP8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);

  }

  @Test
  public void test300() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test300"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.ITime iTime11 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);

  }

  @Test
  public void test301() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test301"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    long long8 = server0.getLastUpdate();
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    server0.update();
    tp2.IP iP13 = null;
    boolean b14 = server0.connect(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509022048L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509022048, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509022048, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509022048L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);

  }

  @Test
  public void test302() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test302"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    server0.update();
    tp2.Server server11 = new tp2.Server();
    tp2.IP iP12 = null;
    boolean b13 = server11.connect(iP12);
    tp2.ITime iTime14 = server11.getTime();
    server0.setTime(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509022050L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);

  }

  @Test
  public void test303() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test303"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.ITime iTime21 = server13.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.IP iP25 = null;
    boolean b26 = server0.removeBan(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server0.connect(iP27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);

  }

  @Test
  public void test304() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test304"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    server0.update();
    tp2.ITime iTime14 = server0.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server0.removeException(iP15);
    server0.update();
    tp2.IP iP18 = null;
    boolean b19 = server0.connect(iP18);
    tp2.ITime iTime20 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509022065L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);

  }

  @Test
  public void test305() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test305"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    tp2.ITime iTime9 = server0.getTime();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    tp2.ITime iTime12 = server10.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server10.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server10.removeBan(iP15);
    server10.update();
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    java.lang.String str20 = server18.toString();
    tp2.ITime iTime21 = server18.getTime();
    tp2.ITime iTime22 = server18.getTime();
    server10.setTime(iTime22);
    server0.setTime(iTime22);
    tp2.IP iP25 = null;
    boolean b26 = server0.removeBan(iP25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509022070, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509022070, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509022070, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509022070, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test306() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test306"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    server0.update();
    tp2.ITime iTime14 = server0.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server0.removeException(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509022082L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);

  }

  @Test
  public void test307() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test307"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeException(iP11);
    server8.update();
    tp2.ITime iTime14 = server8.getTime();
    server0.setTime(iTime14);
    server0.update();
    tp2.ITime iTime17 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);

  }

  @Test
  public void test308() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test308"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    long long14 = server10.getLastUpdate();
    tp2.IP iP15 = null;
    boolean b16 = server10.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server10.removeException(iP17);
    java.lang.String str19 = server10.toString();
    tp2.IP iP20 = null;
    boolean b21 = server10.connect(iP20);
    tp2.Server server22 = new tp2.Server();
    long long23 = server22.getLastUpdate();
    server22.update();
    tp2.IP iP25 = null;
    boolean b26 = server22.removeException(iP25);
    server22.update();
    long long28 = server22.getLastUpdate();
    tp2.IP iP29 = null;
    boolean b30 = server22.removeBan(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server22.removeBan(iP31);
    long long33 = server22.getLastUpdate();
    tp2.Server server34 = new tp2.Server();
    tp2.ITime iTime35 = server34.getTime();
    tp2.IP iP36 = null;
    boolean b37 = server34.removeException(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server34.connect(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server34.removeException(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server34.connect(iP42);
    tp2.IP iP44 = null;
    boolean b45 = server34.connect(iP44);
    tp2.Server server46 = new tp2.Server();
    tp2.ITime iTime47 = server46.getTime();
    server46.update();
    tp2.ITime iTime49 = server46.getTime();
    server34.setTime(iTime49);
    server22.setTime(iTime49);
    server10.setTime(iTime49);
    server0.setTime(iTime49);
    server0.update();
    tp2.Server server55 = new tp2.Server();
    tp2.IP iP56 = null;
    boolean b57 = server55.connect(iP56);
    tp2.ITime iTime58 = server55.getTime();
    server0.setTime(iTime58);
    tp2.IP iP60 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b61 = server0.addException(iP60);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509022095L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509022095, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509022095, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465509022096L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 1465509022096L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime58);

  }

  @Test
  public void test309() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test309"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    server0.update();
    java.lang.String str11 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509022100, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509022100, exceptions=(), bans={}]"));

  }

  @Test
  public void test310() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test310"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.ITime iTime13 = server0.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509022101, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509022101, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);

  }

  @Test
  public void test311() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test311"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    long long15 = server0.getLastUpdate();
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    tp2.IP iP20 = null;
    boolean b21 = server16.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server16.connect(iP22);
    tp2.ITime iTime24 = server16.getTime();
    server0.setTime(iTime24);
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509022107L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509022107L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test312() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test312"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    long long13 = server0.getLastUpdate();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server14.removeException(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server14.connect(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server14.removeException(iP20);
    java.lang.String str22 = server14.toString();
    server14.update();
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server24.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server24.connect(iP32);
    java.lang.String str34 = server24.toString();
    java.lang.String str35 = server24.toString();
    tp2.ITime iTime36 = null;
    server24.setTime(iTime36);
    java.lang.String str38 = server24.toString();
    tp2.IP iP39 = null;
    boolean b40 = server24.removeException(iP39);
    tp2.Server server41 = new tp2.Server();
    long long42 = server41.getLastUpdate();
    server41.update();
    tp2.IP iP44 = null;
    boolean b45 = server41.removeException(iP44);
    server41.update();
    long long47 = server41.getLastUpdate();
    tp2.IP iP48 = null;
    boolean b49 = server41.removeBan(iP48);
    tp2.IP iP50 = null;
    boolean b51 = server41.removeBan(iP50);
    long long52 = server41.getLastUpdate();
    tp2.Server server53 = new tp2.Server();
    tp2.ITime iTime54 = server53.getTime();
    tp2.IP iP55 = null;
    boolean b56 = server53.removeException(iP55);
    tp2.IP iP57 = null;
    boolean b58 = server53.connect(iP57);
    tp2.IP iP59 = null;
    boolean b60 = server53.removeException(iP59);
    tp2.IP iP61 = null;
    boolean b62 = server53.connect(iP61);
    tp2.IP iP63 = null;
    boolean b64 = server53.connect(iP63);
    tp2.Server server65 = new tp2.Server();
    tp2.ITime iTime66 = server65.getTime();
    server65.update();
    tp2.ITime iTime68 = server65.getTime();
    server53.setTime(iTime68);
    server41.setTime(iTime68);
    server24.setTime(iTime68);
    server14.setTime(iTime68);
    server0.setTime(iTime68);
    long long74 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str22.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str34.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str35.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str38.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long42 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long47 == 1465509022122L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long52 == 1465509022122L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long74 == 0L);

  }

  @Test
  public void test313() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test313"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    long long13 = server0.getLastUpdate();
    java.lang.String str14 = server0.toString();
    tp2.IP iP15 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b16 = server0.addException(iP15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test314() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test314"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server13.removeException(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server13.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server13.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server13.connect(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server13.connect(iP23);
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    server25.update();
    tp2.ITime iTime28 = server25.getTime();
    server13.setTime(iTime28);
    server8.setTime(iTime28);
    tp2.IP iP31 = null;
    boolean b32 = server8.removeException(iP31);
    tp2.ITime iTime33 = server8.getTime();
    server0.setTime(iTime33);
    tp2.ITime iTime35 = server0.getTime();
    server0.update();
    tp2.IP iP37 = null;
    boolean b38 = server0.removeException(iP37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509022143, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509022143, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);

  }

  @Test
  public void test315() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test315"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = null;
    server0.setTime(iTime12);
    java.lang.String str14 = server0.toString();
    long long15 = server0.getLastUpdate();
    tp2.ITime iTime16 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(iTime16);

  }

  @Test
  public void test316() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test316"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    server0.update();
    server0.update();
    tp2.ITime iTime9 = server0.getTime();
    server0.update();
    java.lang.String str11 = server0.toString();
    java.lang.String str12 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509022155L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509022155, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509022155, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509022156, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509022156, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509022156, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509022156, exceptions=(), bans={}]"));

  }

  @Test
  public void test317() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test317"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    long long12 = server10.getLastUpdate();
    java.lang.String str13 = server10.toString();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server14.update();
    tp2.ITime iTime17 = server14.getTime();
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server14.setTime(iTime20);
    tp2.IP iP22 = null;
    boolean b23 = server14.connect(iP22);
    long long24 = server14.getLastUpdate();
    tp2.ITime iTime25 = server14.getTime();
    server10.setTime(iTime25);
    server0.setTime(iTime25);
    long long28 = server0.getLastUpdate();
    tp2.IP iP29 = null;
    boolean b30 = server0.removeException(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server0.removeException(iP31);
    long long33 = server0.getLastUpdate();
    tp2.IP iP34 = null;
    boolean b35 = server0.removeBan(iP34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509022157L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509022157, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509022157, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509022159L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465509022157L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 1465509022157L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);

  }

  @Test
  public void test318() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test318"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    java.lang.String str12 = server0.toString();
    tp2.ITime iTime13 = server0.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    tp2.ITime iTime16 = server0.getTime();
    tp2.IP iP17 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = server0.addException(iP17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);

  }

  @Test
  public void test319() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test319"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    java.lang.String str10 = server0.toString();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.ITime iTime13 = server0.getTime();
    long long14 = server0.getLastUpdate();
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.ITime iTime18 = server15.getTime();
    tp2.IP iP19 = null;
    boolean b20 = server15.connect(iP19);
    java.lang.String str21 = server15.toString();
    tp2.IP iP22 = null;
    boolean b23 = server15.removeBan(iP22);
    tp2.ITime iTime24 = server15.getTime();
    tp2.IP iP25 = null;
    boolean b26 = server15.removeBan(iP25);
    tp2.ITime iTime27 = server15.getTime();
    server0.setTime(iTime27);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509022167, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509022167, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509022167L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Server [lastUpdate=1465509022167, exceptions=(), bans={}]"+ "'", str21.equals("Server [lastUpdate=1465509022167, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);

  }

  @Test
  public void test320() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test320"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    long long5 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);

  }

  @Test
  public void test321() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test321"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    server0.update();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test322() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test322"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeBan(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server5.setTime(iTime13);
    server0.setTime(iTime13);
    tp2.ITime iTime16 = server0.getTime();
    server0.update();
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    tp2.Server server22 = new tp2.Server();
    long long23 = server22.getLastUpdate();
    tp2.ITime iTime24 = server22.getTime();
    server18.setTime(iTime24);
    tp2.IP iP26 = null;
    boolean b27 = server18.connect(iP26);
    long long28 = server18.getLastUpdate();
    java.lang.String str29 = server18.toString();
    tp2.ITime iTime30 = server18.getTime();
    long long31 = server18.getLastUpdate();
    tp2.Server server32 = new tp2.Server();
    tp2.ITime iTime33 = server32.getTime();
    server32.update();
    tp2.ITime iTime35 = server32.getTime();
    tp2.IP iP36 = null;
    boolean b37 = server32.connect(iP36);
    tp2.ITime iTime38 = server32.getTime();
    tp2.ITime iTime39 = server32.getTime();
    server18.setTime(iTime39);
    server0.setTime(iTime39);
    tp2.Server server42 = new tp2.Server();
    long long43 = server42.getLastUpdate();
    tp2.ITime iTime44 = server42.getTime();
    tp2.IP iP45 = null;
    boolean b46 = server42.removeBan(iP45);
    tp2.Server server47 = new tp2.Server();
    long long48 = server47.getLastUpdate();
    server47.update();
    tp2.IP iP50 = null;
    boolean b51 = server47.removeBan(iP50);
    tp2.Server server52 = new tp2.Server();
    tp2.ITime iTime53 = server52.getTime();
    server52.update();
    tp2.ITime iTime55 = server52.getTime();
    server47.setTime(iTime55);
    server42.setTime(iTime55);
    tp2.ITime iTime58 = server42.getTime();
    server0.setTime(iTime58);
    tp2.IP iP60 = null;
    boolean b61 = server0.removeBan(iP60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465509022187L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "Server [lastUpdate=1465509022187, exceptions=(), bans={}]"+ "'", str29.equals("Server [lastUpdate=1465509022187, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509022187L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long43 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long48 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);

  }

  @Test
  public void test323() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test323"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test324() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test324"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = server0.addException(iP9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509022242L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509022242, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509022242, exceptions=(), bans={}]"));

  }

  @Test
  public void test325() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test325"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeBan(iP23);
    tp2.ITime iTime25 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);

  }

  @Test
  public void test326() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test326"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    server0.update();
    java.lang.String str16 = server0.toString();
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    tp2.Server server19 = new tp2.Server();
    tp2.ITime iTime20 = server19.getTime();
    server17.setTime(iTime20);
    server17.update();
    server17.update();
    tp2.ITime iTime24 = server17.getTime();
    server0.setTime(iTime24);
    tp2.ITime iTime26 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509022249L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509022249, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509022249, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);

  }

  @Test
  public void test327() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test327"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    java.lang.String str28 = server0.toString();
    tp2.Server server29 = new tp2.Server();
    tp2.ITime iTime30 = server29.getTime();
    server29.update();
    tp2.ITime iTime32 = server29.getTime();
    tp2.IP iP33 = null;
    boolean b34 = server29.removeBan(iP33);
    server29.update();
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    tp2.Server server38 = new tp2.Server();
    tp2.ITime iTime39 = server38.getTime();
    server36.setTime(iTime39);
    server36.update();
    java.lang.String str42 = server36.toString();
    tp2.ITime iTime43 = server36.getTime();
    server29.setTime(iTime43);
    server0.setTime(iTime43);
    tp2.ITime iTime46 = server0.getTime();
    tp2.IP iP47 = null;
    boolean b48 = server0.removeException(iP47);
    long long49 = server0.getLastUpdate();
    tp2.IP iP50 = null;
    boolean b51 = server0.connect(iP50);
    tp2.ITime iTime52 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "Server [lastUpdate=1465509022270, exceptions=(), bans={}]"+ "'", str28.equals("Server [lastUpdate=1465509022270, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "Server [lastUpdate=1465509022272, exceptions=(), bans={}]"+ "'", str42.equals("Server [lastUpdate=1465509022272, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long49 == 1465509022270L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);

  }

  @Test
  public void test328() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test328"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test329() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test329"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server9.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server9.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server9.connect(iP17);
    tp2.ITime iTime19 = server9.getTime();
    server0.setTime(iTime19);
    tp2.IP iP21 = null;
    boolean b22 = server0.removeException(iP21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test330() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test330"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.ITime iTime5 = server0.getTime();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test331() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test331"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    java.lang.String str14 = server12.toString();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeBan(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    long long21 = server17.getLastUpdate();
    tp2.IP iP22 = null;
    boolean b23 = server17.removeBan(iP22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.Server server30 = new tp2.Server();
    long long31 = server30.getLastUpdate();
    tp2.ITime iTime32 = server30.getTime();
    server24.setTime(iTime32);
    server17.setTime(iTime32);
    server12.setTime(iTime32);
    server0.setTime(iTime32);
    tp2.ITime iTime37 = server0.getTime();
    java.lang.String str38 = server0.toString();
    java.lang.String str39 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509022321L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509022321, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509022321, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509022322L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "Server [lastUpdate=1465509022321, exceptions=(), bans={}]"+ "'", str38.equals("Server [lastUpdate=1465509022321, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "Server [lastUpdate=1465509022321, exceptions=(), bans={}]"+ "'", str39.equals("Server [lastUpdate=1465509022321, exceptions=(), bans={}]"));

  }

  @Test
  public void test332() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test332"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    server0.update();
    server0.update();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.ITime iTime15 = server0.getTime();
    tp2.ITime iTime16 = server0.getTime();
    java.lang.String str17 = server0.toString();
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.IP iP21 = null;
    boolean b22 = server18.connect(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    tp2.IP iP25 = null;
    boolean b26 = server23.removeException(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server23.connect(iP27);
    tp2.IP iP29 = null;
    boolean b30 = server23.removeException(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server23.connect(iP31);
    tp2.IP iP33 = null;
    boolean b34 = server23.connect(iP33);
    tp2.Server server35 = new tp2.Server();
    tp2.ITime iTime36 = server35.getTime();
    server35.update();
    tp2.ITime iTime38 = server35.getTime();
    server23.setTime(iTime38);
    server18.setTime(iTime38);
    server0.setTime(iTime38);
    tp2.IP iP42 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b43 = server0.addException(iP42);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509022342L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509022342, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509022342, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);

  }

  @Test
  public void test333() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test333"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    java.lang.String str8 = server0.toString();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.ITime iTime12 = server9.getTime();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server9.setTime(iTime15);
    server0.setTime(iTime15);
    tp2.IP iP18 = null;
    boolean b19 = server0.removeException(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server0.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server0.connect(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server0.connect(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509022344, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509022344, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test334() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test334"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeBan(iP2);
    tp2.IP iP4 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b5 = server0.addException(iP4);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);

  }

  @Test
  public void test335() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test335"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    long long10 = server0.getLastUpdate();
    server0.update();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    tp2.ITime iTime18 = server16.getTime();
    server12.setTime(iTime18);
    tp2.ITime iTime20 = server12.getTime();
    tp2.ITime iTime21 = server12.getTime();
    tp2.ITime iTime22 = server12.getTime();
    server0.setTime(iTime22);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509022356L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509022356L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509022356L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);

  }

  @Test
  public void test336() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test336"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.ITime iTime11 = server0.getTime();
    java.lang.String str12 = server0.toString();
    long long13 = server0.getLastUpdate();
    tp2.ITime iTime14 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);

  }

  @Test
  public void test337() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test337"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509022424L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509022424, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509022424, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509022424, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509022424, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509022424, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509022424, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test338() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test338"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    java.lang.String str4 = server0.toString();
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    long long11 = server5.getLastUpdate();
    java.lang.String str12 = server5.toString();
    tp2.ITime iTime13 = server5.getTime();
    server0.setTime(iTime13);
    tp2.ITime iTime15 = server0.getTime();
    server0.update();
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    long long19 = server0.getLastUpdate();
    server0.update();
    tp2.ITime iTime21 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=1465509022426, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=1465509022426, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509022426L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509022426, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509022426, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509022427L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);

  }

  @Test
  public void test339() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test339"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    long long12 = server10.getLastUpdate();
    java.lang.String str13 = server10.toString();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server14.update();
    tp2.ITime iTime17 = server14.getTime();
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server14.setTime(iTime20);
    tp2.IP iP22 = null;
    boolean b23 = server14.connect(iP22);
    long long24 = server14.getLastUpdate();
    tp2.ITime iTime25 = server14.getTime();
    server10.setTime(iTime25);
    server0.setTime(iTime25);
    java.lang.String str28 = server0.toString();
    tp2.IP iP29 = null;
    boolean b30 = server0.removeBan(iP29);
    long long31 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509022431L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509022431, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509022431, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509022432L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "Server [lastUpdate=1465509022431, exceptions=(), bans={}]"+ "'", str28.equals("Server [lastUpdate=1465509022431, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509022431L);

  }

  @Test
  public void test340() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test340"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.ITime iTime12 = server9.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server9.removeBan(iP13);
    server9.update();
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server16.setTime(iTime19);
    server16.update();
    java.lang.String str22 = server16.toString();
    tp2.ITime iTime23 = server16.getTime();
    server9.setTime(iTime23);
    tp2.ITime iTime25 = server9.getTime();
    tp2.ITime iTime26 = server9.getTime();
    server0.setTime(iTime26);
    tp2.IP iP28 = null;
    boolean b29 = server0.removeBan(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server0.removeException(iP30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509022441L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509022441, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509022441, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Server [lastUpdate=1465509022442, exceptions=(), bans={}]"+ "'", str22.equals("Server [lastUpdate=1465509022442, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);

  }

  @Test
  public void test341() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test341"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.ITime iTime9 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);

  }

  @Test
  public void test342() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test342"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    server0.update();
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server12.removeBan(iP16);
    java.lang.String str18 = server12.toString();
    tp2.IP iP19 = null;
    boolean b20 = server12.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server12.removeBan(iP21);
    java.lang.String str23 = server12.toString();
    tp2.Server server24 = new tp2.Server();
    long long25 = server24.getLastUpdate();
    server24.update();
    tp2.IP iP27 = null;
    boolean b28 = server24.removeBan(iP27);
    tp2.Server server29 = new tp2.Server();
    long long30 = server29.getLastUpdate();
    server29.update();
    tp2.IP iP32 = null;
    boolean b33 = server29.removeException(iP32);
    server29.update();
    tp2.ITime iTime35 = server29.getTime();
    server24.setTime(iTime35);
    tp2.IP iP37 = null;
    boolean b38 = server24.removeException(iP37);
    tp2.IP iP39 = null;
    boolean b40 = server24.connect(iP39);
    tp2.Server server41 = new tp2.Server();
    tp2.ITime iTime42 = server41.getTime();
    server41.update();
    tp2.IP iP44 = null;
    boolean b45 = server41.connect(iP44);
    long long46 = server41.getLastUpdate();
    java.lang.String str47 = server41.toString();
    java.lang.String str48 = server41.toString();
    tp2.Server server49 = new tp2.Server();
    tp2.ITime iTime50 = server49.getTime();
    server49.update();
    tp2.ITime iTime52 = server49.getTime();
    tp2.Server server53 = new tp2.Server();
    long long54 = server53.getLastUpdate();
    tp2.ITime iTime55 = server53.getTime();
    server49.setTime(iTime55);
    tp2.ITime iTime57 = server49.getTime();
    server41.setTime(iTime57);
    server24.setTime(iTime57);
    server12.setTime(iTime57);
    server0.setTime(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509022462, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509022462, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465509022462, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465509022462, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long25 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long46 == 1465509022464L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "Server [lastUpdate=1465509022464, exceptions=(), bans={}]"+ "'", str47.equals("Server [lastUpdate=1465509022464, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "Server [lastUpdate=1465509022464, exceptions=(), bans={}]"+ "'", str48.equals("Server [lastUpdate=1465509022464, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long54 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);

  }

  @Test
  public void test343() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test343"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    server0.update();
    server0.update();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    tp2.IP iP14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = server0.addException(iP14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test344() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test344"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    server6.update();
    tp2.ITime iTime9 = server6.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server6.removeBan(iP10);
    server6.update();
    tp2.ITime iTime13 = server6.getTime();
    server0.setTime(iTime13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    long long17 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509022487L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 1465509022487L);

  }

  @Test
  public void test345() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test345"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    boolean b13 = server0.connect(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509022492L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509022492, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509022492, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test346() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test346"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    java.lang.String str3 = server0.toString();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=1465509022495, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=1465509022495, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test347() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test347"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    long long15 = server0.getLastUpdate();
    tp2.IP iP16 = null;
    boolean b17 = server0.removeException(iP16);
    java.lang.String str18 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509022497L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509022497L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509022497, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509022497, exceptions=(), bans={}]"));

  }

  @Test
  public void test348() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test348"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    server0.update();
    server0.update();
    tp2.ITime iTime9 = server0.getTime();
    server0.update();
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    java.lang.String str16 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509022502L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509022502, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509022502, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509022502, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509022502, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509022502, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509022502, exceptions=(), bans={}]"));

  }

  @Test
  public void test349() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test349"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    java.lang.String str3 = server0.toString();
    server0.update();
    long long5 = server0.getLastUpdate();
    tp2.Server server6 = new tp2.Server();
    long long7 = server6.getLastUpdate();
    java.lang.String str8 = server6.toString();
    tp2.IP iP9 = null;
    boolean b10 = server6.removeBan(iP9);
    tp2.Server server11 = new tp2.Server();
    tp2.ITime iTime12 = server11.getTime();
    server11.update();
    tp2.ITime iTime14 = server11.getTime();
    long long15 = server11.getLastUpdate();
    tp2.IP iP16 = null;
    boolean b17 = server11.removeBan(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    tp2.IP iP20 = null;
    boolean b21 = server18.removeException(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server18.connect(iP22);
    tp2.Server server24 = new tp2.Server();
    long long25 = server24.getLastUpdate();
    tp2.ITime iTime26 = server24.getTime();
    server18.setTime(iTime26);
    server11.setTime(iTime26);
    server6.setTime(iTime26);
    tp2.IP iP30 = null;
    boolean b31 = server6.removeBan(iP30);
    long long32 = server6.getLastUpdate();
    tp2.Server server33 = new tp2.Server();
    tp2.ITime iTime34 = server33.getTime();
    server33.update();
    tp2.ITime iTime36 = server33.getTime();
    tp2.Server server37 = new tp2.Server();
    long long38 = server37.getLastUpdate();
    tp2.ITime iTime39 = server37.getTime();
    server33.setTime(iTime39);
    java.lang.String str41 = server33.toString();
    tp2.Server server42 = new tp2.Server();
    tp2.ITime iTime43 = server42.getTime();
    server42.update();
    tp2.ITime iTime45 = server42.getTime();
    tp2.Server server46 = new tp2.Server();
    long long47 = server46.getLastUpdate();
    tp2.ITime iTime48 = server46.getTime();
    server42.setTime(iTime48);
    server33.setTime(iTime48);
    server6.setTime(iTime48);
    tp2.Server server52 = new tp2.Server();
    tp2.ITime iTime53 = server52.getTime();
    server52.update();
    tp2.ITime iTime55 = server52.getTime();
    tp2.IP iP56 = null;
    boolean b57 = server52.connect(iP56);
    tp2.IP iP58 = null;
    boolean b59 = server52.connect(iP58);
    tp2.IP iP60 = null;
    boolean b61 = server52.removeException(iP60);
    tp2.IP iP62 = null;
    boolean b63 = server52.removeBan(iP62);
    tp2.ITime iTime64 = server52.getTime();
    server6.setTime(iTime64);
    server0.setTime(iTime64);
    long long67 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=1465509022505, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=1465509022505, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509022505L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509022506L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long25 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long32 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long38 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "Server [lastUpdate=1465509022507, exceptions=(), bans={}]"+ "'", str41.equals("Server [lastUpdate=1465509022507, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long47 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long67 == 1465509022505L);

  }

  @Test
  public void test350() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test350"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.Server server4 = new tp2.Server();
    tp2.ITime iTime5 = server4.getTime();
    server4.update();
    tp2.ITime iTime7 = server4.getTime();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    tp2.ITime iTime10 = server8.getTime();
    server4.setTime(iTime10);
    tp2.ITime iTime12 = server4.getTime();
    server0.setTime(iTime12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    server0.update();
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.IP iP20 = null;
    boolean b21 = server17.connect(iP20);
    long long22 = server17.getLastUpdate();
    java.lang.String str23 = server17.toString();
    java.lang.String str24 = server17.toString();
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    server25.update();
    tp2.ITime iTime28 = server25.getTime();
    tp2.Server server29 = new tp2.Server();
    long long30 = server29.getLastUpdate();
    tp2.ITime iTime31 = server29.getTime();
    server25.setTime(iTime31);
    tp2.ITime iTime33 = server25.getTime();
    server17.setTime(iTime33);
    server0.setTime(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 1465509022555L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465509022555, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465509022555, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465509022555, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465509022555, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);

  }

  @Test
  public void test351() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test351"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeBan(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server0.connect(iP25);
    tp2.Server server27 = new tp2.Server();
    tp2.ITime iTime28 = server27.getTime();
    tp2.Server server29 = new tp2.Server();
    tp2.ITime iTime30 = server29.getTime();
    server27.setTime(iTime30);
    server27.update();
    java.lang.String str33 = server27.toString();
    tp2.ITime iTime34 = server27.getTime();
    server0.setTime(iTime34);
    tp2.IP iP36 = null;
    boolean b37 = server0.connect(iP36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "Server [lastUpdate=1465509022579, exceptions=(), bans={}]"+ "'", str33.equals("Server [lastUpdate=1465509022579, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);

  }

  @Test
  public void test352() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test352"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    long long12 = server0.getLastUpdate();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.ITime iTime18 = server15.getTime();
    tp2.IP iP19 = null;
    boolean b20 = server15.removeBan(iP19);
    server15.update();
    long long22 = server15.getLastUpdate();
    tp2.ITime iTime23 = server15.getTime();
    server0.setTime(iTime23);
    java.lang.String str25 = server0.toString();
    tp2.IP iP26 = null;
    boolean b27 = server0.connect(iP26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509022596, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509022596, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509022596, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509022596, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509022596L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 1465509022596L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Server [lastUpdate=1465509022596, exceptions=(), bans={}]"+ "'", str25.equals("Server [lastUpdate=1465509022596, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);

  }

  @Test
  public void test353() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test353"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.ITime iTime3 = null;
    server0.setTime(iTime3);
    tp2.ITime iTime5 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(iTime5);

  }

  @Test
  public void test354() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test354"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    long long2 = server0.getLastUpdate();
    tp2.ITime iTime3 = server0.getTime();
    tp2.ITime iTime4 = server0.getTime();
    tp2.IP iP5 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b6 = server0.addException(iP5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long2 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime4);

  }

  @Test
  public void test355() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test355"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    tp2.ITime iTime11 = server0.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.connect(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509022603L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);

  }

  @Test
  public void test356() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test356"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    long long11 = server0.getLastUpdate();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server12.removeException(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server12.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server12.connect(iP22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    server24.update();
    tp2.ITime iTime27 = server24.getTime();
    server12.setTime(iTime27);
    server0.setTime(iTime27);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509022609L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509022609L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);

  }

  @Test
  public void test357() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test357"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    long long9 = server5.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server5.removeBan(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server12.removeException(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server12.setTime(iTime20);
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    server0.update();
    long long27 = server0.getLastUpdate();
    tp2.IP iP28 = null;
    boolean b29 = server0.removeException(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server0.removeException(iP30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509022616L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465509022617L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);

  }

  @Test
  public void test358() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test358"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    server0.update();
    server0.update();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server9.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server9.removeException(iP13);
    long long15 = server9.getLastUpdate();
    tp2.ITime iTime16 = server9.getTime();
    tp2.ITime iTime17 = server9.getTime();
    java.lang.String str18 = server9.toString();
    tp2.Server server19 = new tp2.Server();
    tp2.ITime iTime20 = server19.getTime();
    server19.update();
    tp2.IP iP22 = null;
    boolean b23 = server19.connect(iP22);
    long long24 = server19.getLastUpdate();
    java.lang.String str25 = server19.toString();
    tp2.IP iP26 = null;
    boolean b27 = server19.connect(iP26);
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    server28.update();
    tp2.ITime iTime31 = server28.getTime();
    tp2.IP iP32 = null;
    boolean b33 = server28.removeBan(iP32);
    server28.update();
    tp2.Server server35 = new tp2.Server();
    tp2.ITime iTime36 = server35.getTime();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    server35.setTime(iTime38);
    server35.update();
    java.lang.String str41 = server35.toString();
    tp2.ITime iTime42 = server35.getTime();
    server28.setTime(iTime42);
    tp2.ITime iTime44 = server28.getTime();
    tp2.ITime iTime45 = server28.getTime();
    server19.setTime(iTime45);
    tp2.ITime iTime47 = server19.getTime();
    server9.setTime(iTime47);
    tp2.ITime iTime49 = server9.getTime();
    server0.setTime(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509022626L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Server [lastUpdate=1465509022626, exceptions=(), bans={}]"+ "'", str25.equals("Server [lastUpdate=1465509022626, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "Server [lastUpdate=1465509022628, exceptions=(), bans={}]"+ "'", str41.equals("Server [lastUpdate=1465509022628, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);

  }

  @Test
  public void test359() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test359"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    long long11 = server0.getLastUpdate();
    long long12 = server0.getLastUpdate();
    long long13 = server0.getLastUpdate();
    long long14 = server0.getLastUpdate();
    java.lang.String str15 = server0.toString();
    tp2.ITime iTime16 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509022664L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509022664L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509022664L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509022664L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509022664L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=1465509022664, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=1465509022664, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);

  }

  @Test
  public void test360() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test360"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test361() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test361"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    server0.update();
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test362() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test362"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = server0.addException(iP10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test363() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test363"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    long long9 = server0.getLastUpdate();
    tp2.ITime iTime10 = server0.getTime();
    long long11 = server0.getLastUpdate();
    tp2.ITime iTime12 = server0.getTime();
    long long13 = server0.getLastUpdate();
    tp2.ITime iTime14 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);

  }

  @Test
  public void test364() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test364"); }


    tp2.Server server0 = new tp2.Server();
    tp2.IP iP1 = null;
    boolean b2 = server0.connect(iP1);
    java.lang.String str3 = server0.toString();
    tp2.ITime iTime4 = server0.getTime();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b7 = server0.addException(iP6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);

  }

  @Test
  public void test365() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test365"); }


    tp2.Server server0 = new tp2.Server();
    java.lang.String str1 = server0.toString();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    java.lang.String str4 = server0.toString();
    long long5 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str1.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);

  }

  @Test
  public void test366() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test366"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.ITime iTime10 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);

  }

  @Test
  public void test367() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test367"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    java.lang.String str7 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509022711, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509022711, exceptions=(), bans={}]"));

  }

  @Test
  public void test368() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test368"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    long long19 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);

  }

  @Test
  public void test369() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test369"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    tp2.Server server11 = new tp2.Server();
    long long12 = server11.getLastUpdate();
    tp2.ITime iTime13 = server11.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server11.removeBan(iP14);
    tp2.Server server16 = new tp2.Server();
    long long17 = server16.getLastUpdate();
    server16.update();
    tp2.IP iP19 = null;
    boolean b20 = server16.removeBan(iP19);
    tp2.Server server21 = new tp2.Server();
    tp2.ITime iTime22 = server21.getTime();
    server21.update();
    tp2.ITime iTime24 = server21.getTime();
    server16.setTime(iTime24);
    server11.setTime(iTime24);
    java.lang.String str27 = server11.toString();
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    tp2.IP iP30 = null;
    boolean b31 = server28.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server28.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server28.removeException(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server28.connect(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server28.removeException(iP38);
    java.lang.String str40 = server28.toString();
    tp2.IP iP41 = null;
    boolean b42 = server28.removeBan(iP41);
    tp2.Server server43 = new tp2.Server();
    long long44 = server43.getLastUpdate();
    server43.update();
    tp2.IP iP46 = null;
    boolean b47 = server43.removeBan(iP46);
    tp2.Server server48 = new tp2.Server();
    long long49 = server48.getLastUpdate();
    server48.update();
    tp2.IP iP51 = null;
    boolean b52 = server48.removeException(iP51);
    server48.update();
    tp2.ITime iTime54 = server48.getTime();
    server43.setTime(iTime54);
    tp2.IP iP56 = null;
    boolean b57 = server43.removeException(iP56);
    tp2.IP iP58 = null;
    boolean b59 = server43.connect(iP58);
    tp2.ITime iTime60 = server43.getTime();
    server28.setTime(iTime60);
    server11.setTime(iTime60);
    server0.setTime(iTime60);
    tp2.IP iP64 = null;
    boolean b65 = server0.removeException(iP64);
    tp2.IP iP66 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b67 = server0.addException(iP66);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509022713, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509022713, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509022713, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509022713, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509022713L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str27.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str40.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long44 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long49 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);

  }

  @Test
  public void test370() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test370"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    server0.update();
    tp2.IP iP12 = null;
    boolean b13 = server0.connect(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeException(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509022717L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test371() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test371"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.ITime iTime9 = server0.getTime();
    java.lang.String str10 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509022728L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509022728, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509022728, exceptions=(), bans={}]"));

  }

  @Test
  public void test372() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test372"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    server0.update();
    tp2.ITime iTime9 = server0.getTime();
    server0.update();
    long long11 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509022736, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509022736, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509022736, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509022736, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509022737L);

  }

  @Test
  public void test373() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test373"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.ITime iTime21 = server13.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    tp2.IP iP24 = null;
    boolean b25 = server0.connect(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server0.removeException(iP28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);

  }

  @Test
  public void test374() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test374"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    tp2.IP iP17 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = server0.addException(iP17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test375() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test375"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    long long14 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);

  }

  @Test
  public void test376() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test376"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    java.lang.String str13 = server0.toString();
    long long14 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509022751L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509022751L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509022751, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509022751, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509022751L);

  }

  @Test
  public void test377() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test377"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.connect(iP12);
    tp2.ITime iTime14 = server0.getTime();
    tp2.ITime iTime15 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);

  }

  @Test
  public void test378() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test378"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    long long15 = server0.getLastUpdate();
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    tp2.IP iP20 = null;
    boolean b21 = server16.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server16.connect(iP22);
    tp2.ITime iTime24 = server16.getTime();
    server0.setTime(iTime24);
    tp2.IP iP26 = null;
    boolean b27 = server0.removeBan(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server0.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server0.connect(iP30);
    java.lang.String str32 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509022758L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509022758L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "Server [lastUpdate=1465509022758, exceptions=(), bans={}]"+ "'", str32.equals("Server [lastUpdate=1465509022758, exceptions=(), bans={}]"));

  }

  @Test
  public void test379() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test379"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    server0.update();
    long long8 = server0.getLastUpdate();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server9.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server9.removeException(iP13);
    long long15 = server9.getLastUpdate();
    tp2.ITime iTime16 = server9.getTime();
    tp2.IP iP17 = null;
    boolean b18 = server9.removeException(iP17);
    tp2.ITime iTime19 = server9.getTime();
    server0.setTime(iTime19);
    tp2.IP iP21 = null;
    boolean b22 = server0.removeBan(iP21);
    long long23 = server0.getLastUpdate();
    tp2.IP iP24 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b25 = server0.addException(iP24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509022777L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509022777L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 1465509022777L);

  }

  @Test
  public void test380() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test380"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    server0.update();
    tp2.ITime iTime12 = server0.getTime();
    long long13 = server0.getLastUpdate();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    tp2.ITime iTime16 = server0.getTime();
    tp2.IP iP17 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = server0.addException(iP17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509022809L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509022809L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);

  }

  @Test
  public void test381() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test381"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    java.lang.String str10 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509022810, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509022810, exceptions=(), bans={}]"));

  }

  @Test
  public void test382() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test382"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server10.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server10.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server10.removeException(iP16);
    java.lang.String str18 = server10.toString();
    long long19 = server10.getLastUpdate();
    tp2.ITime iTime20 = server10.getTime();
    server0.setTime(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);

  }

  @Test
  public void test383() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test383"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    server5.update();
    tp2.ITime iTime8 = server5.getTime();
    server0.setTime(iTime8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    long long14 = server10.getLastUpdate();
    long long15 = server10.getLastUpdate();
    tp2.IP iP16 = null;
    boolean b17 = server10.connect(iP16);
    server10.update();
    tp2.Server server19 = new tp2.Server();
    long long20 = server19.getLastUpdate();
    long long21 = server19.getLastUpdate();
    tp2.ITime iTime22 = server19.getTime();
    server10.setTime(iTime22);
    server10.update();
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    tp2.IP iP27 = null;
    boolean b28 = server25.removeException(iP27);
    tp2.IP iP29 = null;
    boolean b30 = server25.connect(iP29);
    long long31 = server25.getLastUpdate();
    server25.update();
    tp2.IP iP33 = null;
    boolean b34 = server25.removeException(iP33);
    tp2.Server server35 = new tp2.Server();
    tp2.ITime iTime36 = server35.getTime();
    server35.update();
    tp2.ITime iTime38 = server35.getTime();
    tp2.IP iP39 = null;
    boolean b40 = server35.removeBan(iP39);
    java.lang.String str41 = server35.toString();
    java.lang.String str42 = server35.toString();
    tp2.ITime iTime43 = server35.getTime();
    server25.setTime(iTime43);
    server10.setTime(iTime43);
    server0.setTime(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509022817L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509022817L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "Server [lastUpdate=1465509022819, exceptions=(), bans={}]"+ "'", str41.equals("Server [lastUpdate=1465509022819, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "Server [lastUpdate=1465509022819, exceptions=(), bans={}]"+ "'", str42.equals("Server [lastUpdate=1465509022819, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);

  }

  @Test
  public void test384() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test384"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);

  }

  @Test
  public void test385() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test385"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    tp2.Server server5 = new tp2.Server();
    tp2.ITime iTime6 = server5.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server5.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server5.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server5.removeException(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server5.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server5.connect(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    server5.setTime(iTime20);
    server0.setTime(iTime20);
    tp2.IP iP23 = null;
    boolean b24 = server0.removeException(iP23);
    tp2.ITime iTime25 = server0.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server0.connect(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server0.removeException(iP28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);

  }

  @Test
  public void test386() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test386"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server7.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server7.connect(iP15);
    java.lang.String str17 = server7.toString();
    tp2.ITime iTime18 = server7.getTime();
    server0.setTime(iTime18);
    java.lang.String str20 = server0.toString();
    tp2.Server server21 = new tp2.Server();
    tp2.ITime iTime22 = server21.getTime();
    server21.update();
    tp2.IP iP24 = null;
    boolean b25 = server21.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    tp2.ITime iTime27 = server26.getTime();
    tp2.IP iP28 = null;
    boolean b29 = server26.removeException(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server26.connect(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server26.removeException(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server26.connect(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server26.connect(iP36);
    tp2.Server server38 = new tp2.Server();
    tp2.ITime iTime39 = server38.getTime();
    server38.update();
    tp2.ITime iTime41 = server38.getTime();
    server26.setTime(iTime41);
    server21.setTime(iTime41);
    tp2.IP iP44 = null;
    boolean b45 = server21.removeException(iP44);
    tp2.ITime iTime46 = server21.getTime();
    tp2.IP iP47 = null;
    boolean b48 = server21.removeException(iP47);
    tp2.Server server49 = new tp2.Server();
    long long50 = server49.getLastUpdate();
    server49.update();
    tp2.IP iP52 = null;
    boolean b53 = server49.removeBan(iP52);
    tp2.Server server54 = new tp2.Server();
    long long55 = server54.getLastUpdate();
    server54.update();
    tp2.IP iP57 = null;
    boolean b58 = server54.removeException(iP57);
    server54.update();
    tp2.ITime iTime60 = server54.getTime();
    server49.setTime(iTime60);
    long long62 = server49.getLastUpdate();
    tp2.ITime iTime63 = server49.getTime();
    server21.setTime(iTime63);
    server0.setTime(iTime63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=1465509022848, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=1465509022848, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long50 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long55 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long62 == 1465509022851L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime63);

  }

  @Test
  public void test387() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test387"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.IP iP20 = null;
    boolean b21 = server0.removeException(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server0.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server0.connect(iP24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);

  }

  @Test
  public void test388() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test388"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.ITime iTime11 = server0.getTime();
    java.lang.String str12 = server0.toString();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    tp2.ITime iTime17 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);

  }

  @Test
  public void test389() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test389"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    server7.update();
    tp2.ITime iTime10 = server7.getTime();
    long long11 = server7.getLastUpdate();
    long long12 = server7.getLastUpdate();
    long long13 = server7.getLastUpdate();
    tp2.ITime iTime14 = server7.getTime();
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.ITime iTime18 = server15.getTime();
    tp2.Server server19 = new tp2.Server();
    long long20 = server19.getLastUpdate();
    tp2.ITime iTime21 = server19.getTime();
    server15.setTime(iTime21);
    java.lang.String str23 = server15.toString();
    tp2.ITime iTime24 = server15.getTime();
    server7.setTime(iTime24);
    server0.setTime(iTime24);
    tp2.Server server27 = new tp2.Server();
    tp2.ITime iTime28 = server27.getTime();
    server27.update();
    tp2.ITime iTime30 = server27.getTime();
    tp2.IP iP31 = null;
    boolean b32 = server27.removeBan(iP31);
    java.lang.String str33 = server27.toString();
    java.lang.String str34 = server27.toString();
    server27.update();
    tp2.ITime iTime36 = server27.getTime();
    server0.setTime(iTime36);
    tp2.IP iP38 = null;
    boolean b39 = server0.removeBan(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server0.removeException(iP40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509022881L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509022881L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509022881L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465509022881, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465509022881, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "Server [lastUpdate=1465509022882, exceptions=(), bans={}]"+ "'", str33.equals("Server [lastUpdate=1465509022882, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "Server [lastUpdate=1465509022882, exceptions=(), bans={}]"+ "'", str34.equals("Server [lastUpdate=1465509022882, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);

  }

  @Test
  public void test390() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test390"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    server0.update();
    tp2.ITime iTime8 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509022898L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);

  }

  @Test
  public void test391() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test391"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.ITime iTime12 = server9.getTime();
    long long13 = server9.getLastUpdate();
    long long14 = server9.getLastUpdate();
    long long15 = server9.getLastUpdate();
    tp2.ITime iTime16 = server9.getTime();
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    tp2.Server server21 = new tp2.Server();
    long long22 = server21.getLastUpdate();
    tp2.ITime iTime23 = server21.getTime();
    server17.setTime(iTime23);
    java.lang.String str25 = server17.toString();
    tp2.ITime iTime26 = server17.getTime();
    server9.setTime(iTime26);
    tp2.IP iP28 = null;
    boolean b29 = server9.removeException(iP28);
    long long30 = server9.getLastUpdate();
    tp2.ITime iTime31 = server9.getTime();
    server0.setTime(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509022900L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509022901L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 1465509022901L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509022901L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Server [lastUpdate=1465509022901, exceptions=(), bans={}]"+ "'", str25.equals("Server [lastUpdate=1465509022901, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 1465509022901L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);

  }

  @Test
  public void test392() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test392"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    java.lang.String str4 = server0.toString();
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    long long11 = server5.getLastUpdate();
    java.lang.String str12 = server5.toString();
    tp2.ITime iTime13 = server5.getTime();
    server0.setTime(iTime13);
    tp2.ITime iTime15 = server0.getTime();
    server0.update();
    tp2.IP iP17 = null;
    boolean b18 = server0.removeBan(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=1465509022926, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=1465509022926, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509022926L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=1465509022926, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=1465509022926, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test393() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test393"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    server12.update();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeException(iP15);
    server12.update();
    long long18 = server12.getLastUpdate();
    tp2.IP iP19 = null;
    boolean b20 = server12.removeBan(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server12.removeBan(iP21);
    long long23 = server12.getLastUpdate();
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server24.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server24.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server24.connect(iP34);
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.ITime iTime39 = server36.getTime();
    server24.setTime(iTime39);
    server12.setTime(iTime39);
    server0.setTime(iTime39);
    tp2.IP iP43 = null;
    boolean b44 = server0.connect(iP43);
    long long45 = server0.getLastUpdate();
    tp2.IP iP46 = null;
    boolean b47 = server0.removeBan(iP46);
    tp2.IP iP48 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b49 = server0.addException(iP48);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509022929L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509022929, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509022929, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509022929L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 1465509022929L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long45 == 1465509022929L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);

  }

  @Test
  public void test394() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test394"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    java.lang.String str10 = server0.toString();
    tp2.IP iP11 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b12 = server0.addException(iP11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509022932, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509022932, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509022932, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509022932, exceptions=(), bans={}]"));

  }

  @Test
  public void test395() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test395"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server6.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server6.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server6.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server6.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server6.connect(iP16);
    tp2.Server server18 = new tp2.Server();
    tp2.ITime iTime19 = server18.getTime();
    server18.update();
    tp2.ITime iTime21 = server18.getTime();
    server6.setTime(iTime21);
    server0.setTime(iTime21);
    tp2.IP iP24 = null;
    boolean b25 = server0.removeBan(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server0.removeException(iP26);
    java.lang.String str28 = server0.toString();
    tp2.Server server29 = new tp2.Server();
    tp2.ITime iTime30 = server29.getTime();
    server29.update();
    tp2.ITime iTime32 = server29.getTime();
    tp2.IP iP33 = null;
    boolean b34 = server29.removeBan(iP33);
    server29.update();
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    tp2.Server server38 = new tp2.Server();
    tp2.ITime iTime39 = server38.getTime();
    server36.setTime(iTime39);
    server36.update();
    java.lang.String str42 = server36.toString();
    tp2.ITime iTime43 = server36.getTime();
    server29.setTime(iTime43);
    server0.setTime(iTime43);
    tp2.ITime iTime46 = server0.getTime();
    tp2.IP iP47 = null;
    boolean b48 = server0.removeException(iP47);
    long long49 = server0.getLastUpdate();
    tp2.IP iP50 = null;
    boolean b51 = server0.connect(iP50);
    tp2.IP iP52 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b53 = server0.addException(iP52);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "Server [lastUpdate=1465509022937, exceptions=(), bans={}]"+ "'", str28.equals("Server [lastUpdate=1465509022937, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "Server [lastUpdate=1465509022943, exceptions=(), bans={}]"+ "'", str42.equals("Server [lastUpdate=1465509022943, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long49 == 1465509022937L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);

  }

  @Test
  public void test396() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test396"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.Server server4 = new tp2.Server();
    tp2.ITime iTime5 = server4.getTime();
    server4.update();
    tp2.ITime iTime7 = server4.getTime();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    tp2.ITime iTime10 = server8.getTime();
    server4.setTime(iTime10);
    tp2.ITime iTime12 = server4.getTime();
    server0.setTime(iTime12);
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    tp2.ITime iTime16 = server0.getTime();
    tp2.IP iP17 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = server0.addException(iP17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);

  }

  @Test
  public void test397() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test397"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    java.lang.String str3 = server0.toString();
    long long4 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Server [lastUpdate=1465509022946, exceptions=(), bans={}]"+ "'", str3.equals("Server [lastUpdate=1465509022946, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509022946L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test398() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test398"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    server12.update();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeException(iP15);
    server12.update();
    long long18 = server12.getLastUpdate();
    tp2.IP iP19 = null;
    boolean b20 = server12.removeBan(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server12.removeBan(iP21);
    long long23 = server12.getLastUpdate();
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.IP iP30 = null;
    boolean b31 = server24.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server24.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server24.connect(iP34);
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.ITime iTime39 = server36.getTime();
    server24.setTime(iTime39);
    server12.setTime(iTime39);
    server0.setTime(iTime39);
    java.lang.String str43 = server0.toString();
    tp2.IP iP44 = null;
    boolean b45 = server0.removeException(iP44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509022947L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509022947, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509022947, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509022947L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 1465509022947L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "Server [lastUpdate=1465509022947, exceptions=(), bans={}]"+ "'", str43.equals("Server [lastUpdate=1465509022947, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);

  }

  @Test
  public void test399() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test399"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server0.removeException(iP21);
    long long23 = server0.getLastUpdate();
    server0.update();
    long long25 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long25 == 1465509022956L);

  }

  @Test
  public void test400() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test400"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.ITime iTime11 = server0.getTime();
    java.lang.String str12 = server0.toString();
    tp2.ITime iTime13 = server0.getTime();
    tp2.ITime iTime14 = server0.getTime();
    java.lang.String str15 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test401() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test401"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    java.lang.String str15 = server0.toString();
    long long16 = server0.getLastUpdate();
    tp2.IP iP17 = null;
    boolean b18 = server0.removeBan(iP17);
    tp2.Server server19 = new tp2.Server();
    tp2.ITime iTime20 = server19.getTime();
    server19.update();
    tp2.ITime iTime22 = server19.getTime();
    tp2.IP iP23 = null;
    boolean b24 = server19.connect(iP23);
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    tp2.IP iP27 = null;
    boolean b28 = server25.removeException(iP27);
    tp2.IP iP29 = null;
    boolean b30 = server25.connect(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server25.removeException(iP31);
    tp2.IP iP33 = null;
    boolean b34 = server25.connect(iP33);
    tp2.IP iP35 = null;
    boolean b36 = server25.connect(iP35);
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    server37.update();
    tp2.ITime iTime40 = server37.getTime();
    server25.setTime(iTime40);
    server19.setTime(iTime40);
    tp2.IP iP43 = null;
    boolean b44 = server19.removeBan(iP43);
    tp2.IP iP45 = null;
    boolean b46 = server19.removeException(iP45);
    java.lang.String str47 = server19.toString();
    tp2.Server server48 = new tp2.Server();
    tp2.ITime iTime49 = server48.getTime();
    server48.update();
    tp2.ITime iTime51 = server48.getTime();
    tp2.IP iP52 = null;
    boolean b53 = server48.removeBan(iP52);
    server48.update();
    tp2.Server server55 = new tp2.Server();
    tp2.ITime iTime56 = server55.getTime();
    tp2.Server server57 = new tp2.Server();
    tp2.ITime iTime58 = server57.getTime();
    server55.setTime(iTime58);
    server55.update();
    java.lang.String str61 = server55.toString();
    tp2.ITime iTime62 = server55.getTime();
    server48.setTime(iTime62);
    server19.setTime(iTime62);
    tp2.ITime iTime65 = server19.getTime();
    tp2.IP iP66 = null;
    boolean b67 = server19.removeException(iP66);
    tp2.ITime iTime68 = server19.getTime();
    server0.setTime(iTime68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509022967L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Server [lastUpdate=1465509022967, exceptions=(), bans={}]"+ "'", str15.equals("Server [lastUpdate=1465509022967, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 1465509022967L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "Server [lastUpdate=1465509022969, exceptions=(), bans={}]"+ "'", str47.equals("Server [lastUpdate=1465509022969, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "Server [lastUpdate=1465509022971, exceptions=(), bans={}]"+ "'", str61.equals("Server [lastUpdate=1465509022971, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime68);

  }

  @Test
  public void test402() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test402"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    tp2.ITime iTime14 = server12.getTime();
    server8.setTime(iTime14);
    java.lang.String str16 = server8.toString();
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    tp2.Server server21 = new tp2.Server();
    long long22 = server21.getLastUpdate();
    tp2.ITime iTime23 = server21.getTime();
    server17.setTime(iTime23);
    server8.setTime(iTime23);
    server0.setTime(iTime23);
    tp2.Server server27 = new tp2.Server();
    tp2.ITime iTime28 = server27.getTime();
    server27.update();
    tp2.IP iP30 = null;
    boolean b31 = server27.connect(iP30);
    long long32 = server27.getLastUpdate();
    tp2.Server server33 = new tp2.Server();
    tp2.ITime iTime34 = server33.getTime();
    server33.update();
    tp2.ITime iTime36 = server33.getTime();
    tp2.IP iP37 = null;
    boolean b38 = server33.removeBan(iP37);
    server33.update();
    tp2.ITime iTime40 = server33.getTime();
    server27.setTime(iTime40);
    server0.setTime(iTime40);
    tp2.IP iP43 = null;
    boolean b44 = server0.removeBan(iP43);
    tp2.IP iP45 = null;
    boolean b46 = server0.removeException(iP45);
    tp2.IP iP47 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b48 = server0.addException(iP47);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509023015, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509023015, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long32 == 1465509023018L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);

  }

  @Test
  public void test403() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test403"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    long long9 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);

  }

  @Test
  public void test404() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test404"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.Server server11 = new tp2.Server();
    tp2.ITime iTime12 = server11.getTime();
    server11.update();
    tp2.IP iP14 = null;
    boolean b15 = server11.connect(iP14);
    long long16 = server11.getLastUpdate();
    java.lang.String str17 = server11.toString();
    java.lang.String str18 = server11.toString();
    java.lang.String str19 = server11.toString();
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    server20.update();
    tp2.ITime iTime23 = server20.getTime();
    long long24 = server20.getLastUpdate();
    tp2.IP iP25 = null;
    boolean b26 = server20.removeBan(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server20.removeException(iP27);
    tp2.Server server29 = new tp2.Server();
    long long30 = server29.getLastUpdate();
    server29.update();
    tp2.IP iP32 = null;
    boolean b33 = server29.removeException(iP32);
    server29.update();
    long long35 = server29.getLastUpdate();
    tp2.IP iP36 = null;
    boolean b37 = server29.connect(iP36);
    tp2.Server server38 = new tp2.Server();
    tp2.ITime iTime39 = server38.getTime();
    server38.update();
    tp2.ITime iTime41 = server38.getTime();
    server29.setTime(iTime41);
    server20.setTime(iTime41);
    server11.setTime(iTime41);
    server0.setTime(iTime41);
    tp2.Server server46 = new tp2.Server();
    tp2.ITime iTime47 = server46.getTime();
    tp2.IP iP48 = null;
    boolean b49 = server46.connect(iP48);
    tp2.IP iP50 = null;
    boolean b51 = server46.removeException(iP50);
    tp2.IP iP52 = null;
    boolean b53 = server46.removeException(iP52);
    tp2.IP iP54 = null;
    boolean b55 = server46.connect(iP54);
    tp2.IP iP56 = null;
    boolean b57 = server46.connect(iP56);
    tp2.IP iP58 = null;
    boolean b59 = server46.removeException(iP58);
    tp2.IP iP60 = null;
    boolean b61 = server46.connect(iP60);
    tp2.IP iP62 = null;
    boolean b63 = server46.removeBan(iP62);
    tp2.Server server64 = new tp2.Server();
    long long65 = server64.getLastUpdate();
    tp2.ITime iTime66 = server64.getTime();
    tp2.IP iP67 = null;
    boolean b68 = server64.removeException(iP67);
    tp2.IP iP69 = null;
    boolean b70 = server64.removeBan(iP69);
    long long71 = server64.getLastUpdate();
    java.lang.String str72 = server64.toString();
    tp2.ITime iTime73 = server64.getTime();
    long long74 = server64.getLastUpdate();
    java.lang.String str75 = server64.toString();
    tp2.IP iP76 = null;
    boolean b77 = server64.removeException(iP76);
    long long78 = server64.getLastUpdate();
    tp2.ITime iTime79 = server64.getTime();
    server46.setTime(iTime79);
    server0.setTime(iTime79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 1465509023021L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509023021, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509023021, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Server [lastUpdate=1465509023021, exceptions=(), bans={}]"+ "'", str18.equals("Server [lastUpdate=1465509023021, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509023021, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509023021, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509023022L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long35 == 1465509023022L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long65 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long71 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str72.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long74 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str75.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long78 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime79);

  }

  @Test
  public void test405() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test405"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    java.lang.String str4 = server0.toString();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    server0.update();
    server0.update();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str4.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test406() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test406"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    server0.update();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.ITime iTime13 = server0.getTime();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    tp2.IP iP20 = null;
    boolean b21 = server16.connect(iP20);
    java.lang.String str22 = server16.toString();
    tp2.IP iP23 = null;
    boolean b24 = server16.removeException(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server16.connect(iP25);
    java.lang.String str27 = server16.toString();
    long long28 = server16.getLastUpdate();
    tp2.Server server29 = new tp2.Server();
    tp2.ITime iTime30 = server29.getTime();
    server29.update();
    tp2.IP iP32 = null;
    boolean b33 = server29.connect(iP32);
    long long34 = server29.getLastUpdate();
    java.lang.String str35 = server29.toString();
    java.lang.String str36 = server29.toString();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    server37.update();
    tp2.ITime iTime40 = server37.getTime();
    tp2.Server server41 = new tp2.Server();
    long long42 = server41.getLastUpdate();
    tp2.ITime iTime43 = server41.getTime();
    server37.setTime(iTime43);
    tp2.ITime iTime45 = server37.getTime();
    server29.setTime(iTime45);
    server16.setTime(iTime45);
    tp2.IP iP48 = null;
    boolean b49 = server16.connect(iP48);
    server16.update();
    tp2.Server server51 = new tp2.Server();
    tp2.ITime iTime52 = server51.getTime();
    server51.update();
    tp2.IP iP54 = null;
    boolean b55 = server51.connect(iP54);
    long long56 = server51.getLastUpdate();
    tp2.Server server57 = new tp2.Server();
    long long58 = server57.getLastUpdate();
    long long59 = server57.getLastUpdate();
    java.lang.String str60 = server57.toString();
    tp2.Server server61 = new tp2.Server();
    tp2.ITime iTime62 = server61.getTime();
    server61.update();
    tp2.ITime iTime64 = server61.getTime();
    tp2.Server server65 = new tp2.Server();
    long long66 = server65.getLastUpdate();
    tp2.ITime iTime67 = server65.getTime();
    server61.setTime(iTime67);
    tp2.IP iP69 = null;
    boolean b70 = server61.connect(iP69);
    long long71 = server61.getLastUpdate();
    tp2.ITime iTime72 = server61.getTime();
    server57.setTime(iTime72);
    server51.setTime(iTime72);
    server16.setTime(iTime72);
    server0.setTime(iTime72);
    java.lang.String str77 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509023045L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509023045, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509023045, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Server [lastUpdate=1465509023046, exceptions=(), bans={}]"+ "'", str22.equals("Server [lastUpdate=1465509023046, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Server [lastUpdate=1465509023046, exceptions=(), bans={}]"+ "'", str27.equals("Server [lastUpdate=1465509023046, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465509023046L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long34 == 1465509023047L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "Server [lastUpdate=1465509023047, exceptions=(), bans={}]"+ "'", str35.equals("Server [lastUpdate=1465509023047, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "Server [lastUpdate=1465509023047, exceptions=(), bans={}]"+ "'", str36.equals("Server [lastUpdate=1465509023047, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long42 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long56 == 1465509023048L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long58 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long59 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str60.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long66 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long71 == 1465509023049L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "Server [lastUpdate=1465509023045, exceptions=(), bans={}]"+ "'", str77.equals("Server [lastUpdate=1465509023045, exceptions=(), bans={}]"));

  }

  @Test
  public void test407() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test407"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    java.lang.String str13 = server0.toString();
    java.lang.String str14 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test408() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test408"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    server13.update();
    tp2.IP iP16 = null;
    boolean b17 = server13.removeException(iP16);
    server13.update();
    long long19 = server13.getLastUpdate();
    tp2.IP iP20 = null;
    boolean b21 = server13.removeBan(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server13.removeBan(iP22);
    long long24 = server13.getLastUpdate();
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    tp2.IP iP27 = null;
    boolean b28 = server25.removeException(iP27);
    tp2.IP iP29 = null;
    boolean b30 = server25.connect(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server25.removeException(iP31);
    tp2.IP iP33 = null;
    boolean b34 = server25.connect(iP33);
    tp2.IP iP35 = null;
    boolean b36 = server25.connect(iP35);
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    server37.update();
    tp2.ITime iTime40 = server37.getTime();
    server25.setTime(iTime40);
    server13.setTime(iTime40);
    server0.setTime(iTime40);
    long long44 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509023090L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509023090, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509023090, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509023092L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509023092L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long44 == 1465509023090L);

  }

  @Test
  public void test409() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test409"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test410() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test410"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test411() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test411"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    java.lang.String str12 = server10.toString();
    server10.update();
    tp2.IP iP14 = null;
    boolean b15 = server10.removeBan(iP14);
    tp2.ITime iTime16 = server10.getTime();
    server0.setTime(iTime16);
    server0.update();
    long long19 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509023109, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509023109, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509023112L);

  }

  @Test
  public void test412() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test412"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    server0.update();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509023116, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509023116, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509023116, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509023116, exceptions=(), bans={}]"));

  }

  @Test
  public void test413() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test413"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.connect(iP15);
    long long17 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);

  }

  @Test
  public void test414() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test414"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    server0.update();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509023123L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509023123, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509023123, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test415() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test415"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.ITime iTime13 = null;
    server0.setTime(iTime13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeException(iP15);
    java.lang.String str17 = server0.toString();
    tp2.ITime iTime18 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509023124L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509023124, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509023124, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(iTime18);

  }

  @Test
  public void test416() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test416"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    long long9 = server0.getLastUpdate();
    long long10 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509023129L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509023129L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509023129L);

  }

  @Test
  public void test417() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test417"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.connect(iP11);
    long long13 = server7.getLastUpdate();
    server7.update();
    tp2.IP iP15 = null;
    boolean b16 = server7.removeException(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server17.removeBan(iP21);
    java.lang.String str23 = server17.toString();
    java.lang.String str24 = server17.toString();
    tp2.ITime iTime25 = server17.getTime();
    server7.setTime(iTime25);
    server0.setTime(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465509023131, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465509023131, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=1465509023131, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=1465509023131, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);

  }

  @Test
  public void test418() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test418"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    server0.update();
    server0.update();
    tp2.ITime iTime11 = server0.getTime();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);

  }

  @Test
  public void test419() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test419"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    long long4 = server0.getLastUpdate();
    java.lang.String str5 = server0.toString();
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str5.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);

  }

  @Test
  public void test420() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test420"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509023141L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test421() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test421"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    tp2.ITime iTime12 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);

  }

  @Test
  public void test422() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test422"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    java.lang.String str13 = server0.toString();
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeBan(iP16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509023145L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509023145, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509023145, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509023145, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509023145, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test423() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test423"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    server0.update();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.ITime iTime11 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509023151, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509023151, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509023151, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509023151, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);

  }

  @Test
  public void test424() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test424"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = null;
    server0.setTime(iTime12);
    java.lang.String str14 = server0.toString();
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.IP iP18 = null;
    boolean b19 = server15.connect(iP18);
    long long20 = server15.getLastUpdate();
    java.lang.String str21 = server15.toString();
    server15.update();
    server15.update();
    tp2.ITime iTime24 = server15.getTime();
    server0.setTime(iTime24);
    long long26 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465509023155L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Server [lastUpdate=1465509023155, exceptions=(), bans={}]"+ "'", str21.equals("Server [lastUpdate=1465509023155, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);

  }

  @Test
  public void test425() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test425"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    long long7 = server0.getLastUpdate();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509023158L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test426() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test426"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    java.lang.String str9 = server0.toString();
    long long10 = server0.getLastUpdate();
    long long11 = server0.getLastUpdate();
    long long12 = server0.getLastUpdate();
    tp2.ITime iTime13 = server0.getTime();
    tp2.Server server14 = new tp2.Server();
    long long15 = server14.getLastUpdate();
    long long16 = server14.getLastUpdate();
    java.lang.String str17 = server14.toString();
    server14.update();
    long long19 = server14.getLastUpdate();
    long long20 = server14.getLastUpdate();
    server14.update();
    tp2.Server server22 = new tp2.Server();
    tp2.ITime iTime23 = server22.getTime();
    server22.update();
    tp2.ITime iTime25 = server22.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server22.connect(iP26);
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    tp2.IP iP30 = null;
    boolean b31 = server28.removeException(iP30);
    tp2.IP iP32 = null;
    boolean b33 = server28.connect(iP32);
    tp2.IP iP34 = null;
    boolean b35 = server28.removeException(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server28.connect(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server28.connect(iP38);
    tp2.Server server40 = new tp2.Server();
    tp2.ITime iTime41 = server40.getTime();
    server40.update();
    tp2.ITime iTime43 = server40.getTime();
    server28.setTime(iTime43);
    server22.setTime(iTime43);
    tp2.IP iP46 = null;
    boolean b47 = server22.removeBan(iP46);
    tp2.IP iP48 = null;
    boolean b49 = server22.removeException(iP48);
    java.lang.String str50 = server22.toString();
    tp2.Server server51 = new tp2.Server();
    tp2.ITime iTime52 = server51.getTime();
    server51.update();
    tp2.ITime iTime54 = server51.getTime();
    tp2.IP iP55 = null;
    boolean b56 = server51.removeBan(iP55);
    server51.update();
    tp2.Server server58 = new tp2.Server();
    tp2.ITime iTime59 = server58.getTime();
    tp2.Server server60 = new tp2.Server();
    tp2.ITime iTime61 = server60.getTime();
    server58.setTime(iTime61);
    server58.update();
    java.lang.String str64 = server58.toString();
    tp2.ITime iTime65 = server58.getTime();
    server51.setTime(iTime65);
    server22.setTime(iTime65);
    tp2.ITime iTime68 = server22.getTime();
    tp2.IP iP69 = null;
    boolean b70 = server22.removeException(iP69);
    long long71 = server22.getLastUpdate();
    tp2.IP iP72 = null;
    boolean b73 = server22.connect(iP72);
    tp2.ITime iTime74 = server22.getTime();
    server14.setTime(iTime74);
    server0.setTime(iTime74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509023159, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509023159, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509023159L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509023159L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509023159L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509023160L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465509023160L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "Server [lastUpdate=1465509023160, exceptions=(), bans={}]"+ "'", str50.equals("Server [lastUpdate=1465509023160, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "Server [lastUpdate=1465509023163, exceptions=(), bans={}]"+ "'", str64.equals("Server [lastUpdate=1465509023163, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long71 == 1465509023160L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime74);

  }

  @Test
  public void test427() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test427"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.ITime iTime12 = server0.getTime();
    long long13 = server0.getLastUpdate();
    java.lang.String str14 = server0.toString();
    long long15 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509023201L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465509023201, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465509023201, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509023201L);

  }

  @Test
  public void test428() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test428"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeException(iP5);
    server0.update();
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.ITime iTime10 = server0.getTime();
    server0.update();
    tp2.ITime iTime12 = server0.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test429() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test429"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    tp2.ITime iTime17 = server0.getTime();
    tp2.IP iP18 = null;
    boolean b19 = server0.connect(iP18);
    long long20 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);

  }

  @Test
  public void test430() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test430"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server0.removeBan(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509023224L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);

  }

  @Test
  public void test431() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test431"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server0.removeBan(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server0.connect(iP23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);

  }

  @Test
  public void test432() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test432"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509023230L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509023230, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509023230, exceptions=(), bans={}]"));

  }

  @Test
  public void test433() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test433"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    server0.update();
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    tp2.Server server14 = new tp2.Server();
    long long15 = server14.getLastUpdate();
    tp2.ITime iTime16 = server14.getTime();
    server10.setTime(iTime16);
    tp2.IP iP18 = null;
    boolean b19 = server10.connect(iP18);
    long long20 = server10.getLastUpdate();
    java.lang.String str21 = server10.toString();
    tp2.ITime iTime22 = server10.getTime();
    tp2.IP iP23 = null;
    boolean b24 = server10.removeException(iP23);
    tp2.ITime iTime25 = server10.getTime();
    server0.setTime(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465509023230L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Server [lastUpdate=1465509023230, exceptions=(), bans={}]"+ "'", str21.equals("Server [lastUpdate=1465509023230, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);

  }

  @Test
  public void test434() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test434"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    long long11 = server0.getLastUpdate();
    tp2.IP iP12 = null;
    boolean b13 = server0.connect(iP12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509023239L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509023239L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);

  }

  @Test
  public void test435() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test435"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    long long9 = server0.getLastUpdate();
    tp2.ITime iTime10 = server0.getTime();
    tp2.Server server11 = new tp2.Server();
    tp2.ITime iTime12 = server11.getTime();
    server11.update();
    tp2.ITime iTime14 = server11.getTime();
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    tp2.ITime iTime17 = server15.getTime();
    server11.setTime(iTime17);
    tp2.IP iP19 = null;
    boolean b20 = server11.connect(iP19);
    long long21 = server11.getLastUpdate();
    java.lang.String str22 = server11.toString();
    tp2.Server server23 = new tp2.Server();
    long long24 = server23.getLastUpdate();
    java.lang.String str25 = server23.toString();
    tp2.IP iP26 = null;
    boolean b27 = server23.removeBan(iP26);
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    server28.update();
    tp2.ITime iTime31 = server28.getTime();
    long long32 = server28.getLastUpdate();
    tp2.IP iP33 = null;
    boolean b34 = server28.removeBan(iP33);
    tp2.Server server35 = new tp2.Server();
    tp2.ITime iTime36 = server35.getTime();
    tp2.IP iP37 = null;
    boolean b38 = server35.removeException(iP37);
    tp2.IP iP39 = null;
    boolean b40 = server35.connect(iP39);
    tp2.Server server41 = new tp2.Server();
    long long42 = server41.getLastUpdate();
    tp2.ITime iTime43 = server41.getTime();
    server35.setTime(iTime43);
    server28.setTime(iTime43);
    server23.setTime(iTime43);
    server11.setTime(iTime43);
    server11.update();
    long long49 = server11.getLastUpdate();
    tp2.ITime iTime50 = server11.getTime();
    server0.setTime(iTime50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509023241L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509023241L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509023241L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509023248L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Server [lastUpdate=1465509023248, exceptions=(), bans={}]"+ "'", str22.equals("Server [lastUpdate=1465509023248, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str25.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long32 == 1465509023249L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long42 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long49 == 1465509023249L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime50);

  }

  @Test
  public void test436() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test436"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    tp2.ITime iTime10 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);

  }

  @Test
  public void test437() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test437"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.ITime iTime2 = server0.getTime();
    tp2.Server server3 = new tp2.Server();
    long long4 = server3.getLastUpdate();
    server3.update();
    tp2.IP iP6 = null;
    boolean b7 = server3.removeException(iP6);
    server3.update();
    server3.update();
    server3.update();
    tp2.Server server11 = new tp2.Server();
    long long12 = server11.getLastUpdate();
    java.lang.String str13 = server11.toString();
    tp2.IP iP14 = null;
    boolean b15 = server11.removeBan(iP14);
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    long long20 = server16.getLastUpdate();
    tp2.IP iP21 = null;
    boolean b22 = server16.removeBan(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    tp2.IP iP25 = null;
    boolean b26 = server23.removeException(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server23.connect(iP27);
    tp2.Server server29 = new tp2.Server();
    long long30 = server29.getLastUpdate();
    tp2.ITime iTime31 = server29.getTime();
    server23.setTime(iTime31);
    server16.setTime(iTime31);
    server11.setTime(iTime31);
    server3.setTime(iTime31);
    java.lang.String str36 = server3.toString();
    tp2.Server server37 = new tp2.Server();
    tp2.ITime iTime38 = server37.getTime();
    server37.update();
    tp2.ITime iTime40 = server37.getTime();
    tp2.IP iP41 = null;
    boolean b42 = server37.removeBan(iP41);
    server37.update();
    tp2.ITime iTime44 = server37.getTime();
    server3.setTime(iTime44);
    tp2.Server server46 = new tp2.Server();
    tp2.ITime iTime47 = server46.getTime();
    server46.update();
    tp2.ITime iTime49 = server46.getTime();
    tp2.IP iP50 = null;
    boolean b51 = server46.removeBan(iP50);
    java.lang.String str52 = server46.toString();
    java.lang.String str53 = server46.toString();
    java.lang.String str54 = server46.toString();
    java.lang.String str55 = server46.toString();
    tp2.ITime iTime56 = server46.getTime();
    server3.setTime(iTime56);
    server0.setTime(iTime56);
    tp2.IP iP59 = null;
    boolean b60 = server0.removeException(iP59);
    java.lang.String str61 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 1465509023269L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long30 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "Server [lastUpdate=1465509023268, exceptions=(), bans={}]"+ "'", str36.equals("Server [lastUpdate=1465509023268, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "Server [lastUpdate=1465509023270, exceptions=(), bans={}]"+ "'", str52.equals("Server [lastUpdate=1465509023270, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "Server [lastUpdate=1465509023270, exceptions=(), bans={}]"+ "'", str53.equals("Server [lastUpdate=1465509023270, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "Server [lastUpdate=1465509023270, exceptions=(), bans={}]"+ "'", str54.equals("Server [lastUpdate=1465509023270, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "Server [lastUpdate=1465509023270, exceptions=(), bans={}]"+ "'", str55.equals("Server [lastUpdate=1465509023270, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str61.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test438() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test438"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    java.lang.String str7 = server0.toString();
    long long8 = server0.getLastUpdate();
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    tp2.IP iP12 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = server0.addException(iP12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509023293L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509023293, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509023293, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509023293L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test439() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test439"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    java.lang.String str10 = server8.toString();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeBan(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    long long17 = server13.getLastUpdate();
    tp2.IP iP18 = null;
    boolean b19 = server13.removeBan(iP18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    tp2.IP iP22 = null;
    boolean b23 = server20.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server20.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    long long27 = server26.getLastUpdate();
    tp2.ITime iTime28 = server26.getTime();
    server20.setTime(iTime28);
    server13.setTime(iTime28);
    server8.setTime(iTime28);
    server0.setTime(iTime28);
    java.lang.String str33 = server0.toString();
    tp2.Server server34 = new tp2.Server();
    tp2.ITime iTime35 = server34.getTime();
    server34.update();
    tp2.ITime iTime37 = server34.getTime();
    tp2.IP iP38 = null;
    boolean b39 = server34.removeBan(iP38);
    server34.update();
    tp2.ITime iTime41 = server34.getTime();
    server0.setTime(iTime41);
    tp2.ITime iTime43 = server0.getTime();
    tp2.IP iP44 = null;
    boolean b45 = server0.removeBan(iP44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 1465509023294L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "Server [lastUpdate=1465509023294, exceptions=(), bans={}]"+ "'", str33.equals("Server [lastUpdate=1465509023294, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);

  }

  @Test
  public void test440() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test440"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    server7.update();
    tp2.ITime iTime10 = server7.getTime();
    long long11 = server7.getLastUpdate();
    long long12 = server7.getLastUpdate();
    long long13 = server7.getLastUpdate();
    tp2.ITime iTime14 = server7.getTime();
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.ITime iTime18 = server15.getTime();
    tp2.Server server19 = new tp2.Server();
    long long20 = server19.getLastUpdate();
    tp2.ITime iTime21 = server19.getTime();
    server15.setTime(iTime21);
    java.lang.String str23 = server15.toString();
    tp2.ITime iTime24 = server15.getTime();
    server7.setTime(iTime24);
    server0.setTime(iTime24);
    tp2.Server server27 = new tp2.Server();
    long long28 = server27.getLastUpdate();
    server27.update();
    tp2.IP iP30 = null;
    boolean b31 = server27.removeException(iP30);
    server27.update();
    long long33 = server27.getLastUpdate();
    tp2.IP iP34 = null;
    boolean b35 = server27.removeBan(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server27.removeException(iP36);
    tp2.IP iP38 = null;
    boolean b39 = server27.removeBan(iP38);
    tp2.IP iP40 = null;
    boolean b41 = server27.removeBan(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server27.connect(iP42);
    tp2.IP iP44 = null;
    boolean b45 = server27.connect(iP44);
    tp2.Server server46 = new tp2.Server();
    tp2.ITime iTime47 = server46.getTime();
    server46.update();
    tp2.IP iP49 = null;
    boolean b50 = server46.connect(iP49);
    long long51 = server46.getLastUpdate();
    java.lang.String str52 = server46.toString();
    tp2.IP iP53 = null;
    boolean b54 = server46.connect(iP53);
    tp2.IP iP55 = null;
    boolean b56 = server46.removeBan(iP55);
    tp2.ITime iTime57 = server46.getTime();
    tp2.Server server58 = new tp2.Server();
    long long59 = server58.getLastUpdate();
    server58.update();
    tp2.IP iP61 = null;
    boolean b62 = server58.removeException(iP61);
    server58.update();
    long long64 = server58.getLastUpdate();
    tp2.IP iP65 = null;
    boolean b66 = server58.removeBan(iP65);
    tp2.IP iP67 = null;
    boolean b68 = server58.removeBan(iP67);
    long long69 = server58.getLastUpdate();
    long long70 = server58.getLastUpdate();
    tp2.Server server71 = new tp2.Server();
    long long72 = server71.getLastUpdate();
    tp2.ITime iTime73 = server71.getTime();
    tp2.IP iP74 = null;
    boolean b75 = server71.removeException(iP74);
    tp2.ITime iTime76 = server71.getTime();
    server58.setTime(iTime76);
    server46.setTime(iTime76);
    server27.setTime(iTime76);
    server0.setTime(iTime76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509023312L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509023312L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509023312L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465509023314, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465509023314, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 1465509023315L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long51 == 1465509023315L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "Server [lastUpdate=1465509023315, exceptions=(), bans={}]"+ "'", str52.equals("Server [lastUpdate=1465509023315, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long59 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long64 == 1465509023316L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long69 == 1465509023316L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long70 == 1465509023316L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long72 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime76);

  }

  @Test
  public void test441() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test441"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    java.lang.String str11 = server0.toString();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    tp2.ITime iTime14 = server0.getTime();
    long long15 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509023343L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509023343, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509023343, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509023343L);

  }

  @Test
  public void test442() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test442"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    long long12 = server0.getLastUpdate();
    tp2.ITime iTime13 = server0.getTime();
    java.lang.String str14 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509023348, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509023348, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509023348L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465509023348, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465509023348, exceptions=(), bans={}]"));

  }

  @Test
  public void test443() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test443"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    server0.update();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509023356L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test444() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test444"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    server0.update();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509023359, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509023359, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test445() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test445"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.ITime iTime12 = server0.getTime();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    server13.update();
    tp2.IP iP16 = null;
    boolean b17 = server13.removeException(iP16);
    server13.update();
    long long19 = server13.getLastUpdate();
    tp2.IP iP20 = null;
    boolean b21 = server13.removeBan(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server13.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server13.removeBan(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server13.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server13.connect(iP28);
    tp2.ITime iTime30 = server13.getTime();
    server0.setTime(iTime30);
    tp2.IP iP32 = null;
    boolean b33 = server0.connect(iP32);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509023359L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509023359, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509023359, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 1465509023360L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);

  }

  @Test
  public void test446() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test446"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.Server server5 = new tp2.Server();
    long long6 = server5.getLastUpdate();
    server5.update();
    tp2.IP iP8 = null;
    boolean b9 = server5.removeException(iP8);
    server5.update();
    tp2.ITime iTime11 = server5.getTime();
    server0.setTime(iTime11);
    long long13 = server0.getLastUpdate();
    server0.update();
    long long15 = server0.getLastUpdate();
    tp2.IP iP16 = null;
    boolean b17 = server0.connect(iP16);
    long long18 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509023367L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509023368L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509023368L);

  }

  @Test
  public void test447() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test447"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeException(iP8);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test448() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test448"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server7.removeException(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server7.connect(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server7.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server7.removeBan(iP19);
    tp2.Server server21 = new tp2.Server();
    long long22 = server21.getLastUpdate();
    long long23 = server21.getLastUpdate();
    tp2.ITime iTime24 = server21.getTime();
    server7.setTime(iTime24);
    server0.setTime(iTime24);
    long long27 = server0.getLastUpdate();
    tp2.ITime iTime28 = server0.getTime();
    tp2.IP iP29 = null;
    boolean b30 = server0.connect(iP29);
    tp2.IP iP31 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b32 = server0.addException(iP31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long22 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 1465509023371L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);

  }

  @Test
  public void test449() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test449"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.Server server7 = new tp2.Server();
    long long8 = server7.getLastUpdate();
    java.lang.String str9 = server7.toString();
    server7.update();
    java.lang.String str11 = server7.toString();
    tp2.IP iP12 = null;
    boolean b13 = server7.connect(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server7.connect(iP14);
    tp2.ITime iTime16 = server7.getTime();
    server0.setTime(iTime16);
    tp2.IP iP18 = null;
    boolean b19 = server0.removeException(iP18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509023373, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509023373, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509023375, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509023375, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test450() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test450"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.connect(iP13);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509023378L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);

  }

  @Test
  public void test451() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test451"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    long long7 = server0.getLastUpdate();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server10.connect(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server10.removeException(iP14);
    long long16 = server10.getLastUpdate();
    tp2.IP iP17 = null;
    boolean b18 = server10.removeBan(iP17);
    tp2.Server server19 = new tp2.Server();
    long long20 = server19.getLastUpdate();
    tp2.IP iP21 = null;
    boolean b22 = server19.removeException(iP21);
    tp2.Server server23 = new tp2.Server();
    tp2.ITime iTime24 = server23.getTime();
    server23.update();
    tp2.ITime iTime26 = server23.getTime();
    tp2.Server server27 = new tp2.Server();
    long long28 = server27.getLastUpdate();
    tp2.ITime iTime29 = server27.getTime();
    server23.setTime(iTime29);
    tp2.ITime iTime31 = server23.getTime();
    server19.setTime(iTime31);
    server10.setTime(iTime31);
    server0.setTime(iTime31);
    tp2.IP iP35 = null;
    boolean b36 = server0.connect(iP35);
    tp2.IP iP37 = null;
    boolean b38 = server0.removeBan(iP37);
    tp2.ITime iTime39 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 1465509023382L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);

  }

  @Test
  public void test452() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test452"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    server0.update();
    java.lang.String str16 = server0.toString();
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    tp2.Server server19 = new tp2.Server();
    tp2.ITime iTime20 = server19.getTime();
    server17.setTime(iTime20);
    server17.update();
    server17.update();
    tp2.ITime iTime24 = server17.getTime();
    server0.setTime(iTime24);
    long long26 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509023397L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509023399, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509023399, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 1465509023399L);

  }

  @Test
  public void test453() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test453"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    long long10 = server0.getLastUpdate();
    java.lang.String str11 = server0.toString();
    tp2.Server server12 = new tp2.Server();
    long long13 = server12.getLastUpdate();
    java.lang.String str14 = server12.toString();
    tp2.IP iP15 = null;
    boolean b16 = server12.removeBan(iP15);
    tp2.Server server17 = new tp2.Server();
    tp2.ITime iTime18 = server17.getTime();
    server17.update();
    tp2.ITime iTime20 = server17.getTime();
    long long21 = server17.getLastUpdate();
    tp2.IP iP22 = null;
    boolean b23 = server17.removeBan(iP22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    tp2.IP iP26 = null;
    boolean b27 = server24.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server24.connect(iP28);
    tp2.Server server30 = new tp2.Server();
    long long31 = server30.getLastUpdate();
    tp2.ITime iTime32 = server30.getTime();
    server24.setTime(iTime32);
    server17.setTime(iTime32);
    server12.setTime(iTime32);
    server0.setTime(iTime32);
    tp2.ITime iTime37 = server0.getTime();
    long long38 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 1465509023411L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509023411, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509023411, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 1465509023411L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long38 == 1465509023411L);

  }

  @Test
  public void test454() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test454"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    tp2.ITime iTime10 = server0.getTime();
    tp2.Server server11 = new tp2.Server();
    tp2.ITime iTime12 = server11.getTime();
    tp2.IP iP13 = null;
    boolean b14 = server11.connect(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server11.removeException(iP15);
    long long17 = server11.getLastUpdate();
    tp2.IP iP18 = null;
    boolean b19 = server11.removeBan(iP18);
    tp2.Server server20 = new tp2.Server();
    long long21 = server20.getLastUpdate();
    tp2.IP iP22 = null;
    boolean b23 = server20.removeException(iP22);
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    server24.update();
    tp2.ITime iTime27 = server24.getTime();
    tp2.Server server28 = new tp2.Server();
    long long29 = server28.getLastUpdate();
    tp2.ITime iTime30 = server28.getTime();
    server24.setTime(iTime30);
    tp2.ITime iTime32 = server24.getTime();
    server20.setTime(iTime32);
    server11.setTime(iTime32);
    java.lang.String str35 = server11.toString();
    tp2.Server server36 = new tp2.Server();
    long long37 = server36.getLastUpdate();
    server36.update();
    tp2.IP iP39 = null;
    boolean b40 = server36.removeException(iP39);
    server36.update();
    long long42 = server36.getLastUpdate();
    java.lang.String str43 = server36.toString();
    tp2.ITime iTime44 = server36.getTime();
    server11.setTime(iTime44);
    server0.setTime(iTime44);
    long long47 = server0.getLastUpdate();
    tp2.IP iP48 = null;
    boolean b49 = server0.removeBan(iP48);
    tp2.IP iP50 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b51 = server0.addException(iP50);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509023426, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509023426, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509023426, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509023426, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509023426, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509023426, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509023426, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509023426, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long21 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str35.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long37 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long42 == 1465509023428L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "Server [lastUpdate=1465509023428, exceptions=(), bans={}]"+ "'", str43.equals("Server [lastUpdate=1465509023428, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long47 == 1465509023426L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);

  }

  @Test
  public void test455() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test455"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    server0.update();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test456() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test456"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    java.lang.String str9 = server0.toString();
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.connect(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);

  }

  @Test
  public void test457() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test457"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    server0.update();
    java.lang.String str9 = server0.toString();
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    long long12 = server10.getLastUpdate();
    java.lang.String str13 = server10.toString();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server14.update();
    tp2.ITime iTime17 = server14.getTime();
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    server14.setTime(iTime20);
    tp2.IP iP22 = null;
    boolean b23 = server14.connect(iP22);
    long long24 = server14.getLastUpdate();
    tp2.ITime iTime25 = server14.getTime();
    server10.setTime(iTime25);
    server0.setTime(iTime25);
    long long28 = server0.getLastUpdate();
    tp2.IP iP29 = null;
    boolean b30 = server0.removeException(iP29);
    tp2.IP iP31 = null;
    boolean b32 = server0.removeException(iP31);
    server0.update();
    server0.update();
    long long35 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509023451L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509023451, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509023451, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 1465509023451L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 1465509023451L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long35 == 1465509023453L);

  }

  @Test
  public void test458() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test458"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    tp2.Server server8 = new tp2.Server();
    long long9 = server8.getLastUpdate();
    java.lang.String str10 = server8.toString();
    tp2.IP iP11 = null;
    boolean b12 = server8.removeBan(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    long long17 = server13.getLastUpdate();
    tp2.IP iP18 = null;
    boolean b19 = server13.removeBan(iP18);
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    tp2.IP iP22 = null;
    boolean b23 = server20.removeException(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server20.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    long long27 = server26.getLastUpdate();
    tp2.ITime iTime28 = server26.getTime();
    server20.setTime(iTime28);
    server13.setTime(iTime28);
    server8.setTime(iTime28);
    server0.setTime(iTime28);
    java.lang.String str33 = server0.toString();
    tp2.Server server34 = new tp2.Server();
    tp2.ITime iTime35 = server34.getTime();
    server34.update();
    tp2.ITime iTime37 = server34.getTime();
    tp2.IP iP38 = null;
    boolean b39 = server34.removeBan(iP38);
    server34.update();
    tp2.ITime iTime41 = server34.getTime();
    server0.setTime(iTime41);
    tp2.Server server43 = new tp2.Server();
    tp2.ITime iTime44 = server43.getTime();
    server43.update();
    tp2.ITime iTime46 = server43.getTime();
    tp2.IP iP47 = null;
    boolean b48 = server43.removeBan(iP47);
    java.lang.String str49 = server43.toString();
    java.lang.String str50 = server43.toString();
    java.lang.String str51 = server43.toString();
    java.lang.String str52 = server43.toString();
    tp2.ITime iTime53 = server43.getTime();
    server0.setTime(iTime53);
    java.lang.String str55 = server0.toString();
    tp2.Server server56 = new tp2.Server();
    tp2.ITime iTime57 = server56.getTime();
    tp2.IP iP58 = null;
    boolean b59 = server56.removeException(iP58);
    tp2.IP iP60 = null;
    boolean b61 = server56.connect(iP60);
    tp2.IP iP62 = null;
    boolean b63 = server56.removeException(iP62);
    tp2.IP iP64 = null;
    boolean b65 = server56.connect(iP64);
    tp2.IP iP66 = null;
    boolean b67 = server56.connect(iP66);
    tp2.IP iP68 = null;
    boolean b69 = server56.removeBan(iP68);
    tp2.IP iP70 = null;
    boolean b71 = server56.removeBan(iP70);
    tp2.IP iP72 = null;
    boolean b73 = server56.removeException(iP72);
    tp2.ITime iTime74 = server56.getTime();
    server0.setTime(iTime74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 1465509023460L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "Server [lastUpdate=1465509023459, exceptions=(), bans={}]"+ "'", str33.equals("Server [lastUpdate=1465509023459, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "Server [lastUpdate=1465509023461, exceptions=(), bans={}]"+ "'", str49.equals("Server [lastUpdate=1465509023461, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "Server [lastUpdate=1465509023461, exceptions=(), bans={}]"+ "'", str50.equals("Server [lastUpdate=1465509023461, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "Server [lastUpdate=1465509023461, exceptions=(), bans={}]"+ "'", str51.equals("Server [lastUpdate=1465509023461, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "Server [lastUpdate=1465509023461, exceptions=(), bans={}]"+ "'", str52.equals("Server [lastUpdate=1465509023461, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "Server [lastUpdate=1465509023459, exceptions=(), bans={}]"+ "'", str55.equals("Server [lastUpdate=1465509023459, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime74);

  }

  @Test
  public void test459() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test459"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    long long4 = server0.getLastUpdate();
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    server0.update();
    tp2.IP iP15 = null;
    boolean b16 = server0.removeException(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server0.connect(iP17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long4 == 1465509023490L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=1465509023490, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=1465509023490, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);

  }

  @Test
  public void test460() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test460"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.connect(iP5);
    long long7 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);

  }

  @Test
  public void test461() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test461"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    java.lang.String str7 = server0.toString();
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.IP iP11 = null;
    boolean b12 = server8.connect(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    tp2.IP iP15 = null;
    boolean b16 = server13.removeException(iP15);
    tp2.IP iP17 = null;
    boolean b18 = server13.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server13.removeException(iP19);
    tp2.IP iP21 = null;
    boolean b22 = server13.connect(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server13.connect(iP23);
    tp2.Server server25 = new tp2.Server();
    tp2.ITime iTime26 = server25.getTime();
    server25.update();
    tp2.ITime iTime28 = server25.getTime();
    server13.setTime(iTime28);
    server8.setTime(iTime28);
    tp2.IP iP31 = null;
    boolean b32 = server8.removeException(iP31);
    tp2.ITime iTime33 = server8.getTime();
    server0.setTime(iTime33);
    tp2.ITime iTime35 = server0.getTime();
    tp2.IP iP36 = null;
    boolean b37 = server0.connect(iP36);
    tp2.Server server38 = new tp2.Server();
    long long39 = server38.getLastUpdate();
    java.lang.String str40 = server38.toString();
    tp2.IP iP41 = null;
    boolean b42 = server38.removeBan(iP41);
    server38.update();
    long long44 = server38.getLastUpdate();
    tp2.IP iP45 = null;
    boolean b46 = server38.removeBan(iP45);
    tp2.Server server47 = new tp2.Server();
    tp2.ITime iTime48 = server47.getTime();
    tp2.IP iP49 = null;
    boolean b50 = server47.removeException(iP49);
    tp2.IP iP51 = null;
    boolean b52 = server47.connect(iP51);
    tp2.Server server53 = new tp2.Server();
    long long54 = server53.getLastUpdate();
    tp2.ITime iTime55 = server53.getTime();
    server47.setTime(iTime55);
    server38.setTime(iTime55);
    server0.setTime(iTime55);
    tp2.IP iP59 = null;
    boolean b60 = server0.connect(iP59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509023492, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509023492, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long39 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str40.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long44 == 1465509023495L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long54 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);

  }

  @Test
  public void test462() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test462"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.ITime iTime5 = server0.getTime();
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.removeBan(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test463() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test463"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    server0.update();
    server0.update();
    java.lang.String str8 = server0.toString();
    long long9 = server0.getLastUpdate();
    server0.update();
    tp2.ITime iTime11 = server0.getTime();
    long long12 = server0.getLastUpdate();
    java.lang.String str13 = server0.toString();
    tp2.IP iP14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = server0.addException(iP14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509023513, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509023513, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509023513L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509023513L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=1465509023513, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=1465509023513, exceptions=(), bans={}]"));

  }

  @Test
  public void test464() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test464"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    long long9 = server0.getLastUpdate();
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509023517L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test465() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test465"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    tp2.ITime iTime9 = server0.getTime();
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.connect(iP13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);

  }

  @Test
  public void test466() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test466"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeException(iP12);
    java.lang.String str14 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509023526, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509023526, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509023526, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509023526, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=1465509023526, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=1465509023526, exceptions=(), bans={}]"));

  }

  @Test
  public void test467() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test467"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509023530L);

  }

  @Test
  public void test468() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test468"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    java.lang.String str11 = server0.toString();
    long long12 = server0.getLastUpdate();
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.IP iP16 = null;
    boolean b17 = server13.connect(iP16);
    long long18 = server13.getLastUpdate();
    java.lang.String str19 = server13.toString();
    java.lang.String str20 = server13.toString();
    tp2.Server server21 = new tp2.Server();
    tp2.ITime iTime22 = server21.getTime();
    server21.update();
    tp2.ITime iTime24 = server21.getTime();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    tp2.ITime iTime27 = server25.getTime();
    server21.setTime(iTime27);
    tp2.ITime iTime29 = server21.getTime();
    server13.setTime(iTime29);
    server0.setTime(iTime29);
    tp2.IP iP32 = null;
    boolean b33 = server0.connect(iP32);
    server0.update();
    tp2.IP iP35 = null;
    boolean b36 = server0.connect(iP35);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509023530, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509023530, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=1465509023530, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=1465509023530, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509023530L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 1465509023531L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Server [lastUpdate=1465509023531, exceptions=(), bans={}]"+ "'", str19.equals("Server [lastUpdate=1465509023531, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=1465509023531, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=1465509023531, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);

  }

  @Test
  public void test469() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test469"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server12.setTime(iTime15);
    server0.setTime(iTime15);
    server0.update();
    tp2.IP iP19 = null;
    boolean b20 = server0.connect(iP19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);

  }

  @Test
  public void test470() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test470"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    java.lang.String str13 = server0.toString();
    long long14 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);

  }

  @Test
  public void test471() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test471"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    java.lang.String str6 = server0.toString();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    tp2.ITime iTime9 = server0.getTime();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeBan(iP10);
    long long12 = server0.getLastUpdate();
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509023549, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509023549, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509023549L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test472() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test472"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.connect(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.ITime iTime12 = server9.getTime();
    server0.setTime(iTime12);
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    java.lang.String str16 = server0.toString();
    java.lang.String str17 = server0.toString();
    tp2.IP iP18 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b19 = server0.addException(iP18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509023553L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509023553, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509023553, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Server [lastUpdate=1465509023553, exceptions=(), bans={}]"+ "'", str17.equals("Server [lastUpdate=1465509023553, exceptions=(), bans={}]"));

  }

  @Test
  public void test473() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test473"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.ITime iTime7 = server0.getTime();
    java.lang.String str8 = server0.toString();
    long long9 = server0.getLastUpdate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509023555, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509023555, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509023555L);

  }

  @Test
  public void test474() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test474"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeBan(iP6);
    tp2.Server server8 = new tp2.Server();
    tp2.ITime iTime9 = server8.getTime();
    server8.update();
    tp2.ITime iTime11 = server8.getTime();
    long long12 = server8.getLastUpdate();
    tp2.IP iP13 = null;
    boolean b14 = server8.removeBan(iP13);
    tp2.IP iP15 = null;
    boolean b16 = server8.removeException(iP15);
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    server17.update();
    tp2.IP iP20 = null;
    boolean b21 = server17.removeException(iP20);
    server17.update();
    long long23 = server17.getLastUpdate();
    tp2.IP iP24 = null;
    boolean b25 = server17.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    tp2.ITime iTime27 = server26.getTime();
    server26.update();
    tp2.ITime iTime29 = server26.getTime();
    server17.setTime(iTime29);
    server8.setTime(iTime29);
    server0.setTime(iTime29);
    tp2.IP iP33 = null;
    boolean b34 = server0.removeException(iP33);
    long long35 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 1465509023557L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long23 == 1465509023557L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long35 == 1465509023557L);

  }

  @Test
  public void test475() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test475"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.Server server10 = new tp2.Server();
    long long11 = server10.getLastUpdate();
    server10.update();
    tp2.ITime iTime13 = server10.getTime();
    server0.setTime(iTime13);
    tp2.Server server15 = new tp2.Server();
    long long16 = server15.getLastUpdate();
    long long17 = server15.getLastUpdate();
    tp2.ITime iTime18 = server15.getTime();
    server0.setTime(iTime18);
    tp2.ITime iTime20 = server0.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server0.removeException(iP21);
    tp2.IP iP23 = null;
    boolean b24 = server0.connect(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server0.removeException(iP25);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long16 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long17 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test476() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test476"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    server0.update();
    tp2.ITime iTime6 = server0.getTime();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    long long9 = server0.getLastUpdate();
    tp2.IP iP10 = null;
    boolean b11 = server0.removeException(iP10);
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    server0.update();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long9 == 1465509023571L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test477() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test477"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.ITime iTime5 = server0.getTime();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeException(iP7);
    java.lang.String str9 = server0.toString();
    long long10 = server0.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.ITime iTime13 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str9.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

  @Test
  public void test478() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test478"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    java.lang.String str8 = server0.toString();
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.ITime iTime12 = server9.getTime();
    tp2.Server server13 = new tp2.Server();
    long long14 = server13.getLastUpdate();
    tp2.ITime iTime15 = server13.getTime();
    server9.setTime(iTime15);
    server0.setTime(iTime15);
    tp2.IP iP18 = null;
    boolean b19 = server0.removeException(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server0.connect(iP20);
    tp2.Server server22 = new tp2.Server();
    tp2.ITime iTime23 = server22.getTime();
    server22.update();
    tp2.ITime iTime25 = server22.getTime();
    tp2.Server server26 = new tp2.Server();
    long long27 = server26.getLastUpdate();
    tp2.ITime iTime28 = server26.getTime();
    server22.setTime(iTime28);
    server0.setTime(iTime28);
    tp2.IP iP31 = null;
    boolean b32 = server0.removeBan(iP31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509023575, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509023575, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long14 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long27 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test479() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test479"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    java.lang.String str2 = server0.toString();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    server0.update();
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    tp2.ITime iTime10 = server9.getTime();
    server9.update();
    tp2.IP iP12 = null;
    boolean b13 = server9.connect(iP12);
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server14.removeException(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server14.connect(iP18);
    tp2.IP iP20 = null;
    boolean b21 = server14.removeException(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server14.connect(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server14.connect(iP24);
    tp2.Server server26 = new tp2.Server();
    tp2.ITime iTime27 = server26.getTime();
    server26.update();
    tp2.ITime iTime29 = server26.getTime();
    server14.setTime(iTime29);
    server9.setTime(iTime29);
    tp2.IP iP32 = null;
    boolean b33 = server9.removeException(iP32);
    tp2.ITime iTime34 = server9.getTime();
    server0.setTime(iTime34);
    long long36 = server0.getLastUpdate();
    tp2.ITime iTime37 = server0.getTime();
    long long38 = server0.getLastUpdate();
    long long39 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP41 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b42 = server0.addException(iP41);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str2.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 1465509023598L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long36 == 1465509023598L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long38 == 1465509023598L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long39 == 1465509023598L);

  }

  @Test
  public void test480() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test480"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.ITime iTime10 = server0.getTime();
    java.lang.String str11 = server0.toString();
    java.lang.String str12 = server0.toString();
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.IP iP17 = null;
    boolean b18 = server13.connect(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server13.connect(iP19);
    tp2.ITime iTime21 = server13.getTime();
    server0.setTime(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str11.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str12.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);

  }

  @Test
  public void test481() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test481"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeBan(iP13);
    server0.update();
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    tp2.IP iP18 = null;
    boolean b19 = server16.removeException(iP18);
    java.lang.String str20 = server16.toString();
    tp2.Server server21 = new tp2.Server();
    tp2.ITime iTime22 = server21.getTime();
    tp2.IP iP23 = null;
    boolean b24 = server21.removeException(iP23);
    tp2.IP iP25 = null;
    boolean b26 = server21.connect(iP25);
    tp2.IP iP27 = null;
    boolean b28 = server21.removeException(iP27);
    java.lang.String str29 = server21.toString();
    java.lang.String str30 = server21.toString();
    long long31 = server21.getLastUpdate();
    tp2.ITime iTime32 = server21.getTime();
    server16.setTime(iTime32);
    server0.setTime(iTime32);
    tp2.IP iP35 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b36 = server0.addException(iP35);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509023607L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str29.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str30.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);

  }

  @Test
  public void test482() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test482"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    java.lang.String str6 = server0.toString();
    tp2.ITime iTime7 = server0.getTime();
    long long8 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509023608, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509023608, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509023608L);

  }

  @Test
  public void test483() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test483"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    tp2.Server server14 = new tp2.Server();
    tp2.ITime iTime15 = server14.getTime();
    server12.setTime(iTime15);
    server0.setTime(iTime15);
    tp2.Server server18 = new tp2.Server();
    long long19 = server18.getLastUpdate();
    tp2.ITime iTime20 = server18.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server18.removeBan(iP21);
    tp2.Server server23 = new tp2.Server();
    long long24 = server23.getLastUpdate();
    server23.update();
    tp2.IP iP26 = null;
    boolean b27 = server23.removeBan(iP26);
    tp2.Server server28 = new tp2.Server();
    tp2.ITime iTime29 = server28.getTime();
    server28.update();
    tp2.ITime iTime31 = server28.getTime();
    server23.setTime(iTime31);
    server18.setTime(iTime31);
    tp2.ITime iTime34 = server18.getTime();
    tp2.ITime iTime35 = server18.getTime();
    server0.setTime(iTime35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long24 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime35);

  }

  @Test
  public void test484() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test484"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeBan(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    tp2.ITime iTime7 = server0.getTime();
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test485() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test485"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.IP iP10 = null;
    boolean b11 = server0.connect(iP10);
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    server0.setTime(iTime15);
    tp2.IP iP17 = null;
    boolean b18 = server0.removeException(iP17);
    long long19 = server0.getLastUpdate();
    tp2.IP iP20 = null;
    boolean b21 = server0.removeBan(iP20);
    tp2.ITime iTime22 = server0.getTime();
    tp2.IP iP23 = null;
    boolean b24 = server0.removeException(iP23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long19 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test486() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test486"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    long long8 = server0.getLastUpdate();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    tp2.IP iP13 = null;
    boolean b14 = server0.removeException(iP13);
    long long15 = server0.getLastUpdate();
    tp2.Server server16 = new tp2.Server();
    tp2.ITime iTime17 = server16.getTime();
    server16.update();
    tp2.ITime iTime19 = server16.getTime();
    tp2.IP iP20 = null;
    boolean b21 = server16.connect(iP20);
    tp2.IP iP22 = null;
    boolean b23 = server16.connect(iP22);
    tp2.ITime iTime24 = server16.getTime();
    server0.setTime(iTime24);
    tp2.Server server26 = new tp2.Server();
    tp2.ITime iTime27 = server26.getTime();
    server26.update();
    tp2.ITime iTime29 = server26.getTime();
    tp2.Server server30 = new tp2.Server();
    long long31 = server30.getLastUpdate();
    tp2.ITime iTime32 = server30.getTime();
    server26.setTime(iTime32);
    tp2.ITime iTime34 = server26.getTime();
    server0.setTime(iTime34);
    server0.update();
    tp2.ITime iTime37 = server0.getTime();
    tp2.Server server38 = new tp2.Server();
    tp2.ITime iTime39 = server38.getTime();
    tp2.IP iP40 = null;
    boolean b41 = server38.removeException(iP40);
    tp2.IP iP42 = null;
    boolean b43 = server38.connect(iP42);
    tp2.IP iP44 = null;
    boolean b45 = server38.removeException(iP44);
    tp2.Server server46 = new tp2.Server();
    long long47 = server46.getLastUpdate();
    server46.update();
    tp2.IP iP49 = null;
    boolean b50 = server46.removeException(iP49);
    server46.update();
    tp2.ITime iTime52 = server46.getTime();
    server38.setTime(iTime52);
    tp2.Server server54 = new tp2.Server();
    tp2.ITime iTime55 = server54.getTime();
    server54.update();
    tp2.ITime iTime57 = server54.getTime();
    tp2.Server server58 = new tp2.Server();
    long long59 = server58.getLastUpdate();
    tp2.ITime iTime60 = server58.getTime();
    server54.setTime(iTime60);
    tp2.IP iP62 = null;
    boolean b63 = server54.connect(iP62);
    long long64 = server54.getLastUpdate();
    java.lang.String str65 = server54.toString();
    tp2.ITime iTime66 = server54.getTime();
    server38.setTime(iTime66);
    server0.setTime(iTime66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long8 == 1465509023634L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 1465509023634L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long47 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long59 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long64 == 1465509023638L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "Server [lastUpdate=1465509023638, exceptions=(), bans={}]"+ "'", str65.equals("Server [lastUpdate=1465509023638, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime66);

  }

  @Test
  public void test487() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test487"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server2.update();
    tp2.ITime iTime5 = server2.getTime();
    tp2.Server server6 = new tp2.Server();
    long long7 = server6.getLastUpdate();
    tp2.ITime iTime8 = server6.getTime();
    server2.setTime(iTime8);
    java.lang.String str10 = server2.toString();
    tp2.ITime iTime11 = server2.getTime();
    server0.setTime(iTime11);
    java.lang.String str13 = server0.toString();
    tp2.IP iP14 = null;
    boolean b15 = server0.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.connect(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server0.removeException(iP18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=1465509023685, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=1465509023685, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test488() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test488"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.connect(iP6);
    java.lang.String str8 = server0.toString();
    tp2.IP iP9 = null;
    boolean b10 = server0.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    long long13 = server0.getLastUpdate();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=1465509023693, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=1465509023693, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 1465509023693L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test489() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test489"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.Server server6 = new tp2.Server();
    tp2.ITime iTime7 = server6.getTime();
    server6.update();
    tp2.IP iP9 = null;
    boolean b10 = server6.connect(iP9);
    long long11 = server6.getLastUpdate();
    tp2.Server server12 = new tp2.Server();
    tp2.ITime iTime13 = server12.getTime();
    server12.update();
    tp2.ITime iTime15 = server12.getTime();
    tp2.IP iP16 = null;
    boolean b17 = server12.connect(iP16);
    tp2.ITime iTime18 = server12.getTime();
    server6.setTime(iTime18);
    server0.setTime(iTime18);
    tp2.ITime iTime21 = null;
    server0.setTime(iTime21);
    tp2.IP iP23 = null;
    boolean b24 = server0.connect(iP23);
    tp2.ITime iTime25 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long11 == 1465509023695L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(iTime25);

  }

  @Test
  public void test490() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test490"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.ITime iTime21 = server13.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    server25.update();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeException(iP28);
    server25.update();
    long long31 = server25.getLastUpdate();
    java.lang.String str32 = server25.toString();
    tp2.ITime iTime33 = server25.getTime();
    server0.setTime(iTime33);
    long long35 = server0.getLastUpdate();
    tp2.IP iP36 = null;
    boolean b37 = server0.removeException(iP36);
    java.lang.String str38 = server0.toString();
    java.lang.String str39 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 1465509023704L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "Server [lastUpdate=1465509023704, exceptions=(), bans={}]"+ "'", str32.equals("Server [lastUpdate=1465509023704, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long35 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str38.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str39.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test491() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test491"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    java.lang.String str8 = server0.toString();
    server0.update();
    tp2.Server server10 = new tp2.Server();
    tp2.ITime iTime11 = server10.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server10.removeException(iP12);
    tp2.IP iP14 = null;
    boolean b15 = server10.connect(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server10.removeException(iP16);
    tp2.IP iP18 = null;
    boolean b19 = server10.connect(iP18);
    java.lang.String str20 = server10.toString();
    java.lang.String str21 = server10.toString();
    tp2.ITime iTime22 = null;
    server10.setTime(iTime22);
    java.lang.String str24 = server10.toString();
    tp2.IP iP25 = null;
    boolean b26 = server10.removeException(iP25);
    tp2.Server server27 = new tp2.Server();
    long long28 = server27.getLastUpdate();
    server27.update();
    tp2.IP iP30 = null;
    boolean b31 = server27.removeException(iP30);
    server27.update();
    long long33 = server27.getLastUpdate();
    tp2.IP iP34 = null;
    boolean b35 = server27.removeBan(iP34);
    tp2.IP iP36 = null;
    boolean b37 = server27.removeBan(iP36);
    long long38 = server27.getLastUpdate();
    tp2.Server server39 = new tp2.Server();
    tp2.ITime iTime40 = server39.getTime();
    tp2.IP iP41 = null;
    boolean b42 = server39.removeException(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server39.connect(iP43);
    tp2.IP iP45 = null;
    boolean b46 = server39.removeException(iP45);
    tp2.IP iP47 = null;
    boolean b48 = server39.connect(iP47);
    tp2.IP iP49 = null;
    boolean b50 = server39.connect(iP49);
    tp2.Server server51 = new tp2.Server();
    tp2.ITime iTime52 = server51.getTime();
    server51.update();
    tp2.ITime iTime54 = server51.getTime();
    server39.setTime(iTime54);
    server27.setTime(iTime54);
    server10.setTime(iTime54);
    server0.setTime(iTime54);
    tp2.IP iP59 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b60 = server0.addException(iP59);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str20.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str21.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long28 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long33 == 1465509023716L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long38 == 1465509023716L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime54);

  }

  @Test
  public void test492() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test492"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    java.lang.String str10 = server0.toString();
    tp2.ITime iTime11 = server0.getTime();
    tp2.IP iP12 = null;
    boolean b13 = server0.removeBan(iP12);
    java.lang.String str14 = server0.toString();
    server0.update();
    java.lang.String str16 = server0.toString();
    tp2.IP iP17 = null;
    boolean b18 = server0.removeBan(iP17);
    tp2.IP iP19 = null;
    boolean b20 = server0.removeException(iP19);
    tp2.IP iP21 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b22 = server0.addException(iP21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str10.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Server [lastUpdate=1465509023718, exceptions=(), bans={}]"+ "'", str16.equals("Server [lastUpdate=1465509023718, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test493() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test493"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.IP iP3 = null;
    boolean b4 = server0.connect(iP3);
    long long5 = server0.getLastUpdate();
    java.lang.String str6 = server0.toString();
    java.lang.String str7 = server0.toString();
    tp2.ITime iTime8 = server0.getTime();
    tp2.ITime iTime9 = server0.getTime();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 1465509023743L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509023743, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509023743, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Server [lastUpdate=1465509023743, exceptions=(), bans={}]"+ "'", str7.equals("Server [lastUpdate=1465509023743, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);

  }

  @Test
  public void test494() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test494"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.Server server4 = new tp2.Server();
    long long5 = server4.getLastUpdate();
    tp2.ITime iTime6 = server4.getTime();
    server0.setTime(iTime6);
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeException(iP9);
    tp2.Server server11 = new tp2.Server();
    long long12 = server11.getLastUpdate();
    java.lang.String str13 = server11.toString();
    tp2.IP iP14 = null;
    boolean b15 = server11.removeBan(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server11.removeBan(iP16);
    long long18 = server11.getLastUpdate();
    tp2.ITime iTime19 = server11.getTime();
    tp2.Server server20 = new tp2.Server();
    tp2.ITime iTime21 = server20.getTime();
    tp2.IP iP22 = null;
    boolean b23 = server20.connect(iP22);
    tp2.IP iP24 = null;
    boolean b25 = server20.removeException(iP24);
    tp2.IP iP26 = null;
    boolean b27 = server20.removeException(iP26);
    tp2.IP iP28 = null;
    boolean b29 = server20.connect(iP28);
    tp2.Server server30 = new tp2.Server();
    long long31 = server30.getLastUpdate();
    server30.update();
    tp2.ITime iTime33 = server30.getTime();
    server20.setTime(iTime33);
    server11.setTime(iTime33);
    server0.setTime(iTime33);
    tp2.IP iP37 = null;
    boolean b38 = server0.connect(iP37);
    long long39 = server0.getLastUpdate();
    server0.update();
    tp2.IP iP41 = null;
    boolean b42 = server0.connect(iP41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long31 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long39 == 1465509023745L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);

  }

  @Test
  public void test495() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test495"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    server0.update();
    tp2.ITime iTime3 = server0.getTime();
    tp2.IP iP4 = null;
    boolean b5 = server0.removeBan(iP4);
    server0.update();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server7.connect(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server7.removeException(iP11);
    long long13 = server7.getLastUpdate();
    java.lang.String str14 = server7.toString();
    tp2.Server server15 = new tp2.Server();
    tp2.ITime iTime16 = server15.getTime();
    server15.update();
    tp2.ITime iTime18 = server15.getTime();
    tp2.Server server19 = new tp2.Server();
    long long20 = server19.getLastUpdate();
    tp2.ITime iTime21 = server19.getTime();
    server15.setTime(iTime21);
    java.lang.String str23 = server15.toString();
    tp2.Server server24 = new tp2.Server();
    tp2.ITime iTime25 = server24.getTime();
    server24.update();
    tp2.ITime iTime27 = server24.getTime();
    tp2.Server server28 = new tp2.Server();
    long long29 = server28.getLastUpdate();
    tp2.ITime iTime30 = server28.getTime();
    server24.setTime(iTime30);
    server15.setTime(iTime30);
    server7.setTime(iTime30);
    tp2.IP iP34 = null;
    boolean b35 = server7.removeBan(iP34);
    tp2.Server server36 = new tp2.Server();
    tp2.ITime iTime37 = server36.getTime();
    server36.update();
    tp2.IP iP39 = null;
    boolean b40 = server36.connect(iP39);
    long long41 = server36.getLastUpdate();
    tp2.IP iP42 = null;
    boolean b43 = server36.removeBan(iP42);
    server36.update();
    tp2.Server server45 = new tp2.Server();
    long long46 = server45.getLastUpdate();
    server45.update();
    tp2.IP iP48 = null;
    boolean b49 = server45.removeException(iP48);
    server45.update();
    long long51 = server45.getLastUpdate();
    tp2.IP iP52 = null;
    boolean b53 = server45.removeBan(iP52);
    tp2.IP iP54 = null;
    boolean b55 = server45.removeBan(iP54);
    long long56 = server45.getLastUpdate();
    tp2.ITime iTime57 = server45.getTime();
    server36.setTime(iTime57);
    server7.setTime(iTime57);
    server0.setTime(iTime57);
    long long61 = server0.getLastUpdate();
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long13 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long20 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Server [lastUpdate=1465509023757, exceptions=(), bans={}]"+ "'", str23.equals("Server [lastUpdate=1465509023757, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long41 == 1465509023758L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long46 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long51 == 1465509023758L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long56 == 1465509023758L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long61 == 1465509023756L);

  }

  @Test
  public void test496() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test496"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.ITime iTime7 = server0.getTime();
    tp2.ITime iTime8 = server0.getTime();
    tp2.IP iP9 = null;
    boolean b10 = server0.removeBan(iP9);
    tp2.IP iP11 = null;
    boolean b12 = server0.removeException(iP11);
    java.lang.String str13 = server0.toString();
    java.lang.String str14 = server0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str14.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));

  }

  @Test
  public void test497() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test497"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.connect(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.removeException(iP4);
    long long6 = server0.getLastUpdate();
    tp2.IP iP7 = null;
    boolean b8 = server0.removeBan(iP7);
    tp2.Server server9 = new tp2.Server();
    long long10 = server9.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server9.removeException(iP11);
    tp2.Server server13 = new tp2.Server();
    tp2.ITime iTime14 = server13.getTime();
    server13.update();
    tp2.ITime iTime16 = server13.getTime();
    tp2.Server server17 = new tp2.Server();
    long long18 = server17.getLastUpdate();
    tp2.ITime iTime19 = server17.getTime();
    server13.setTime(iTime19);
    tp2.ITime iTime21 = server13.getTime();
    server9.setTime(iTime21);
    server0.setTime(iTime21);
    java.lang.String str24 = server0.toString();
    tp2.Server server25 = new tp2.Server();
    long long26 = server25.getLastUpdate();
    tp2.ITime iTime27 = server25.getTime();
    tp2.IP iP28 = null;
    boolean b29 = server25.removeBan(iP28);
    tp2.ITime iTime30 = server25.getTime();
    server0.setTime(iTime30);
    server0.update();
    tp2.Server server33 = new tp2.Server();
    tp2.ITime iTime34 = server33.getTime();
    tp2.IP iP35 = null;
    boolean b36 = server33.removeException(iP35);
    tp2.IP iP37 = null;
    boolean b38 = server33.connect(iP37);
    tp2.IP iP39 = null;
    boolean b40 = server33.removeException(iP39);
    tp2.IP iP41 = null;
    boolean b42 = server33.connect(iP41);
    tp2.IP iP43 = null;
    boolean b44 = server33.connect(iP43);
    tp2.Server server45 = new tp2.Server();
    tp2.ITime iTime46 = server45.getTime();
    tp2.Server server47 = new tp2.Server();
    tp2.ITime iTime48 = server47.getTime();
    server45.setTime(iTime48);
    server33.setTime(iTime48);
    server0.setTime(iTime48);
    tp2.IP iP52 = null;
    boolean b53 = server0.connect(iP52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long6 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long18 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str24.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long26 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);

  }

  @Test
  public void test498() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test498"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.IP iP2 = null;
    boolean b3 = server0.removeException(iP2);
    tp2.IP iP4 = null;
    boolean b5 = server0.connect(iP4);
    tp2.IP iP6 = null;
    boolean b7 = server0.removeException(iP6);
    tp2.IP iP8 = null;
    boolean b9 = server0.connect(iP8);
    tp2.ITime iTime10 = server0.getTime();
    tp2.IP iP11 = null;
    boolean b12 = server0.removeBan(iP11);
    java.lang.String str13 = server0.toString();
    tp2.IP iP14 = null;
    boolean b15 = server0.removeBan(iP14);
    tp2.IP iP16 = null;
    boolean b17 = server0.removeException(iP16);
    tp2.IP iP18 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b19 = server0.addException(iP18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str13.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test499() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test499"); }


    tp2.Server server0 = new tp2.Server();
    long long1 = server0.getLastUpdate();
    tp2.ITime iTime2 = server0.getTime();
    tp2.IP iP3 = null;
    boolean b4 = server0.removeException(iP3);
    tp2.IP iP5 = null;
    boolean b6 = server0.removeBan(iP5);
    long long7 = server0.getLastUpdate();
    java.lang.String str8 = server0.toString();
    tp2.ITime iTime9 = server0.getTime();
    long long10 = server0.getLastUpdate();
    tp2.IP iP11 = null;
    boolean b12 = server0.connect(iP11);
    tp2.ITime iTime13 = server0.getTime();
    tp2.Server server14 = new tp2.Server();
    long long15 = server14.getLastUpdate();
    server14.update();
    tp2.IP iP17 = null;
    boolean b18 = server14.removeException(iP17);
    server14.update();
    tp2.ITime iTime20 = server14.getTime();
    tp2.IP iP21 = null;
    boolean b22 = server14.removeBan(iP21);
    server14.update();
    tp2.IP iP24 = null;
    boolean b25 = server14.connect(iP24);
    tp2.ITime iTime26 = server14.getTime();
    tp2.IP iP27 = null;
    boolean b28 = server14.removeBan(iP27);
    long long29 = server14.getLastUpdate();
    tp2.ITime iTime30 = server14.getTime();
    server0.setTime(iTime30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long1 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long7 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Server [lastUpdate=0, exceptions=(), bans={}]"+ "'", str8.equals("Server [lastUpdate=0, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long10 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long15 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long29 == 1465509023814L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime30);

  }

  @Test
  public void test500() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest3.test500"); }


    tp2.Server server0 = new tp2.Server();
    tp2.ITime iTime1 = server0.getTime();
    tp2.Server server2 = new tp2.Server();
    tp2.ITime iTime3 = server2.getTime();
    server0.setTime(iTime3);
    server0.update();
    java.lang.String str6 = server0.toString();
    tp2.Server server7 = new tp2.Server();
    tp2.ITime iTime8 = server7.getTime();
    server7.update();
    tp2.ITime iTime10 = server7.getTime();
    tp2.Server server11 = new tp2.Server();
    long long12 = server11.getLastUpdate();
    tp2.ITime iTime13 = server11.getTime();
    server7.setTime(iTime13);
    server0.setTime(iTime13);
    server0.update();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Server [lastUpdate=1465509023821, exceptions=(), bans={}]"+ "'", str6.equals("Server [lastUpdate=1465509023821, exceptions=(), bans={}]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long12 == 0L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iTime13);

  }

}
